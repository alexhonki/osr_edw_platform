FUNCTION "osr.edw.source.td.fra.proxy::TF_PRT_GROUP_ALERT_RISK_SCORE_VALUE"( )
   RETURNS TABLE 
      (
   	DB_KEY					NVARCHAR(32),
   	ALERT_ID				NVARCHAR(20),
   	INVEST_OBJ_TYPE			NVARCHAR(10),
   	ABN						NVARCHAR(40),
   	GJAHR					NVARCHAR(40),
   	GROUP_ID		        NVARCHAR(40),
	INVEST_REASON			NVARCHAR(10),
	CATEGORY				NVARCHAR(10),
	WAERS					NVARCHAR(5),
   	ALERT_RISK_SCORE		INTEGER ,
   	ALERT_RISK_VALUE		DECIMAL(15,2),
   	GROUP_AVG_RISK_SCORE	DECIMAL(5,2),
   	GROUP_TOT_RISK_VALUE	DECIMAL(15,2)
   )
       LANGUAGE SQLSCRIPT 
       SQL SECURITY INVOKER AS 
BEGIN 
    /*****************************
        Write your function logic
    ****************************/
RETURN

SELECT 
	DB_KEY				,
   	ALERT_ID			,
   	INVEST_OBJ_TYPE		,
   	ABN					,
   	GJAHR				,
    GROUP_ID			,
	INVEST_REASON		,
	CATEGORY			,
	WAERS				,
   	ALERT_RISK_SCORE	,
   	ALERT_RISK_VALUE    , 
   	TO_DECIMAL(GROUP_AVG_RISK_SCORE,5,2)  AS GROUP_AVG_RISK_SCORE,
   	TO_DECIMAL(GROUP_TOT_RISK_VALUE,15,2) AS GROUP_TOT_RISK_VALUE
FROM 
(
SELECT 
   	DB_KEY				,
   	ALERT_ID			,
   	INVEST_OBJ_TYPE		,
   	INVEST_OBJ_ID	AS ABN,
   	INVEST_OBJ_ID2  AS GJAHR,
    INV_OBJ_ADD_ID2 AS GROUP_ID,
	INVEST_REASON,
	CATEGORY,
   	RISK_SCORE	 AS ALERT_RISK_SCORE,
   	RISK_VALUE	 AS ALERT_RISK_VALUE ,
	AVG(RISK_SCORE)  OVER (PARTITION BY INV_OBJ_ADD_ID2, INVEST_OBJ_ID2 ORDER BY  INV_OBJ_ADD_ID2, INVEST_OBJ_ID2 DESC) AS 	GROUP_AVG_RISK_SCORE, 
	SUM(RISK_VALUE)  OVER (PARTITION BY INV_OBJ_ADD_ID2, INVEST_OBJ_ID2 ORDER BY  INV_OBJ_ADD_ID2, INVEST_OBJ_ID2 DESC) AS 	GROUP_TOT_RISK_VALUE,
	CURRENCY AS WAERS
FROM   	
	"osr.edw.source.td.fra.proxy::CV_SAPACS_FRA_D_ALERT_ROOT"
WHERE 	LEFT(INVEST_REASON,4) = 'PRT1' AND INVEST_OBJ_TYPE = 'PT_ABN_FY' AND INV_OBJ_ADD_ID2 <> ''
ORDER BY INV_OBJ_ADD_ID2, INVEST_OBJ_ID2, INVEST_OBJ_ID
)
ORDER BY GROUP_ID, GJAHR, ABN
;
    
END;