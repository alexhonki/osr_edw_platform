FUNCTION "osr.edw.staging.md.rms.bp.proxy::TF_BP_ORG_IDS"(IV_BPARTNER NVARCHAR(10) DEFAULT '')
RETURNS TABLE (
"BPARTNER" NVARCHAR(10),
"BPARTNER_CATEGORY" NVARCHAR(1),
"BUP001" NVARCHAR(60),
"BUP002" NVARCHAR(60),
"BUP003" NVARCHAR(60),
"BUP004" NVARCHAR(60),
"BUP005" NVARCHAR(60),
"BUP006" NVARCHAR(60),
"ZABN" NVARCHAR(60),
"ZACN" NVARCHAR(60),
"ZANAME" NVARCHAR(60),
"ZASSES" NVARCHAR(60),
"ZBP" NVARCHAR(60),
"ZDEAL" NVARCHAR(60),
"ZDUTD" NVARCHAR(60),
"ZDUTE" NVARCHAR(60),
"ZDUTL" NVARCHAR(60),
"ZDUTP" NVARCHAR(60),
"ZDUTY" NVARCHAR(60),
"ZELMKY" NVARCHAR(60),
"ZFILE" NVARCHAR(60),
"ZFUEL" NVARCHAR(60),
"ZINT" NVARCHAR(60),
"ZLAND" NVARCHAR(60),
"ZOGR" NVARCHAR(60),
"ZPEX" NVARCHAR(60),
"ZPRT" NVARCHAR(60),
"ZPRTG" NVARCHAR(60),
"ZQLTX" NVARCHAR(60),
"ZRMERL" NVARCHAR(60),
"ZRMMOL" NVARCHAR(60),
"ZSPI" NVARCHAR(60),
"ZUUID" NVARCHAR(60),
"ZWORK" NVARCHAR(60)
)
       LANGUAGE SQLSCRIPT 
       SQL SECURITY INVOKER AS 
BEGIN 

DECLARE LV_BPARTNER NVARCHAR(10);

IF :IV_BPARTNER IS NULL OR :IV_BPARTNER = '' THEN 
	LV_BPARTNER := NULL;
ELSE
	SELECT LPAD(:IV_BPARTNER, 10, '0') INTO LV_BPARTNER FROM "osr.hana.platform.synonym::SYS.DUMMY";
END IF;


lt_aggr =
SELECT
"BPARTNER",
STRING_AGG("IDNUMBER", '|' ORDER BY "BPARTNER", "ID_TYPE" ASC) AS "IDNUMBER"
FROM 
"osr.edw.staging.md.rms.bp.proxy::CV_BP_ID_COMPLETE"
WHERE "BPARTNER_CATEGORY" = '2'--Org
  AND ("BPARTNER" = :LV_BPARTNER OR :LV_BPARTNER IS NULL)
  AND "ID_TYPE" IN (
  	'BUP001', 'BUP002', 'BUP003', 'BUP004',	'BUP005', 'BUP006', 
  	'ZABN',	'ZACN',	'ZANAME', 'ZASSES',	'ZBP', 'ZDEAL',	
  	'ZDUTD', 'ZDUTE', 'ZDUTL', 'ZDUTP',	'ZDUTY', 'ZELMKY', 'ZFILE',	'ZFUEL', 'ZINT', 'ZLAND',
  	'ZOGR', 'ZPEX', 'ZPRT', 'ZPRTG', 'ZQLTX',	'ZRMERL', 'ZRMMOL',	'ZSPI',	'ZUUID', 'ZWORK'
  )
GROUP BY
"BPARTNER"
;

RETURN
SELECT
"BPARTNER",
'2' AS "BPARTNER_CATEGORY",
SUBSTRING("IDNUMBER", 0, LOCATE("IDNUMBER", '|', 0,1)-1 ) as "BUP001",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,1) + 1, (LOCATE("IDNUMBER", '|', 0,2) - LOCATE("IDNUMBER", '|', 0,1) - 1)) as "BUP002",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,2) + 1, (LOCATE("IDNUMBER", '|', 0,3) - LOCATE("IDNUMBER", '|', 0,2) - 1)) as "BUP003",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,3) + 1, (LOCATE("IDNUMBER", '|', 0,4) - LOCATE("IDNUMBER", '|', 0,3) - 1)) as "BUP004",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,4) + 1, (LOCATE("IDNUMBER", '|', 0,5) - LOCATE("IDNUMBER", '|', 0,4) - 1)) as "BUP005",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,5) + 1, (LOCATE("IDNUMBER", '|', 0,6) - LOCATE("IDNUMBER", '|', 0,6) - 1)) as "BUP006",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,6) + 1, (LOCATE("IDNUMBER", '|', 0,7) - LOCATE("IDNUMBER", '|', 0,6) - 1)) as "ZABN",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,7) + 1, (LOCATE("IDNUMBER", '|', 0,8) - LOCATE("IDNUMBER", '|', 0,7) - 1)) as "ZACN",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,8) + 1, (LOCATE("IDNUMBER", '|', 0,9) - LOCATE("IDNUMBER", '|', 0,8) - 1)) as "ZANAME",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,9) + 1, (LOCATE("IDNUMBER", '|', 0,10) - LOCATE("IDNUMBER", '|', 0,9) - 1)) as "ZASSES",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,10) + 1, (LOCATE("IDNUMBER", '|', 0,11) - LOCATE("IDNUMBER", '|', 0,10) - 1)) as "ZBP",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,11) + 1, (LOCATE("IDNUMBER", '|', 0,12) - LOCATE("IDNUMBER", '|', 0,11) - 1)) as "ZDEAL",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,12) + 1, (LOCATE("IDNUMBER", '|', 0,13) - LOCATE("IDNUMBER", '|', 0,12) - 1)) as "ZDUTD",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,13) + 1, (LOCATE("IDNUMBER", '|', 0,14) - LOCATE("IDNUMBER", '|', 0,13) - 1)) as "ZDUTE",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,14) + 1, (LOCATE("IDNUMBER", '|', 0,15) - LOCATE("IDNUMBER", '|', 0,14) - 1)) as "ZDUTL",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,15) + 1, (LOCATE("IDNUMBER", '|', 0,16) - LOCATE("IDNUMBER", '|', 0,15) - 1)) as "ZDUTP",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,16) + 1, (LOCATE("IDNUMBER", '|', 0,17) - LOCATE("IDNUMBER", '|', 0,16) - 1)) as "ZDUTY",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,17) + 1, (LOCATE("IDNUMBER", '|', 0,18) - LOCATE("IDNUMBER", '|', 0,17) - 1)) as "ZELMKY",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,18) + 1, (LOCATE("IDNUMBER", '|', 0,19) - LOCATE("IDNUMBER", '|', 0,18) - 1)) as "ZFILE",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,19) + 1, (LOCATE("IDNUMBER", '|', 0,20) - LOCATE("IDNUMBER", '|', 0,19) - 1)) as "ZFUEL",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,20) + 1, (LOCATE("IDNUMBER", '|', 0,21) - LOCATE("IDNUMBER", '|', 0,20) - 1)) as "ZINT",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,21) + 1, (LOCATE("IDNUMBER", '|', 0,22) - LOCATE("IDNUMBER", '|', 0,21) - 1)) as "ZLAND",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,22) + 1, (LOCATE("IDNUMBER", '|', 0,23) - LOCATE("IDNUMBER", '|', 0,22) - 1)) as "ZOGR",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,23) + 1, (LOCATE("IDNUMBER", '|', 0,24) - LOCATE("IDNUMBER", '|', 0,23) - 1)) as "ZPEX",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,24) + 1, (LOCATE("IDNUMBER", '|', 0,25) - LOCATE("IDNUMBER", '|', 0,24) - 1)) as "ZPRT",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,25) + 1, (LOCATE("IDNUMBER", '|', 0,26) - LOCATE("IDNUMBER", '|', 0,25) - 1)) as "ZPRTG",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,26) + 1, (LOCATE("IDNUMBER", '|', 0,27) - LOCATE("IDNUMBER", '|', 0,26) - 1)) as "ZQLTX",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,27) + 1, (LOCATE("IDNUMBER", '|', 0,28) - LOCATE("IDNUMBER", '|', 0,27) - 1)) as "ZRMERL",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,28) + 1, (LOCATE("IDNUMBER", '|', 0,29) - LOCATE("IDNUMBER", '|', 0,28) - 1)) as "ZRMMOL",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,29) + 1, (LOCATE("IDNUMBER", '|', 0,30) - LOCATE("IDNUMBER", '|', 0,29) - 1)) as "ZSPI",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,30) + 1, (LOCATE("IDNUMBER", '|', 0,31) - LOCATE("IDNUMBER", '|', 0,30) - 1)) as "ZUUID",
SUBSTRING("IDNUMBER", LOCATE("IDNUMBER", '|', 0,30) + 1, (LENGTH("IDNUMBER") - LOCATE("IDNUMBER", '|', 0,30))) as "ZWORK"
FROM :lt_aggr
;

END;