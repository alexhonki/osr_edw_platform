PROCEDURE "osr.edw.integration.ti.ltax::PR_LTI_CUSTOMER_VALUES" ( )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   --READS SQL DATA 
   AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   
   
   DECLARE LV_VALUE_ID INT;
	SELECT TOP 1 VALUE_ID INTO LV_VALUE_ID FROM "osr.edw.integration.ti.ltax::app.ValueTypes";
   

   UPSERT "osr.edw.integration.ti.ltax::app.CustomerValues" (
	"CUST_ID",
	"VALUE_ID",
	"VALUE",
	"TIME_SEGMENT",
	"INIT_DATE",
	"END_DATE",
	"INIT_TIME_SEGMENT",
	"END_TIME_SEGMENT"
	)
	SELECT	CUST_ID, 
			:LV_VALUE_ID, 
			(DUEAMOUNT - CLEAREDAMOUNT) AS "VALUE",
			TO_INT(CONCAT(YEAR(MAX_DUE_DATE),LPAD(MONTH(MAX_DUE_DATE),2,0))) AS "TIME_SEGMENT",
			TO_TIMESTAMP(MAX_DUE_DATE) AS "INIT_DATE",
			TO_TIMESTAMP(MAX_DUE_DATE) AS "END_DATE",
			TO_INT(CONCAT(YEAR(MAX_DUE_DATE),LPAD(MONTH(MAX_DUE_DATE),2,0))) AS "INIT_TIME_SEGMENT",
			TO_INT(CONCAT(YEAR(MAX_DUE_DATE),LPAD(MONTH(MAX_DUE_DATE),2,0))) AS "END_TIME_SEGMENT"
			
	 FROM ( 
						SELECT CUST_ID, DUEAMOUNT, CLEAREDAMOUNT, MAX_DUE_DATE
						FROM(
								SELECT CUST_ID, MAX("FAEDN") AS "MAX_DUE_DATE", MAX("AUGDT") AS "MAX_CLEARING_DATE", SUM("BETRH") AS "DUEAMOUNT", SUM("AUGBT") AS "CLEAREDAMOUNT" FROM 
								 (
								   SELECT  TAXPAYER.CUST_ID AS "CUST_ID", BETRH , FAEDN, AUGDT, AUGBT, PERSL
									FROM "osr.edw.staging.td.rms.synonym::CDS_PSCD.DSO.DFKKOP.active_data" DEBTOR_DATA 
									INNER JOIN 
							    	"osr.edw.integration.ti.ltax::app.Customer" TAXPAYER ON TAXPAYER.EXT_ID = DEBTOR_DATA.GPART
									WHERE  KOFIZ='LT' AND HVORG = '4000'
								 ) 
						GROUP BY CUST_ID, PERSL) 
			);							


   
   
   
END