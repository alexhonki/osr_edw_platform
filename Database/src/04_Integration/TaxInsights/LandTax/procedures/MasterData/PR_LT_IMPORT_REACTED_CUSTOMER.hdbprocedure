PROCEDURE "osr.edw.integration.ti.ltax::PR_LT_IMPORT_REACTED_CUSTOMER" ( )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
  -- READS SQL DATA 
   AS
BEGIN
/*********************************************************************
DFKKOP - Item table for Contract Account Document
	KOFIZ - Account Determination ID - ('LT' for LandTax)
	BETRH - Net Due Amount
	FAEDN - Due date for net payment
	AUGDT - Clearing Date
	PERSL - Key for Period Assignment(e.g. If Assessment was done for 2010 then Period key would be 2011 here)
	HVORG - Main Transaction for Line Item ('4000'  Assessment - TAA)
	AUGBT - Clearing amount in clearing currency 
	

 1 - Get those entry from DFKKOP which are relevant for LandTax(KOFIZ = LT) with Main Transaction as Assessment(HVORG = 4000)
 2 - Group By Customer Id and Period Key(PERSL) on Above data. After step 2, We will have data Max Due Date(FAEDn), Max Clearing Date(AUGDT), Sum of DueAmount(BETRH), Sum of Cleared Amount(AUGBT) Per Cust_id per Period Key.
 3 - Check if A customer is a debtor or not in a Period Key(PERSL)
	 - If Sum of Dueamount in a Period Key > Sum Of Cleared Amount in that period key (Means Payment was not done or partially done )
		Check if MAX Due Date > Current Date
				 Customer is a Debtor
			  Else
				 Customer is not a debtor
	 - Else (Sum of DueAmount is equal to Sum of Cleared Amount)
		Check if max Clearing Date > Max Due Date
				Customer is a Debtor
			  Else 
				 Customer is not a debtor
				 
 Get Due Date per scenario
	- Invoice Document Due Date - DFKKINVDOC_H - This will always hold the Due date as per Initial Assessment
	- Reissue Due Date - LTAXASFB - This will Hold new due date for Entities who are re-issued an assessment 
	- Epo Due Date -  DFKKPPD -   This will hold Due Date for Entities who opt for a payment arrangement that extends past the initial due date
************************************************************************/
		UPSERT "osr.edw.integration.ti.ltax::app.CustomerReactions" (
		"CUST_ID",
		"REACTION_TYPE",
		"REACTION_VALUE",
		"END_DATE",
		"INIT_DATE",
		"INIT_TS",
		"END_TS" )
      	  SELECT CUST_ID, 'DEBTOR_INITIAL_ASSESSMENT' AS "REACTION_TYPE", 1 AS "REACTION_VALUE",
			    TO_TIMESTAMP(DUE_DATE) AS "END_DATE",
				TO_TIMESTAMP(DUE_DATE) AS "INIT_DATE",
				TO_INT(CONCAT(YEAR(DUE_DATE),LPAD(MONTH(DUE_DATE),2,0))) AS "INIT_TS",
				TO_INT(CONCAT(YEAR(DUE_DATE),LPAD(MONTH(DUE_DATE),2,0))) AS "END_TS"
				FROM ( 					
					SELECT CUST_ID , "osr.edw.integration.ti.ltax::TF_LT_CHECK_IF_TP_DEBTOR"(CLEARED_DATE, DUE_DATE).ISDEBTOR AS ISDEBTOR, DUE_DATE FROM 
					(
					SELECT CUST_ID, MAX(CLEARING_DATE) AS CLEARED_DATE, MAX(DUE_DATE) AS DUE_DATE , DUE_YEAR FROM(					
					SELECT A8.OPBEL ,COALESCE(PAYMENT_DATE, A8.AUGVD, A8.AUGDT) AS CLEARING_DATE , CUST_ID AS "CUST_ID", A8.BETRH , 
							A8.FAEDN, A8.AUGDT, A8.AUGBT, A8.PERSL,A8.FBNUM, INV_DUEDATE,  EPODueDate, REISSUE_DUE_DATE , COALESCE(EPODueDate,REISSUE_DUE_DATE,INV_DUEDATE) as DUE_DATE,
							YEAR(COALESCE(REISSUE_DUE_DATE,EPODueDate,INV_DUEDATE)) AS DUE_YEAR
							FROM	(SELECT   DEBTOR_DATA.OPBEL,OPUPW,OPUPK,OPUPZ, TAXPAYER.CUST_ID AS "CUST_ID", BETRH , 
								     			DEBTOR_DATA.FAEDN, AUGDT, AUGVD, AUGBT, AUGBL, PERSL,DEBTOR_DATA.FBNUM, B.FAEDN AS INV_DUEDATE, 
								     			B3.DueDate as EPODueDate, CASE WHEN B4.REISSUE_DUE_DATE = '00000000' THEN NULL ELSE B4.REISSUE_DUE_DATE END AS REISSUE_DUE_DATE
												FROM "osr.edw.staging.td.rms.synonym::CDS_PSCD.DSO.DFKKOP.active_data" DEBTOR_DATA 
												    INNER JOIN
												"osr.edw.staging.td.rms.synonym::CDS_LAND.DSO.DFKKINVDOC_H.active_data" B 
												ON  DEBTOR_DATA.XBLNR =  CAST(LPAD(B.INVDOCNO,16,0) AS VARCHAR)
													LEFT JOIN
												(SELECT  B2.OPBEL, DueDate  FROM "osr.edw.staging.td.rms.synonym::CDS_PSCD.DSO.DFKKPP.active_data" A2 
														INNER JOIN 
												(SELECT  PPKEY, OPBEL, DueDate FROM (SELECT DISTINCT A1.PPKEY, opbel, DueDate FROM "osr.edw.staging.td.rms.synonym::CDS_PSCD.DSO.DFKKPPP.active_data" A1
														INNER JOIN 	
												(SELECT PPKEY,MAX(PRDAT) as DueDate FROM "osr.edw.staging.td.rms.synonym::CDS_PSCD.DSO.DFKKPPD.active_data" GROUP BY PPKEY) B1 on A1.PPKEY = B1.PPKEY )) B2
												   ON A2.PPKEY = B2.PPKEY WHERE PPCAT = 'Z7' AND PPSTA in ('1','')) B3 ON DEBTOR_DATA.OPBEL = B3.OPBEL
														LEFT JOIN
												"osr.edw.source.td.rms.synonym::CDS_LAND.TAB.LTAXASFB" B4
													ON B4.ASSESS_FBNUM = DEBTOR_DATA.FBNUM
														INNER JOIN 
												 "osr.edw.integration.ti.ltax::app.Customer" TAXPAYER ON TAXPAYER.EXT_ID = DEBTOR_DATA.GPART
												 WHERE  KOFIZ='LT' AND HVORG = '4000'  AND TVORG = '0150') AS A8--AND TAXPAYER.CUST_ID = 1275802  
													LEFT JOIN
										(SELECT AUGBL, MAX(FAEDN) AS PAYMENT_DATE FROM "osr.edw.staging.td.rms.synonym::CDS_PSCD.DSO.DFKKOP.active_data" A6 
										   WHERE AUGBL IN (SELECT AUGBL from  "osr.edw.staging.td.rms.synonym::CDS_PSCD.DSO.DFKKOP.active_data" WHERE AUGBL != '')
											AND A6.HVORG = '5000' GROUP BY AUGBL ) B8 
											ON A8.AUGBL = B8.AUGBL WHERE FBNUM = '400003874551'	) GROUP BY 	CUST_ID, DUE_YEAR)
					)WHERE ISDEBTOR = 1;
		
														
												
END