FUNCTION "osr.edw.platform.fra.prt.model::TF_TPAR_PAYEE_PRE_CAL_FIELDS"(
	IN IP_FY NVARCHAR(4)


)
RETURNS TABLE
       (
--TPAR       	
	PAYEE_ABN						NVARCHAR(11),
	PAYER_ABN						NVARCHAR(11),
	GJAHR							NVARCHAR(4),
	GROSS_PD_AMT					DECIMAL(15,2),
	TW_TOTL_AMT						DECIMAL(15,2),
	GST_TOTL_AMT					DECIMAL(15,2),
	EX_GST_GROSS_PD_AMT				DECIMAL(15,2),

--ABR	
	BUSS_LOC_STATE					NVARCHAR(3),
	ENT_TYP_CD						NVARCHAR(3),

--ITR	
	TOTL_BUS_INCM_AMT				DECIMAL(15,2),
	CONTRACTORS_PMNTS				DECIMAL(15,2),
	BUS_INCM_PER					DECIMAL(15,2),
--EMP CNT	
	TOTAL_EMP_CNT					INTEGER,

--WCQ
	WCQ_ACT_WAGES					DECIMAL(15,2),
--RMS
	PARTNER							NVARCHAR(10),
--	PRT_LIAB_DATE					NVARCHAR(8),
--	QLD_LIAB_DATE					NVARCHAR(8),
--	PRT_GRP_STATUS					NVARCHAR(40),
--	VALID_FROM						NVARCHAR(8),
--	VALID_TO						NVARCHAR(8),
	PRT_REG_STATUS                  NVARCHAR(1)
      	
       )
       
       LANGUAGE SQLSCRIPT 
       SQL SECURITY INVOKER AS 
BEGIN 
    /*****************************
        Write your function logic
    ****************************/
  
  
DECLARE sdate DATE;
DECLARE edate DATE;
DECLARE PERIODKEY NVARCHAR(4);
DECLARE FY NVARCHAR(4);

FY_DATES =
SELECT DISTINCT
	"FISCAL_YEAR",
	CASE WHEN "FISCAL_YEAR" <> '' THEN "FISCAL_YEAR" ELSE ''END AS  "PERIOD_KEY",
	CASE WHEN "FISCAL_YEAR" <> '' THEN TO_NVARCHAR(TO_DATS(MIN(DATE_SQL))) ELSE '' END AS "ST_DATE",
	CASE WHEN "FISCAL_YEAR" <> '' THEN TO_NVARCHAR(TO_DATS(MAX(DATE_SQL))) ELSE '' END AS "EN_DATE",
	ROW_NUMBER() OVER (ORDER BY "FISCAL_YEAR" ASC) AS "ROW_NUM"
FROM "osr.hana.platform.synonym::_SYS_BI.M_FISCAL_CALENDAR"
WHERE "CALENDAR_VARIANT" = 'Z6'
AND TO_NVARCHAR("FISCAL_YEAR") = :IP_FY
GROUP BY "FISCAL_YEAR"
;

SELECT DISTINCT "ST_DATE"     INTO sdate     FROM :FY_DATES ;
SELECT DISTINCT "EN_DATE"     INTO edate     FROM :FY_DATES ;
SELECT DISTINCT "PERIOD_KEY"  INTO PERIODKEY FROM :FY_DATES ;
SELECT DISTINCT :IP_FY		  INTO FY		 FROM :FY_DATES ;

PAYEE_DATASET =
SELECT 	
	"PAYEE_ABN",
	"PAYER_ABN",
	"FINANCIAL_YEAR",
	SUM("GROSS_PD_AMT") AS "GROSS_PD_AMT",
	SUM("TW_TOTL_AMT")	AS "TW_TOTL_AMT",
	SUM("GST_TOTL_AMT") AS "GST_TOTL_AMT",
	SUM("EX_GST_GROSS_PD_AMT") AS "EX_GST_GROSS_PD_AMT"
FROM
(
SELECT * FROM
(
SELECT 
	"PAYEE_ABN",
	"PAYER_ABN",
	TO_NVARCHAR("FINANCIAL_YEAR") AS "FINANCIAL_YEAR",
	"GROSS_PD_AMT",
	"TW_TOTL_AMT",
	"GST_TOTL_AMT",
	("GROSS_PD_AMT" - "GST_TOTL_AMT" ) AS "EX_GST_GROSS_PD_AMT"
FROM "osr.edw.staging.td.ato.proxy::TF_TPAR_PAYEE_C"()
WHERE TO_NVARCHAR("FINANCIAL_YEAR")  = :IP_FY 
AND   "PAYEE_ABN"      <> ''
)
WHERE    "PAYER_ABN"      <> ''
)
GROUP BY
	"PAYEE_ABN",
	"PAYER_ABN",
	"FINANCIAL_YEAR"
;



ABR_BUS_ADDR =

SELECT DISTINCT
	"A"."PAYEE_ABN",
	"B"."MN_BUS_STT",
	"B"."ENT_TYP_CD"
FROM
:PAYEE_DATASET AS "A"
INNER JOIN
"osr.edw.staging.md.abr.proxy::TF_AGENCY_DATA_C"() AS "B"

ON
	"A"."PAYEE_ABN" = 	"B"."ABN"
;


--------------ATO ITR--------------------------
PAYEE_ITR =

SELECT 
	"TPAR"."PAYEE_ABN",
	"TPAR"."PAYER_ABN",
	"TPAR"."FINANCIAL_YEAR",
	"TPAR"."EX_GST_GROSS_PD_AMT",
	"ITR"."TOTL_BUS_INCM_AMT",
	"ITR"."CONTRACTORS_PMNTS",
	CASE WHEN "ITR"."TOTL_BUS_INCM_AMT" = 0 THEN 100 ELSE 
	CASE WHEN "ITR"."TOTL_BUS_INCM_AMT" < "TPAR"."EX_GST_GROSS_PD_AMT"  THEN 100 ELSE 
	CASE WHEN "ITR"."TOTL_BUS_INCM_AMT" > 0 THEN ("TPAR"."EX_GST_GROSS_PD_AMT" / "ITR"."TOTL_BUS_INCM_AMT")* 100 ELSE 0 END END END AS "BUS_INCM_PER"
FROM
:PAYEE_DATASET AS "TPAR"
LEFT OUTER JOIN
(
SELECT 
	"ABN",
	TO_NVARCHAR("INCM_YR") AS "INCM_YR",
	SUM("TOTL_BUS_INCM_AMT") AS "TOTL_BUS_INCM_AMT",
	SUM("CONTRACTORS_PMNTS") AS "CONTRACTORS_PMNTS"
FROM "osr.edw.staging.td.ato.synonym::CDS_ITR.DSO.ITRNIND.active_data"
WHERE ABN IN (SELECT DISTINCT "PAYEE_ABN" FROM :PAYEE_DATASET  ) 
AND TO_NVARCHAR("INCM_YR") = :FY
GROUP BY
	"ABN",
	"INCM_YR"
	
UNION

SELECT 
	"ABN",
	TO_NVARCHAR("INCM_YR") AS "INCM_YR",
	SUM("TOTL_BUS_INCM_AMT") AS "TOTL_BUS_INCM_AMT",
	SUM("CONTRACTORS_PMNTS") AS "CONTRACTORS_PMNTS"
FROM "osr.edw.staging.td.ato.synonym::CDS_ITR.DSO.ITRIND.active_data"
WHERE ABN IN (SELECT DISTINCT "PAYEE_ABN" FROM :PAYEE_DATASET  ) 
AND TO_NVARCHAR("INCM_YR") = :FY
GROUP BY
	"ABN",
	"INCM_YR"
) AS "ITR" 
ON  "TPAR"."PAYEE_ABN" = "ITR"."ABN"

;

------ATO EMP CNT-----------------------------

EMP_CNT =

SELECT 
 	"ABN",
	"INCM_YR",
	"TOTAL_EMP_CNT"
FROM
(

SELECT 
	"ABN",
	TO_NVARCHAR("INCM_YR") AS "INCM_YR",
	SUM("CNT_EMPLOYEE") AS "TOTAL_EMP_CNT"
FROM "osr.edw.staging.td.ato.proxy::TF_EMP_CNT_C"() AS"EMP_CNT"
WHERE ABN IN (SELECT DISTINCT "PAYEE_ABN" FROM :PAYEE_DATASET  ) 
AND TO_NVARCHAR("INCM_YR") = :FY
GROUP BY "ABN","INCM_YR"

)
;


--------------WCQ Data----------------------

WCQ_DATA =
  SELECT "POLICY_NO", "ABN", "FINANCIAL_YEAR", SUM("WCQ_ACT_WAGES") AS "WCQ_ACT_WAGES"
  FROM
  (
  SELECT 
    	"WCQ_WAGES"."POLICY_NO"								AS	"POLICY_NO",
		LEFT("WCQ_POLICY"."ABN",11)                         AS  "ABN", 
		LEFT("WCQ_WAGES"."ASSESSMENT_YEAR",4)           	AS  "FINANCIAL_YEAR",
		"WCQ_WAGES"."ACT_WAGES"                            AS	"WCQ_ACT_WAGES"
	FROM 
		"osr.edw.staging.td.wcq.proxy::TF_POLICY_WAGES_C"() AS "WCQ_WAGES"
	INNER JOIN 
		(
	SELECT DISTINCT
		"POLICY_NO",
		"ABN"
	FROM
	"osr.edw.staging.md.wcq.proxy::TF_POLICY_DETAILS_C"()
	WHERE ABN IN (SELECT DISTINCT "PAYEE_ABN" FROM :PAYEE_DATASET) 
	AND INSURED_FROM <= :edate
	AND CEASED_DATE >= :sdate
		) AS "WCQ_POLICY"
	ON  "WCQ_WAGES"."POLICY_NO" = "WCQ_POLICY"."POLICY_NO"
	WHERE LEFT("WCQ_WAGES"."ASSESSMENT_YEAR",4)  = :FY
  ) Group BY "POLICY_NO", "ABN", "FINANCIAL_YEAR"

	;

-----RMS---------------
BUT0ID =
SELECT DISTINCT
	"PARTNER" AS "PARTNER",
	"TYPE" AS "TYPE",
	"IDNUMBER" AS "IDNUMBER"
	FROM "osr.edw.staging.md.rms.synonym::CDS_BP.DSO.BUT0ID.active_data" 
WHERE "TYPE" = 'ZABN'
AND  "IDNUMBER"  IN (SELECT DISTINCT "PAYEE_ABN" FROM :PAYEE_DATASET)

;

RMS_PTX_DATA =
SELECT DISTINCT 
		"ABN" ,
		"PARTNER",
		'Y' AS "PRT_REG_STATUS"
FROM
(
SELECT DISTINCT
	"PARTNER",
	"IDNUMBER" AS "ABN",
	"PSOBKEY"  AS "OBJID"
FROM
(
SELECT DISTINCT
	"A"."PARTNER",
	"A"."IDNUMBER",
	"B"."PSOBKEY"
FROM 
	:BUT0ID  AS "A"
INNER JOIN
	(SELECT 
			"PSOBKEY", 
			"PARTNER" 
	FROM "osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DPSOBBPACC.active_data" 
	WHERE "PARTNERACCTYP" = 'PT' AND "XOBSL" <> 'X') AS "B"
ON
	"A"."PARTNER" = "B"."PARTNER"
)
)
;


/*
PRT_DATA =
SELECT * FROM
(
SELECT DISTINCT
"OBJID",
"PARTNER",
"ABN",
"FACT_CAT_SEQ_21" AS  "PRT_LIAB_DATE",
"FACT_CAT_SEQ_20" AS  "QLD_LIAB_DATE",
"FACT_CAT_SEQ_11" AS  "PRT_GRP_STATUS",
CASE WHEN "VALID_FROM" < '19000101' THEN TO_DATS('19000101') ELSE TO_DATS(LEFT("VALID_FROM",8)) END AS "VALID_FROM" ,
TO_DATS(LEFT("VALID_TO",8)) AS "VALID_TO",
'Y' AS "PRT_REG_STATUS"
FROM
(
SELECT 
"A"."OBJID",
"A"."PARTNER",
"A"."ABN",
"A"."VALID_FROM",
"A"."VALID_TO",
"B"."VALUE_GENERIC" AS "FACT_CAT_SEQ_21",
"C"."VALUE_GENERIC" AS "FACT_CAT_SEQ_20", 
"D"."VALUE_GENERIC" AS "FACT_CAT_SEQ_11"
FROM
	(
	SELECT * FROM
	(
	SELECT
		"OBJID",
		"PARTNER",
		"ABN",
		"VALID_FROM",
		"VALID_TO",
		RANK() OVER (PARTITION BY "OBJID","ABN" ORDER BY   "OBJID","ABN"  , "VALID_FROM" DESC , "VALID_TO" DESC) AS "RANK_1"
	FROM
		(
		SELECT 
			"A"."OBJID",
			"A"."PARTNER",
			"A"."ABN",
			TO_NVARCHAR(LEFT("E"."VALID_FROM",8)) AS "VALID_FROM",
			TO_NVARCHAR(LEFT("E"."VALID_TO",8)) AS "VALID_TO"
		FROM

			:RMS_PTX_DATA  AS "A"  

		INNER JOIN
			"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "E" ON
			"A"."OBJID" = "E"."OBJID"
		WHERE 
				"E"."FACT_TYPE" = 'ZPRE'
		AND 	"E"."FACT_CAT_SEQ" = '11'
		AND     TO_NVARCHAR(LEFT("E"."VALID_FROM",8)) <= TO_NVARCHAR(TO_DATS(:edate))
		AND     TO_NVARCHAR(LEFT("E"."VALID_TO",8))   >= TO_NVARCHAR(TO_DATS(:sdate))   
		)
	)
	WHERE RANK_1 = 1
	) AS "A"

INNER JOIN
"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "B" ON
"A"."OBJID" = "B"."OBJID"
AND "A"."VALID_FROM" = TO_NVARCHAR(LEFT("B"."VALID_FROM",8))
AND "A"."VALID_TO" = TO_NVARCHAR(LEFT("B"."VALID_TO",8))

INNER JOIN
"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "C" ON
"A"."OBJID" = "C"."OBJID"
AND "A"."VALID_FROM" = TO_NVARCHAR(LEFT("C"."VALID_FROM",8))
AND "A"."VALID_TO" = TO_NVARCHAR(LEFT("C"."VALID_TO",8))

INNER JOIN
"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "D" ON
"A"."OBJID" = "D"."OBJID"
AND "A"."VALID_FROM" = TO_NVARCHAR(LEFT("D"."VALID_FROM",8))
AND "A"."VALID_TO" = TO_NVARCHAR(LEFT("D"."VALID_TO",8))

WHERE 

	"B"."FACT_TYPE" = 'ZPRE'
AND "B"."FACT_CAT_SEQ" = '21'

AND "C"."FACT_TYPE" = 'ZPRE'
AND "C"."FACT_CAT_SEQ" = '20'

AND "D"."FACT_TYPE" = 'ZPRE'
AND "D"."FACT_CAT_SEQ" = '11'

)
)

;

*/



--------------------


RETURN
SELECT DISTINCT

	"PAYEE"."PAYEE_ABN",
	"PAYEE"."PAYER_ABN",
	"PAYEE"."FINANCIAL_YEAR" AS "GJAHR",
	"PAYEE"."GROSS_PD_AMT",
	"PAYEE"."TW_TOTL_AMT",
	"PAYEE"."GST_TOTL_AMT",
	"PAYEE"."EX_GST_GROSS_PD_AMT",
	"ABR"."MN_BUS_STT" AS "BUSS_LOC_STATE",
	"ABR"."ENT_TYP_CD" AS "ENT_TYP_CD",
/*
	"ITR"."TOTL_BUS_INCM_AMT" ,
	"ITR"."CONTRACTORS_PMNTS" ,
	"ITR"."BUS_INCM_PER",		
--	"EMP"."TOTAL_EMP_CNT"  ,   
--	"EMP"."QLD_CNT_EMPLOYEE",  
	"WCQ"."WCQ_ACT_WAGES"  ,   
	"PRT"."PARTNER"		,	
	"PRT"."PRT_LIAB_DATE" ,	
	"PRT"."QLD_LIAB_DATE" ,	
	"PRT"."PRT_GRP_STATUS",	
	"PRT"."VALID_FROM"	,	
	"PRT"."VALID_TO"			
	
*/	
	CASE WHEN "ITR"."TOTL_BUS_INCM_AMT" IS NULL THEN 0	ELSE "ITR"."TOTL_BUS_INCM_AMT"	END AS "TOTL_BUS_INCM_AMT",
	CASE WHEN "ITR"."CONTRACTORS_PMNTS" IS NULL THEN 0	ELSE "ITR"."CONTRACTORS_PMNTS"	END AS "CONTRACTORS_PMNTS",
	CASE WHEN "ITR"."BUS_INCM_PER"		IS NULL THEN 0	ELSE "ITR"."BUS_INCM_PER"		END AS "BUS_INCM_PER"	,
	CASE WHEN "EMP"."TOTAL_EMP_CNT"     IS NULL THEN 0	ELSE "EMP"."TOTAL_EMP_CNT"      END AS "TOTAL_EMP_CNT",
	CASE WHEN "WCQ"."WCQ_ACT_WAGES"     IS NULL THEN 0  ELSE "WCQ"."WCQ_ACT_WAGES"      END AS "WCQ_ACT_WAGES",
	CASE WHEN "PRT"."PARTNER"			IS NULL THEN '' ELSE "PRT"."PARTNER"			END AS "PARTNER",	
--	CASE WHEN "PRT"."PRT_LIAB_DATE" 	IS NULL THEN '' ELSE "PRT"."PRT_LIAB_DATE"		END AS "PRT_LIAB_DATE",	
--	CASE WHEN "PRT"."QLD_LIAB_DATE" 	IS NULL THEN '' ELSE "PRT"."QLD_LIAB_DATE"		END AS "QLD_LIAB_DATE",	
---	CASE WHEN "PRT"."PRT_GRP_STATUS"	IS NULL THEN '' ELSE "PRT"."PRT_GRP_STATUS"		END AS "PRT_GRP_STATUS",	
--	CASE WHEN "PRT"."VALID_FROM"		IS NULL THEN '' ELSE "PRT"."VALID_FROM"			END AS "VALID_FROM",	
--	CASE WHEN "PRT"."VALID_TO"			IS NULL THEN '' ELSE "PRT"."VALID_TO"			END AS "VALID_TO"	,
    CASE WHEN "PRT"."PRT_REG_STATUS"    IS NULL THEN 'N' ELSE "PRT"."PRT_REG_STATUS"    END AS "PRT_REG_STATUS" 
	
FROM :PAYEE_DATASET AS "PAYEE"
LEFT OUTER JOIN
:ABR_BUS_ADDR AS "ABR"
ON
"PAYEE"."PAYEE_ABN" = "ABR"."PAYEE_ABN"

LEFT OUTER JOIN
:PAYEE_ITR AS "ITR"
ON
"PAYEE"."PAYEE_ABN" = "ITR"."PAYEE_ABN"
AND "PAYEE"."PAYER_ABN" = "ITR"."PAYER_ABN"

LEFT OUTER JOIN
:EMP_CNT AS "EMP"
ON
"PAYEE"."PAYEE_ABN" = "EMP"."ABN"

LEFT OUTER JOIN
:RMS_PTX_DATA  AS "PRT"
ON
"PAYEE"."PAYEE_ABN" = "PRT"."ABN"

LEFT OUTER JOIN
:WCQ_DATA  AS "WCQ"
ON
"PAYEE"."PAYEE_ABN" = "WCQ"."ABN"

;

END;