PROCEDURE "osr.edw.platform.fra.prt.model::SP_GRP_FINALIZE2"(
	IN	IV_GRP_DATE 			DATE ,
	OUT ET_GROUP_SUMMARY		"osr.edw.platform.fra.prt.model::Types.GroupSummaryT2",
	OUT ET_GROUP_ID			    "osr.edw.platform.fra.prt.model::Types.GroupIDT"
	)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   READS SQL DATA AS
BEGIN
/*
        table type GroupSummaryT2 {
        GJAHR                : String(4);
        GRP_DATE             : LocalDate;
        ELEMENT_ID           : String(32); -- this is ORG_ID string (10) in the old model
        GROUP_ID             : String(32);
        ACN                  : String(9);
        ABN                  : String(11);
        DR_GROUP_MEM         : String(1);
        SH_GROUP_MEM         : String(1);
        INTERSTATE_GROUP_MEM : String(1);
        CCDR_GROUP_MEM       : String(1);
        CCSH_GROUP_MEM       : String(1);
        CCTRL_GROUP_MEM      : String(1);
        TR_GROUP_MEM         : String(1);
        RBC_GROUP_MEM        : String(1);
        MEM_REL_BODY_CORP    : String(1);
    };
*/

DECLARE LV_GJAHR NVARCHAR(4);
DECLARE LV_GRP_DATE DATE;

IF :IV_GRP_DATE IS NULL OR :IV_GRP_DATE = TO_DATE('9999-12-31') OR :IV_GRP_DATE = '' THEN 
	SELECT CURRENT_DATE INTO LV_GRP_DATE FROM "osr.hana.platform.synonym::SYS.DUMMY";
ELSE
	LV_GRP_DATE := :IV_GRP_DATE;
END IF;


SELECT "osr.edw.platform.fra.prt.model::TF_GET_FISCAL_YEAR"(:LV_GRP_DATE).EV_GJAHR INTO LV_GJAHR
FROM "osr.hana.platform.synonym::SYS.DUMMY";

lt_initial_group = 
SELECT "GROUP_ID", "ORG_ID" AS "ELEMENT_ID", 1 AS "DR_GROUP_CNT", 0 AS "SH_GROUP_CNT", 0 AS "INTERSTATE_GROUP_CNT", 0 AS "CCTRL_GROUP_CNT", 0 AS "CCDR_GROUP_CNT", 0 AS "CCSH_GROUP_CNT", 0 AS "TR_GROUP_CNT"
FROM "osr.apps.acs.synonym::SAPACS.PRTGRPI"
WHERE "GROUP_TYPE" = 'DR'
  AND "GRP_DATE" = :LV_GRP_DATE
  AND "GROUP_ID" IN ( '027B66D7E0DAC40A2285873F677564E8', '6E2BE56922C746121CEE9FC21833A6F8') -- remove after testing
UNION
SELECT "GROUP_ID", "ORG_ID" AS "ELEMENT_ID", 0 AS "DR_GROUP_CNT", 1 AS "SH_GROUP_CNT", 0 AS "INTERSTATE_GROUP_CNT", 0 AS "CCTRL_GROUP_CNT", 0 AS "CCDR_GROUP_CNT", 0 AS "CCSH_GROUP_CNT", 0 AS "TR_GROUP_CNT"
FROM "osr.apps.acs.synonym::SAPACS.PRTGRPI"
WHERE "GROUP_TYPE" = 'SH'
  AND "GRP_DATE" = :LV_GRP_DATE
   AND "GROUP_ID" IN ( '027B66D7E0DAC40A2285873F677564E8', '6E2BE56922C746121CEE9FC21833A6F8') -- remove after testing
UNION
SELECT "GROUP_ID", "ORG_ID" AS "ELEMENT_ID", 0 AS "DR_GROUP_CNT", 0 AS "SH_GROUP_CNT", 1 AS "INTERSTATE_GROUP_CNT", 0 AS "CCTRL_GROUP_CNT", 0 AS "CCDR_GROUP_CNT", 0 AS "CCSH_GROUP_CNT", 0 AS "TR_GROUP_CNT"
FROM "osr.apps.acs.synonym::SAPACS.PRTGRPI"
WHERE "GROUP_TYPE" = 'IS'
  AND "GRP_DATE" = :LV_GRP_DATE
   AND "GROUP_ID" IN ( '027B66D7E0DAC40A2285873F677564E8', '6E2BE56922C746121CEE9FC21833A6F8') -- remove after testing
UNION
SELECT "GROUP_ID",  "ORG_ID" AS "ELEMENT_ID", 0 AS "DR_GROUP_CNT", 0 AS "SH_GROUP_CNT", 0 AS "INTERSTATE_GROUP_CNT", 1 AS "CCTRL_GROUP_CNT", 1 AS "CCDR_GROUP_CNT", 0 AS "CCSH_GROUP_CNT", 0 AS "TR_GROUP_CNT"
FROM "osr.apps.acs.synonym::SAPACS.PRTGRPI"
WHERE "GROUP_TYPE" = 'CCDR'
  AND "GRP_DATE" = :LV_GRP_DATE
   AND "GROUP_ID" IN ( '027B66D7E0DAC40A2285873F677564E8', '6E2BE56922C746121CEE9FC21833A6F8') -- remove after testing
UNION
SELECT "GROUP_ID", "ORG_ID" AS "ELEMENT_ID", 0 AS "DR_GROUP_CNT", 0 AS "SH_GROUP_CNT", 0 AS "INTERSTATE_GROUP_CNT", 1 AS "CCTRL_GROUP_CNT", 0 AS "CCDR_GROUP_CNT", 1 AS "CCSH_GROUP_CNT", 0 AS "TR_GROUP_CNT"
FROM "osr.apps.acs.synonym::SAPACS.PRTGRPI"
WHERE "GROUP_TYPE" = 'CCSH'
  AND "GRP_DATE" = :LV_GRP_DATE
   AND "GROUP_ID" IN ( '027B66D7E0DAC40A2285873F677564E8', '6E2BE56922C746121CEE9FC21833A6F8') -- remove after testing
UNION
SELECT "GROUP_ID", "ELEMENT_ID", 0 AS "DR_GROUP_CNT", 0 AS "SH_GROUP_CNT", 0 AS "INTERSTATE_GROUP_CNT", 0 AS "CCTRL_GROUP_CNT", 0 AS "CCDR_GROUP_CNT", 0 AS "CCSH_GROUP_CNT", 1 AS "TR_GROUP_CNT"
FROM "osr.apps.acs.synonym::SAPACS.PRTGRPI2"
WHERE "GROUP_TYPE" = 'TR'
  AND "GRP_DATE" = :LV_GRP_DATE
  AND LEFT("ELEMENT_ID",1) <> 'C' 
UNION 
-- Add in trust director org groups
SELECT  "GROUP_ID", 'O'||"ACN" AS "ELEMENT_ID", 0 AS "DR_GROUP_CNT", 0 AS "SH_GROUP_CNT", 0 AS "INTERSTATE_GROUP_CNT", 0 AS "CCTRL_GROUP_CNT", 0 AS "CCDR_GROUP_CNT", 0 AS "CCSH_GROUP_CNT", 1 AS "TR_GROUP_CNT"
FROM "osr.edw.platform.fra.prt.model::TF_TR_DR_REL"(:LV_GRP_DATE)

;

lt_rbc_grp_mem = 
SELECT "ORG_ID" AS "ELEMENT_ID"
FROM "osr.edw.platform.fra.prt.model::CV_GRP_INITIAL_GROUP"
WHERE "GROUP_TYPE" = 'SH'
  AND "GRP_DATE" = :LV_GRP_DATE
  AND "GROUP_DESCR" LIKE 'O%'
  ;


	lt_element_detail = 
	SELECT 
	:LV_GJAHR AS "GJAHR", 
	:LV_GRP_DATE AS "GRP_DATE", 
	"L"."ELEMENT_ID" AS "ELEMENT_ID", 
	"L"."DR_GROUP_MEM", 
	"L"."SH_GROUP_MEM", 
	"L"."INTERSTATE_GROUP_MEM",  
	"L"."CCDR_GROUP_MEM", 
	"L"."CCSH_GROUP_MEM", 
	"L"."CCTRL_GROUP_MEM", 
	"L"."TR_GROUP_MEM",
	CASE WHEN "R"."ELEMENT_ID" IS NULL THEN 'N' ELSE 'Y' END AS "RBC_GROUP_MEM"
	FROM 
	(
	SELECT 
	:LV_GRP_DATE AS "GJAHR", 
	:LV_GRP_DATE AS "GRP_DATE", 
	"ELEMENT_ID",
	CASE WHEN ("DR_GROUP_CNT">0) THEN 'Y' ELSE 'N' END AS "DR_GROUP_MEM",
	CASE WHEN ("SH_GROUP_CNT">0) THEN 'Y' ELSE 'N' END AS "SH_GROUP_MEM",
	CASE WHEN ("INTERSTATE_GROUP_CNT" >0) THEN 'Y' ELSE 'N' END AS "INTERSTATE_GROUP_MEM",
	CASE WHEN ("CCTRL_GROUP_CNT">0) THEN 'Y' ELSE 'N' END AS "CCTRL_GROUP_MEM",
	CASE WHEN ("CCDR_GROUP_CNT">0) THEN 'Y' ELSE 'N' END AS "CCDR_GROUP_MEM",
	CASE WHEN ("CCSH_GROUP_CNT">0) THEN 'Y' ELSE 'N' END AS "CCSH_GROUP_MEM",
	CASE WHEN ("TR_GROUP_CNT">0) THEN 'Y' ELSE 'N' END AS "TR_GROUP_MEM"
	FROM
		(
		SELECT 
		"ELEMENT_ID", 
		SUM("DR_GROUP_CNT") AS "DR_GROUP_CNT", 
		SUM("SH_GROUP_CNT") AS "SH_GROUP_CNT", 
		SUM("INTERSTATE_GROUP_CNT") AS "INTERSTATE_GROUP_CNT", 
		SUM("CCTRL_GROUP_CNT") AS "CCTRL_GROUP_CNT", 
		SUM("CCDR_GROUP_CNT") AS "CCDR_GROUP_CNT",
		SUM("CCSH_GROUP_CNT") AS "CCSH_GROUP_CNT",
		SUM("TR_GROUP_CNT") AS "TR_GROUP_CNT" 
		FROM :lt_initial_group
		GROUP BY "ELEMENT_ID"
		)
	) AS "L"
	LEFT OUTER JOIN
	:lt_rbc_grp_mem AS "R"
	ON "L"."ELEMENT_ID"  = "R"."ELEMENT_ID"
	;
	
lt_group = 
SELECT 
"GJAHR",
TO_DATE(LEFT("GRP_DATE",4)|| '-' || RIGHT(LEFT("GRP_DATE",6),2) || '-' || RIGHT("GRP_DATE",2)) AS "GRP_DATE",
"ELEMENT" AS "ELEMENT_ID", 
"PARENT_ELEMENT" AS "GROUP_ID_DS"
FROM "osr.apps.acs.synonym::SAPACS.PRTGRPD2"
WHERE LEFT("ELEMENT",1) = 'O' OR LEFT("ELEMENT",1) = 'T' 
  AND "GRP_DATE" = :LV_GRP_DATE
 UNION 
SELECT 
"GJAHR",
TO_DATE(LEFT("GRP_DATE",4)|| '-' || RIGHT(LEFT("GRP_DATE",6),2) || '-' || RIGHT("GRP_DATE",2)) AS "GRP_DATE",
"ELEMENT" AS "ELEMENT_ID", 
"PARENT_ELEMENT" AS "GROUP_ID_DS"
FROM "osr.apps.acs.synonym::SAPACS.PRTGRPDS"
WHERE LEFT("ELEMENT",1) = 'O'
  AND "GRP_DATE" = :LV_GRP_DATE 
  AND "ELEMENT" NOT IN (
  	SELECT "ELEMENT" FROM "osr.apps.acs.synonym::SAPACS.PRTGRPD2" WHERE "GRP_DATE" = :LV_GRP_DATE 
  )
  AND "ELEMENT" IN ('O002159702', 'O093662189', 'O604023029')
 
;

lt_group_id =
SELECT
"GJAHR",
"GRP_DATE",
CAST(HASH_MD5(TO_BINARY("GROUP_DESCR")) AS NVARCHAR) AS "GROUP_ID", 
"GROUP_DESCR",
"GROUP_ID_DS"
FROM (
SELECT 
"GJAHR",
"GRP_DATE",
"GROUP_ID_DS",
STRING_AGG("ELEMENT_ID", '|' ORDER BY "ELEMENT_ID" ASC) AS "GROUP_DESCR"
FROM
:lt_group
GROUP BY 
"GJAHR",
"GRP_DATE",
"GROUP_ID_DS"
)
;

et_group_id = 
SELECT 
"GJAHR",
"GRP_DATE",
"GROUP_ID", 
'SUB2' AS "GROUP_TYPE",
LEFT("GROUP_DESCR",1333) AS "GROUP_DESCR"
FROM :lt_group_id
;


lt_group_w_group_id = 
SELECT 
"GROUP"."GJAHR" AS "GJAHR",
"GROUP"."GRP_DATE" AS "GRP_DATE",
"GROUP"."ELEMENT_ID" AS "ELEMENT_ID",
"GROUP_ID"."GROUP_ID" AS "GROUP_ID"
FROM 
:lt_group AS "GROUP"
INNER JOIN  
:lt_group_id AS "GROUP_ID"
ON  "GROUP"."GJAHR" = "GROUP_ID"."GJAHR"
AND "GROUP"."GRP_DATE" = "GROUP_ID"."GRP_DATE"
AND "GROUP"."GROUP_ID_DS" = "GROUP_ID"."GROUP_ID_DS"
--WHERE LEFT( "GROUP"."GROUP_ID_DS" ,1) <> 'C' 
;


ET_GROUP_SUMMARY = 
SELECT DISTINCT
"GJAHR",
"GRP_DATE",
"ELEMENT_ID",
"GROUP_ID",
--CASE WHEN "ACN" is null then '' else "ACN" end as "ACN",
"ACN",
"ABN",
"DR_GROUP_MEM",
"SH_GROUP_MEM",
"INTERSTATE_GROUP_MEM",
"CCDR_GROUP_MEM",
"CCSH_GROUP_MEM",
"CCTRL_GROUP_MEM",
"TR_GROUP_MEM",
"RBC_GROUP_MEM",
'N' AS "MEM_REL_BODY_CORP"
FROM (

SELECT 
DISTINCT
	"L"."GJAHR", 
	"L"."GRP_DATE", 
	"L"."ELEMENT_ID" AS "ELEMENT_ID", 
	"L"."GROUP_ID" AS "GROUP_ID",
	RIGHT("L"."ELEMENT_ID",9) AS "ACN",
	CASE WHEN "MAP"."ABN" IS NULL THEN '' ELSE "MAP"."ABN" END AS "ABN",
	"R"."DR_GROUP_MEM",
	"R"."SH_GROUP_MEM",
	"R"."INTERSTATE_GROUP_MEM",
	"R"."CCDR_GROUP_MEM",
	"R"."CCSH_GROUP_MEM",
	"R"."CCTRL_GROUP_MEM",
	"R"."TR_GROUP_MEM",
	"R"."RBC_GROUP_MEM",
	'N' AS "MEM_REL_BODY_CORP"
 FROM 
:lt_group_w_group_id  AS "L"
 INNER JOIN
 :lt_element_detail AS "R"
 ON  "L"."GJAHR" = "R"."GJAHR"
 AND "L"."GRP_DATE" = "R"."GRP_DATE"
 AND "L"."ELEMENT_ID" = "R"."ELEMENT_ID"
 LEFT OUTER JOIN
 "osr.edw.platform.fra.prt.model::TF_GRP_ABN_ACN_MAPPING"(:IV_GRP_DATE) AS "MAP"
 ON RIGHT("L"."ELEMENT_ID",9) = "MAP"."ACN"
 WHERE LEFT("L"."ELEMENT_ID",1) = 'O'
 UNION 
 -- Trust related groups may not have an ACN but will have an ABN. Add the ACN if it is found here. 
SELECT 
DISTINCT
	"L"."GJAHR", 
	"L"."GRP_DATE", 
	"L"."ELEMENT_ID" AS "ELEMENT_ID", 
	"L"."GROUP_ID" AS "GROUP_ID",
	"MAP"."ACN" AS "ACN",
	RIGHT("L"."ELEMENT_ID",11) AS "ABN",
	"R"."DR_GROUP_MEM",
	"R"."SH_GROUP_MEM",
	"R"."INTERSTATE_GROUP_MEM",
	"R"."CCDR_GROUP_MEM",
	"R"."CCSH_GROUP_MEM",
	"R"."CCTRL_GROUP_MEM",
	"R"."TR_GROUP_MEM",
	"R"."RBC_GROUP_MEM",
	'N' AS "MEM_REL_BODY_CORP"
 FROM 
:lt_group_w_group_id  AS "L"
 INNER JOIN
 :lt_element_detail AS "R"
 ON  "L"."GJAHR" = "R"."GJAHR"
 AND "L"."GRP_DATE" = "R"."GRP_DATE"
 AND "L"."ELEMENT_ID" = "R"."ELEMENT_ID"
 LEFT OUTER JOIN
 "osr.edw.platform.fra.prt.model::TF_GRP_ABN_ACN_MAPPING"(:IV_GRP_DATE) AS "MAP"
 ON RIGHT("L"."ELEMENT_ID",11) = "MAP"."ABN"
 WHERE LEFT("L"."ELEMENT_ID",1) = 'T'
)
 ;

END