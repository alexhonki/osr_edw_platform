FUNCTION "osr.edw.platform.fra.prt.model::TF_TR_REL"(IV_KEY_DATE DATE )
       RETURNS TABLE (
       		"CHILD_ID"				NVARCHAR(12), -- Beneficiary
       		"PARENT_ID"				NVARCHAR(12), -- Trust
       		"BNFCRY_ABN"			NVARCHAR(12),
       		"TRUST_ABN"				NVARCHAR(12),
       		"GJAHR"					NVARCHAR(4),
       		"ORG_NUMBER"			NVARCHAR(9), -- ACN if exists
			"PERSON_NUM"			NVARCHAR(9), -- If IND / no ABN
			"START_DT"				DATE,
			"END_DT"				DATE,
			"TR_BENFCRY_COUNT"		INTEGER,
			"ENT_TYP_CD"			NVARCHAR(3)
       )
       LANGUAGE SQLSCRIPT 
       SQL SECURITY INVOKER AS 
BEGIN 

DECLARE LV_KEY_DATE DATE;
DECLARE LV_GJAHR NVARCHAR(4);
DECLARE LV_GRP_DATE DATE;

IF :IV_KEY_DATE IS NULL OR :IV_KEY_DATE = TO_DATE('9999-12-31') OR :IV_KEY_DATE = '' THEN 
	SELECT CURRENT_DATE INTO LV_KEY_DATE FROM "osr.hana.platform.synonym::SYS.DUMMY";
ELSE
	LV_KEY_DATE := :IV_KEY_DATE;
END IF;

-- use fiscal year start and end dates of the key date to restrict data
SELECT "osr.edw.platform.fra.prt.model::TF_GET_FISCAL_YEAR"(:LV_GRP_DATE).EV_GJAHR INTO LV_GJAHR
FROM "osr.hana.platform.synonym::SYS.DUMMY";

lt_pers = 
	SELECT DISTINCT
		"PGRP"."PGRP_ID",
		"PERS"."GIVEN_NAME1", 
		"PERS"."GIVEN_NAME2",  
		"PERS"."SURNAME", 
		"PERS"."BIRTH_DT"
		FROM "osr.edw.platform.fra.prt.model::TF_GRP_PERSON_GRP"('2015-06-30','R') AS "PGRP"
		INNER JOIN "osr.edw.staging.md.asic.proxy::TF_PERSON_NAME_DUP"('2015-06-30', 2) AS "PERS"
		ON "PERS"."ID" = "PGRP"."ID"
;
/*
3.	Differentiate between beneficiary types of individuals and non-individuals by matching the [PTNR_BNFCRY_ABN] to ABR data [ABN] to identify [ENTITY_TYPE] whereby:
o	IND = Individuals, FPT = Family Trust, COY = Company, PTR = Partnership, SUP = Superannuation Fund, TRT = Trust 
o	If no ABN is present then where [PTNR_BNFCRY_FIRST_NM] is not NULL and [PTNR_BNFCRY_FIRST_SRNM] is not NULL and [PTNR_BNFCRY_DOB] is not NULL then [ENTITY_TYPE] = IND else NOT APPLICABLE

5.	Exclude exempt beneficiaries by matching the ABR Agency [PID] to the ABR ACNC [PID]. 
Beneficiaries identified as a registered charitable institution will be removed. 
Note that any non-exempt beneficiaries will be considered for grouping. (To be excluded just before matching.)
*/
lt_ABR = 
	SELECT DISTINCT
		"ABN",
		"ENT_TYP_CD", 
		"PID",
		"ACN"
	FROM "osr.edw.staging.md.abr.proxy::TF_AGENCY_DATA_C"()
	WHERE "ABN_REGN_DT"  <= :LV_KEY_DATE
	  AND "ABN_CANCN_DT" >= :LV_KEY_DATE
	  --AND "SPRSN_IND" <> 'Y'
	  --AND "ACN" <> ''
	  --AND "ACN" <> '000000000'
;

/* INSERT TEST VALUES*/
lt_test_data = 
-- BEGIN EXAMPLE 1 - Common Beneficiary Group --
-- TRUST 1 ABN = '55555555555' 
-- TRUST 1 BNFCRY = ACN 159072009 / ABN 90159072009 (Director = P018617722/ C018617722 LINDSAY	GRANT	SMITH	1968-02-21	100%)
-- TRUST 1 BNFCRY = IND ABN '11111111111' J Smith who is not a director of any company
-- TRUST 2 ABN = '33333333333' 
-- TRUST 2 BNFCRY = ACN 158960448 / ABN 33158960448 (Director = P018608673 / C018608673 GREGORY	ROBERT	YEO	1962-09-26 100%)
-- TRUST 2 BNFCRY = IND ABN '11111111111'  J Smith who is not a director of any company
SELECT
'90159072009' as "PTNR_BNFCRY_ABN", --CHILD_ID
'55555555555' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
null AS "PTNR_BNFCRY_FIRST_NM",
null AS "PTNR_BNFCRY_OTHR_GVN_NM",
null AS "PTNR_BNFCRY_SRNM",
null AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY"
UNION
SELECT
'11111111111' as "PTNR_BNFCRY_ABN", --CHILD_ID
'55555555555' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
'J' AS "PTNR_BNFCRY_FIRST_NM",
null AS "PTNR_BNFCRY_OTHR_GVN_NM",
'Smith' AS "PTNR_BNFCRY_SRNM",
null AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY"
UNION
SELECT
'11111111111' as "PTNR_BNFCRY_ABN", --CHILD_ID
'33333333333' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
'J' AS "PTNR_BNFCRY_FIRST_NM",
null AS "PTNR_BNFCRY_OTHR_GVN_NM",
'Smith' AS "PTNR_BNFCRY_SRNM",
null AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY"
UNION
SELECT
'33158960448' as "PTNR_BNFCRY_ABN", --CHILD_ID
'33333333333' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
null AS "PTNR_BNFCRY_FIRST_NM",
null AS "PTNR_BNFCRY_OTHR_GVN_NM",
null AS "PTNR_BNFCRY_SRNM",
null AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY"
-- END EXAMPLE 1 - Common Beneficiary Group --

-- BEGIN EXAMPLE 2 - Common Beneficiary Discretionary Trust as BNFCRY of another trust --
-- TRUST 3 ABN = '66666666666' 
-- TRUST 3 BNFCRY = ACN 600980416 / ABN 77600980416 (Director = P018614797/ C018614797 JIAYI	NULL	CAI	1985-04-25	100.00)
-- TRUST 3 BNFCRY = IND ABN '22222222222' 
-- TRUST 4 ABN = '77777777777' 
-- TRUST 4 BNFCRY = TRT ABN '66666666666' 
-- Trust 4 BNFCRY = IND ABN '77777711111' 
UNION
SELECT
'77600980416' as "PTNR_BNFCRY_ABN", --CHILD_ID
'66666666666' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
null AS "PTNR_BNFCRY_FIRST_NM",
null AS "PTNR_BNFCRY_OTHR_GVN_NM",
null AS "PTNR_BNFCRY_SRNM",
null AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY"
UNION
SELECT
'22222222222' as "PTNR_BNFCRY_ABN", --CHILD_ID
'66666666666' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
'K' AS "PTNR_BNFCRY_FIRST_NM",
null AS "PTNR_BNFCRY_OTHR_GVN_NM",
'Brown' AS "PTNR_BNFCRY_SRNM",
null AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY"
UNION
SELECT
'66666666666' as "PTNR_BNFCRY_ABN", --CHILD_ID is also a trust
'77777777777' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
null AS "PTNR_BNFCRY_FIRST_NM",
null AS "PTNR_BNFCRY_OTHR_GVN_NM",
null AS "PTNR_BNFCRY_SRNM",
null AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY"
UNION
SELECT
'77777711111' as "PTNR_BNFCRY_ABN", --CHILD_ID - included because we need more than 1 BNFCRY for this Trust
'77777777777' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
'J' AS "PTNR_BNFCRY_FIRST_NM",
null AS "PTNR_BNFCRY_OTHR_GVN_NM",
'White' AS "PTNR_BNFCRY_SRNM",
null AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY"
-- END EXAMPLE 2 - Common Beneficiary Discretionary Trust as BNFCRY of another trust --

-- BEGIN EXAMPLE 3 - Directorship Grouping --
-- TRUST 5 ABN = '88888888888' 
-- TRUST 5 BNFCRY = ACN 163551915 / ABN 41163551915 (Director = P018721047/ C018611177 ANDREW	PETER	HUNGERFORD	1982-07-01	100.00)
-- TRUST 5 BNFCRY = IND ABN '44444444444' / Director of ACN 158959561/ ABN 11158959561 ID P018608528/ C018608528 JIANFENG	NULL	LI	1980-05-04 100%
UNION
SELECT
'41163551915' as "PTNR_BNFCRY_ABN", --CHILD_ID
'88888888888' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
null AS "PTNR_BNFCRY_FIRST_NM",
null AS "PTNR_BNFCRY_OTHR_GVN_NM",
null AS "PTNR_BNFCRY_SRNM",
null AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY"
UNION
SELECT
'44444444444' as "PTNR_BNFCRY_ABN", --CHILD_ID
'88888888888' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
'JIANFENG' AS "PTNR_BNFCRY_FIRST_NM",
'NULL' AS "PTNR_BNFCRY_OTHR_GVN_NM",
'LI' AS "PTNR_BNFCRY_SRNM",
'1980-05-04' AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY"
-- END EXAMPLE 3 - Directorship Grouping --

-- BEGIN EXAMPLE 4 - Directorship Grouping combined directors --
-- TRUST 6 ABN = '99999999999' 
-- TRUST 6 BNFCRY = IND ABN 11111122222 ACN 606789440 / ABN 88606789440 / Director = P012351884/ C012351884 ERROL	NULL	STEWART	1952-08-02	33.33
-- TRUST 6 BNFCRY = IND ABN 11111133333 ACN 606789440 / ABN 88606789440 / Director = P001195551/ C001195551 ADRIENNE	NULL	STEWART	1952-07-29	33.33
-- TRUST 6 BNFCRY = ACN 606385344/ ABN 26606385344 Director P030507046/C018986198	DAVID	GLEN	JONES	1970-04-07	33.33 

UNION
SELECT
'11111122222' as "PTNR_BNFCRY_ABN", --CHILD_ID
'99999999999' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
'ERROL' AS "PTNR_BNFCRY_FIRST_NM",
'NULL' AS "PTNR_BNFCRY_OTHR_GVN_NM",
'STEWART' AS "PTNR_BNFCRY_SRNM",
'1952-08-02' AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY"
UNION
SELECT
'11111133333' as "PTNR_BNFCRY_ABN", --CHILD_ID
'99999999999' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
'ADRIENNE' AS "PTNR_BNFCRY_FIRST_NM",
'NULL' AS "PTNR_BNFCRY_OTHR_GVN_NM",
'STEWART' AS "PTNR_BNFCRY_SRNM",
'1952-07-29' AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY"
UNION
SELECT
'26606385344' as "PTNR_BNFCRY_ABN", --CHILD_ID
'99999999999' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
null AS "PTNR_BNFCRY_FIRST_NM",
null AS "PTNR_BNFCRY_OTHR_GVN_NM",
null AS "PTNR_BNFCRY_SRNM",
null AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY"
-- END EXAMPLE 4 - Directorship Grouping combined directors --

-- BEGIN EXAMPLE 6 - Shareholding Grouping --
-- TRUST 7 ABN = '99999911111' 
-- TRUST 7 BNFCRY =  IND ABN 99999922222 P018000640	606460762	48606460762	C010354093	ANTHONY	NULL	TOUMA	1900-01-01	33.33
-- TRUST 7 BNFCRY =  IND ABN 99999933333 P014980720	606460762	48606460762	C014980720	LINDA	NULL	TOUMA	1900-01-01	33.33
-- TRUST 7 BNFCRY =  ACN 606345662 (ABN 29606345662 shareholder P030503810/ C018080336	JASON	KWOK	WONG	1956-03-03	33.33) 
UNION
SELECT
'99999922222' as "PTNR_BNFCRY_ABN", --CHILD_ID
'99999911111' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
'ANTHONY' AS "PTNR_BNFCRY_FIRST_NM",
'NULL' AS "PTNR_BNFCRY_OTHR_GVN_NM",
'TOUMA' AS "PTNR_BNFCRY_SRNM",
'1900-01-01' AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY"
UNION
SELECT
'99999933333' as "PTNR_BNFCRY_ABN", --CHILD_ID
'99999911111' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
'LINDA' AS "PTNR_BNFCRY_FIRST_NM",
'NULL' AS "PTNR_BNFCRY_OTHR_GVN_NM",
'TOUMA' AS "PTNR_BNFCRY_SRNM",
'1900-01-01' AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY"
UNION
SELECT
'29606345662' as "PTNR_BNFCRY_ABN", --CHILD_ID
'99999911111' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
null AS "PTNR_BNFCRY_FIRST_NM",
null AS "PTNR_BNFCRY_OTHR_GVN_NM",
null AS "PTNR_BNFCRY_SRNM",
null AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY"
-- END EXAMPLE 6 - Shareholding Grouping --
-- BEGIN EXAMPLE 7 - Sole Trader --


-- BEGIN EXAMPLE 7 - Sole Trader --
-- Sole trader will have an ABN but typically no ACN.
-- We still want to include their ABN in the group
-- We also want to find any companys that the person has interest in
-- This is the same for individuals who don't have an ABN
-- 1. ABN exists but entity is "IND" ABN 88888811111 is a director of ACN 601315468/ ABN 13601315468 C030118268/P030118268	CHI	SU	KIM	1958-06-26	100.00%
-- 2. 'no ABN' exists person is director of ACN 169096762/ ABN 26169096762	C019438792/P019438792	CAM	ROBERT	REYNOLDS	1982-06-10	100.00
-- Treat as persons but keep ABN if exists
UNION
SELECT
'8888881111' as "PTNR_BNFCRY_ABN", --CHILD_ID
'99999944444' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
'CHI' AS "PTNR_BNFCRY_FIRST_NM",
'SU' AS "PTNR_BNFCRY_OTHR_GVN_NM",
'KIM' AS "PTNR_BNFCRY_SRNM",
'1958-06-26' AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY"
UNION
SELECT
'no ABN' as "PTNR_BNFCRY_ABN", --CHILD_ID
'99999944444' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
'CAM' AS "PTNR_BNFCRY_FIRST_NM",
'ROBERT' AS "PTNR_BNFCRY_OTHR_GVN_NM",
'REYNOLDS' AS "PTNR_BNFCRY_SRNM",
'1982-06-10' AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY"

;

LT_DATA = 
SELECT * 
FROM :lt_test_data 
UNION
SELECT 
	"PTNR_BNFCRY_ABN",
	"TRUST"."ABN",
	"TRUST"."RTN_YR",
	"BNFCRY"."PTNR_BNFCRY_FIRST_NM",
	"BNFCRY"."PTNR_BNFCRY_OTHR_GVN_NM",
	"BNFCRY"."PTNR_BNFCRY_SRNM",
	"BNFCRY"."PTNR_BNFCRY_DOB"
FROM "osr.edw.source.td.ato.proxy::CV_ITRBNFCRY" AS "BNFCRY" 
INNER JOIN "osr.edw.source.md.ato.proxy::CV_ITRBNFCRY_TTEE" AS "TRUST"
ON  "BNFCRY"."REF_ID" = "TRUST"."REF_ID"
-- INCLUDE AFTER TESTING
--	AND "BNFCRY"."RTN_YR" = "TRUST"."RTN_YR" -- add this back in later as there is no data in dev for the moment! 
WHERE "TRUST"."ABN" <> 'invalid ABN'
AND "TRUST"."TRUST_TYP" IN ('S', 'T', 'I')
-- remove records we can't process due to information being withheld by ATO
AND "BNFCRY"."PTNR_BNFCRY_REF_ID" <> 0 
-- REMOVE AFTER TESTING
		AND	"BNFCRY"."PTNR_BNFCRY_ABN" IN (
		'11797737279'
		,'14853926895'
		,'64175894971'
		,'80830647522'
		,'27816336576'
		,'32624288234'
		,'44372258429'
		,'27816336576'
		)
		AND "TRUST"."ABN" IN (
		'71256622977',
		'64175894971',
		'26257558531',
		'71256622977',
		'32624288234',
		'28380160124',
		'28380160124',
		'28380160124',
		'71256622977',
		'71256622977',
		'11709639794',
		'90397942656',
		'45358248690',
		'90809049629',
		'59627509121',
		'61919873656'
		)
;
LT_REL = 
	SELECT DISTINCT
		"MAP"."ACN"					AS "ORG_NUMBER",
		CASE WHEN "MAP"."ACN" is not null THEN concat('O', "MAP"."ACN") -- Beneficiary has an ACN
			WHEN "DATA"."PTNR_BNFCRY_ABN" <> 'no ABN' THEN CONCAT('T',"DATA"."PTNR_BNFCRY_ABN") END AS "CHILD_ID", 
		"DATA"."PTNR_BNFCRY_ABN"	AS "CHILD_NUM",
		"DATA"."ABN"				AS "PARENT_ID",
		"DATA"."RTN_YR"				AS "GJAHR",
		"PERS"."PGRP_ID"			AS "PERSON_NUM",
		CASE 
			WHEN (	"DATA"."PTNR_BNFCRY_FIRST_NM"		IS NULL AND
					"DATA"."PTNR_BNFCRY_OTHR_GVN_NM"	IS NULL AND 
					"DATA"."PTNR_BNFCRY_SRNM"			IS NULL AND  
					"DATA"."PTNR_BNFCRY_DOB"			IS NULL AND 
					("DATA"."PTNR_BNFCRY_ABN"			IS NULL OR "DATA"."PTNR_BNFCRY_ABN" = 'no ABN')) OR
					"DATA"."PTNR_BNFCRY_ABN" = 'no ABN'
			THEN 'IND' 
			ELSE "ABR"."ENT_TYP_CD"	
		END AS "ENT_TYP_CD",
		TO_DATE(TO_VARCHAR((CAST("DATA"."RTN_YR" as integer) -1)) || '0701') AS "START_DT",
		TO_DATE("DATA"."RTN_YR" || '0630') AS "END_DT"
	FROM :LT_DATA AS "DATA"
	LEFT OUTER JOIN "osr.edw.platform.fra.prt.model::TF_GRP_ABN_ACN_MAPPING"(:IV_KEY_DATE) AS "MAP"
	ON "DATA"."PTNR_BNFCRY_ABN" = "MAP"."ABN"
	LEFT OUTER JOIN :lt_pers AS "PERS"
	ON "DATA"."PTNR_BNFCRY_FIRST_NM" = "PERS"."GIVEN_NAME1"
		AND "DATA"."PTNR_BNFCRY_OTHR_GVN_NM" = "GIVEN_NAME2"
		AND "DATA"."PTNR_BNFCRY_SRNM" = "SURNAME"
		AND  "DATA"."PTNR_BNFCRY_DOB"  = "BIRTH_DT"
	LEFT OUTER JOIN :lt_ABR AS "ABR"
	ON "DATA"."PTNR_BNFCRY_ABN" = "ABR"."ABN"
;

-- Add extra row for the sole traders and directors so we can look up their director / shareholdings
LT_DR_SH = 
	SELECT 
		"ORG_NUMBER",
		"PERSON_NUM" AS "CHILD_ID", -- for looking up later
		"CHILD_NUM",
		"PARENT_ID",
		"GJAHR",
		"PERSON_NUM",
		"ENT_TYP_CD",
		"START_DT",
		"END_DT"
	FROM :LT_REL 
	--WHERE ("ENT_TYP_CD" = 'IND' AND "CHILD_ID" <> 'no ABN' AND "CHILD_ID" is not null AND "PERSON_NUM" is not null) 
	--	OR "PERSON_NUM" = 'C030118268'; -- remove this line after testing
	WHERE "PERSON_NUM" is not null; 

LT_REL = SELECT * FROM :LT_REL UNION SELECT * FROM :LT_DR_SH;


lt_tr_cnt = 
SELECT "PARENT_ID", "GJAHR", COUNT(*) AS "TR_BENFCRY_COUNT" 
FROM :lt_rel 
GROUP BY "PARENT_ID", "GJAHR";

-- CHILD_ID will display the trust Beneficiary ABN prefixed with a "T"
-- However if there is an ACN found for the beneficiary, it will display the ACN instead
-- Or it will display the Person Group ID if the beneficiary is natural person. 
RETURN 
	SELECT * FROM (
		SELECT DISTINCT
			"REL"."CHILD_ID" AS "CHILD_ID", -- Beneficiary is another trust 
			CONCAT('T',"REL"."PARENT_ID") AS "PARENT_ID",
			"REL"."CHILD_NUM"  AS "BNFCRY_ABN",
			"REL"."PARENT_ID" AS "TRUST_ABN",
			"REL"."GJAHR",
			"REL"."ORG_NUMBER",
			"REL"."PERSON_NUM",
			"REL"."START_DT",
			"REL"."END_DT",
			"CNT"."TR_BENFCRY_COUNT",
			"REL"."ENT_TYP_CD" -- TODO Add logic for individual sole traders
			FROM :lt_rel AS "REL" INNER JOIN :lt_tr_cnt AS "CNT"
			ON "REL"."PARENT_ID" = "CNT"."PARENT_ID"
			WHERE :IV_KEY_DATE >= "REL"."START_DT"
			AND  :IV_KEY_DATE <= "REL"."END_DT"
			AND "CNT"."TR_BENFCRY_COUNT" > 1
	) WHERE "CHILD_ID" is not null
;

END;