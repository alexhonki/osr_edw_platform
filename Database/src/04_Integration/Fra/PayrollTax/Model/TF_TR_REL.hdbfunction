FUNCTION "osr.edw.platform.fra.prt.model::TF_TR_REL"(IV_KEY_DATE DATE )
       RETURNS TABLE (
       		"CHILD_ID"				NVARCHAR(12), -- Beneficiary
       		"PARENT_ID"				NVARCHAR(12), -- Trust
       		"BNFCRY_ABN"			NVARCHAR(12),
       		"TRUST_ABN"				NVARCHAR(12),
       		"GJAHR"					NVARCHAR(4),
       		"ORG_NUMBER"			NVARCHAR(9), -- ACN if exists
			"PERSON_NUM"			NVARCHAR(9), -- If IND / no ABN
			"START_DT"				DATE,
			"END_DT"				DATE,
			"TR_BENFCRY_COUNT"		INTEGER,
			"ENT_TYP_CD"			NVARCHAR(3)
       )
       LANGUAGE SQLSCRIPT 
       SQL SECURITY INVOKER AS 
BEGIN 

DECLARE LV_KEY_DATE DATE;
DECLARE LV_GJAHR NVARCHAR(4);
DECLARE LV_GRP_DATE DATE;

IF :IV_KEY_DATE IS NULL OR :IV_KEY_DATE = TO_DATE('9999-12-31') OR :IV_KEY_DATE = '' THEN 
	SELECT CURRENT_DATE INTO LV_KEY_DATE FROM "osr.hana.platform.synonym::SYS.DUMMY";
ELSE
	LV_KEY_DATE := :IV_KEY_DATE;
END IF;

-- use fiscal year start and end dates of the key date to restrict data
SELECT "osr.edw.platform.fra.prt.model::TF_GET_FISCAL_YEAR"(:LV_GRP_DATE).EV_GJAHR INTO LV_GJAHR
FROM "osr.hana.platform.synonym::SYS.DUMMY";

lt_pers = 
	SELECT DISTINCT
		"PGRP"."PGRP_ID",
		"PERS"."GIVEN_NAME1", 
		"PERS"."GIVEN_NAME2",  
		"PERS"."SURNAME", 
		"PERS"."BIRTH_DT"
		FROM "osr.edw.platform.fra.prt.model::TF_GRP_PERSON_GRP"('2015-06-30','R') AS "PGRP"
		INNER JOIN "osr.edw.staging.md.asic.proxy::TF_PERSON_NAME_DUP"('2015-06-30', 2) AS "PERS"
		ON "PERS"."ID" = "PGRP"."ID"
;

lt_ABR = 
	SELECT DISTINCT
		"ABN",
		"ENT_TYP_CD", 
		"PID",
		"ACN"
	FROM "osr.edw.staging.md.abr.proxy::TF_AGENCY_DATA_C"()
	WHERE "ABN_REGN_DT"  <= :LV_KEY_DATE
	  AND "ABN_CANCN_DT" >= :LV_KEY_DATE
	  AND "SPRSN_IND" <> 'Y'
	  AND "ACN" <> ''
	  AND "ACN" <> '000000000'
;

/* INSERT TEST VALUES*/
lt_test_data = 
-- ABN that has ACN grouped with other ACN's
-- ACN's 000621563, 084144481, 055035955
-- ABN's 43000621563, 67084144481, 71055035955
-- GroupID = B535D3E8638FC8EBAF9F1BA7BC7A93C7
SELECT
-- '000621563' as "ACN" -- ORG_NUMBER
-- 'P010592631' P000005293, P000102370 directors
'43000621563' as "PTNR_BNFCRY_ABN", --CHILD_ID
'71256622977' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
null AS "PTNR_BNFCRY_FIRST_NM",
null AS "PTNR_BNFCRY_OTHR_GVN_NM",
null AS "PTNR_BNFCRY_SRNM",
null AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY"
UNION 
-- Grouped because of director shareholding
-- ABN = 71605908067, 97605421725
-- ACN = 605908067, 605421725
SELECT
-- '605908067' as "ACN" -- ORG_NUMBER
-- 'P010495527' parent id - ord shareholder
-- 'P013903014' parent id - ord shareholder
'71605908067' as "PTNR_BNFCRY_ABN", --CHILD_ID
'71256622977' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
null AS "PTNR_BNFCRY_FIRST_NM",
null AS "PTNR_BNFCRY_OTHR_GVN_NM",
null AS "PTNR_BNFCRY_SRNM",
null AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY" 
UNION 
-- Two directors part 1
-- ACN 606791771
-- ABN 66606791771
-- P011117925 50%
-- P030579394 50%
SELECT
'no ABN' as "PTNR_BNFCRY_ABN", --CHILD_ID
'28380160124' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
'MARCUS' AS "PTNR_BNFCRY_FIRST_NM", -- P011117925, C011117925
'CLIVE' AS "PTNR_BNFCRY_OTHR_GVN_NM",
'LEONARD' AS "PTNR_BNFCRY_SRNM",
'1971-09-07'AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY" 
UNION 
-- Two directors part 2
-- ACN 606791771
-- ABN 66606791771
-- P011117925 50%
-- P030579394 50%
SELECT
'no ABN' as "PTNR_BNFCRY_ABN", --CHILD_ID
'28380160124' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
'WEI' AS "PTNR_BNFCRY_FIRST_NM", -- P030579394, C017533143
'NULL' AS "PTNR_BNFCRY_OTHR_GVN_NM",
'DU' AS "PTNR_BNFCRY_SRNM",
'1970-01-21'AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY" 
UNION
SELECT
'no ABN' as "PTNR_BNFCRY_ABN", --CHILD_ID
'12345678911' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
'ERROL' AS "PTNR_BNFCRY_FIRST_NM", -- P030579394, C017533143
'NULL' AS "PTNR_BNFCRY_OTHR_GVN_NM",
'STEWART' AS "PTNR_BNFCRY_SRNM",
'1952-08-02'AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY" 
UNION 
SELECT
'no ABN' as "PTNR_BNFCRY_ABN", --CHILD_ID
'12345678911' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
'ADRIENNE' AS "PTNR_BNFCRY_FIRST_NM", -- P030579394, C017533143
'NULL' AS "PTNR_BNFCRY_OTHR_GVN_NM",
'STEWART' AS "PTNR_BNFCRY_SRNM",
'1952-07-29'AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY" 
UNION 
SELECT
'18004920585' as "PTNR_BNFCRY_ABN", --CHILD_ID
'12345678911' AS "ABN", -- trust ABN -- PARENT_ID
'2015' as "RTN_YR",
'BRUNO' AS "PTNR_BNFCRY_FIRST_NM", -- P030579394, C017533143
'NULL' AS "PTNR_BNFCRY_OTHR_GVN_NM",
'CALABRO' AS "PTNR_BNFCRY_SRNM",
'1957-02-15'AS "PTNR_BNFCRY_DOB"
FROM "osr.hana.platform.synonym::SYS.DUMMY" 

;

LT_DATA = 
SELECT * 
FROM :lt_test_data 
UNION
SELECT 
	"PTNR_BNFCRY_ABN",
	"TRUST"."ABN",
	"TRUST"."RTN_YR",
	"BNFCRY"."PTNR_BNFCRY_FIRST_NM",
	"BNFCRY"."PTNR_BNFCRY_OTHR_GVN_NM",
	"BNFCRY"."PTNR_BNFCRY_SRNM",
	"BNFCRY"."PTNR_BNFCRY_DOB"
FROM "osr.edw.source.td.ato.proxy::CV_ITRBNFCRY" AS "BNFCRY" 
INNER JOIN "osr.edw.source.md.ato.proxy::CV_ITRBNFCRY_TTEE" AS "TRUST"
ON  "BNFCRY"."REF_ID" = "TRUST"."REF_ID"
-- INCLUDE AFTER TESTING
--	AND "BNFCRY"."RTN_YR" = "TRUST"."RTN_YR" -- add this back in later as there is no data in dev for the moment! 
WHERE "TRUST"."ABN" <> 'invalid ABN'
AND "TRUST"."TRUST_TYP" IN ('S', 'T', 'I')
-- remove records we can't process due to information being withheld by ATO
AND ("BNFCRY"."PTNR_BNFCRY_ABN" <> 'no ABN' 
			OR ("BNFCRY"."PTNR_BNFCRY_ABN" = 'no ABN' AND ("PTNR_BNFCRY_FIRST_NM" is not null AND "PTNR_BNFCRY_FIRST_NM" <> '' AND "BNFCRY"."PTNR_BNFCRY_FIRST_NM" not like '%#%')))
-- REMOVE AFTER TESTING
		AND	"BNFCRY"."PTNR_BNFCRY_ABN" IN (
		'11797737279'
		,'14853926895'
		,'64175894971'
		,'80830647522'
		,'27816336576'
		,'32624288234'
		,'44372258429'
		,'27816336576'
		)
		AND "TRUST"."ABN" IN (
		'71256622977',
		'64175894971',
		'26257558531',
		'71256622977',
		'32624288234',
		'28380160124',
		'28380160124',
		'28380160124',
		'71256622977',
		'71256622977',
		'11709639794',
		'90397942656',
		'45358248690',
		'90809049629',
		'59627509121',
		'61919873656'
		)
;


lt_rel = 
	SELECT DISTINCT
		"MAP"."ACN"					AS "ORG_NUMBER",
		"DATA"."PTNR_BNFCRY_ABN"	AS "CHILD_ID",
		"DATA"."ABN"				AS "PARENT_ID",
		"DATA"."RTN_YR"				AS "GJAHR",
		"PERS"."PGRP_ID"			AS "PERSON_NUM",
		"ABR"."ENT_TYP_CD"			AS "ENT_TYP_CD",
		TO_DATE(TO_VARCHAR((CAST("DATA"."RTN_YR" as integer) -1)) || '0701') AS "START_DT",
		TO_DATE("DATA"."RTN_YR" || '0630') AS "END_DT"
	FROM :LT_DATA AS "DATA"
	LEFT OUTER JOIN "osr.edw.platform.fra.prt.model::TF_GRP_ABN_ACN_MAPPING"(:IV_KEY_DATE) AS "MAP"
	ON "DATA"."PTNR_BNFCRY_ABN" = "MAP"."ABN"
	LEFT OUTER JOIN :lt_pers AS "PERS"
	ON "DATA"."PTNR_BNFCRY_FIRST_NM" = "PERS"."GIVEN_NAME1"
		AND "DATA"."PTNR_BNFCRY_OTHR_GVN_NM" = "GIVEN_NAME2"
		AND "DATA"."PTNR_BNFCRY_SRNM" = "SURNAME"
		AND  "DATA"."PTNR_BNFCRY_DOB"  = "BIRTH_DT"
	LEFT OUTER JOIN :lt_ABR AS "ABR"
	ON "DATA"."PTNR_BNFCRY_ABN" = "ABR"."ABN"
;


lt_tr_cnt = 
SELECT "PARENT_ID", "GJAHR", COUNT(*) AS "TR_BENFCRY_COUNT" FROM :lt_rel GROUP BY "PARENT_ID", "GJAHR";

-- CHILD_ID will display the trust Beneficiary ABN prefixed with a "T"
-- However if there is an ACN found for the beneficiary, it will display the ACN instead
-- Or it will display the Person Group ID if the beneficiary is natural person. 
RETURN 
	SELECT * FROM (
		SELECT DISTINCT
			CASE WHEN "REL"."CHILD_ID" = 'no ABN' THEN "REL"."PERSON_NUM" -- Beneficiary is a Natural person
					WHEN "REL"."ORG_NUMBER" is not null THEN concat('O', "REL"."ORG_NUMBER") -- Beneficiary has an ACN
						ELSE CONCAT('T',"REL"."CHILD_ID")  END AS "CHILD_ID", -- Beneficiary is another trust
			CONCAT('T',"REL"."PARENT_ID") AS "PARENT_ID",
			CASE WHEN "REL"."CHILD_ID" <> 'no ABN' THEN "REL"."CHILD_ID" END AS "BNFCRY_ABN",
			"REL"."PARENT_ID" AS "TRUST_ABN",
			"REL"."GJAHR",
			"REL"."ORG_NUMBER",
			"REL"."PERSON_NUM",
			"REL"."START_DT",
			"REL"."END_DT",
			"CNT"."TR_BENFCRY_COUNT",
			"REL"."ENT_TYP_CD" -- TODO Add logic for individual sole traders
			FROM :lt_rel AS "REL" INNER JOIN :lt_tr_cnt AS "CNT"
			ON "REL"."PARENT_ID" = "CNT"."PARENT_ID"
			WHERE :IV_KEY_DATE >= "REL"."START_DT"
			AND  :IV_KEY_DATE <= "REL"."END_DT"
			AND "CNT"."TR_BENFCRY_COUNT" > 1
	) WHERE "CHILD_ID" is not null
;

END;