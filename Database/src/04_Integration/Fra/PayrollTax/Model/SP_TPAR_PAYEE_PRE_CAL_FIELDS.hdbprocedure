PROCEDURE "osr.edw.platform.fra.prt.model::SP_TPAR_PAYEE_PRE_CAL_FIELDS"(
	IN IV_GJAHR		NVARCHAR(4),	-- financial year	
	IN IV_PEGP_L	DECIMAl(15,2),	-- Payee Gross payments from payer
	IN IV_PEGP_H	DECIMAl(15,2),
	IN IV_PEGIP		DECIMAl(15,2),	-- Payee Gross Trading income percentage from payer
	IN IV_PEICP_L	DECIMAl(15,2),	-- Payee ITR Contractor Payments
	IN IV_PEICP_H	DECIMAl(15,2),
	IN IV_PEWW_L	DECIMAl(15,2),	-- Payee Work Cover Wages
	IN IV_PEWW_H	DECIMAl(15,2),
	IN IV_PEAEC_L	INTEGER,		-- Payee Australian Employee Count
	IN IV_PEAEC_H	INTEGER, 
	IN IV_PEET_INC	NVARCHAR(100), -- Included Payee Type (IND, SUP, COY, GOV, PTR or FTP, TRT) separated by '|'
	IN IV_PEET_EXCL	NVARCHAR(100), -- Excluded Payee Type (IND, SUP, COY, GOV, PTR or FTP, TRT) separated by '|'
	IN IV_PEBA_INC  NVARCHAR(100), -- Included Payee State (QLD, NSW, VIC, WA, NT, SA, TAS) separated by '|'
	IN IV_PEBA_EXCL NVARCHAR(100), -- Excluded Payee State (QLD, NSW, VIC, WA, NT, SA, TAS) separated by '|'
	IN IV_PEPRS		NVARCHAR(1),	-- Status (Y/N)
	OUT ET_CNTR_DETAILS		"osr.edw.platform.fra.prt.model::Types.CntrT2"
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   READS SQL DATA AS
BEGIN
--------PEET----------------
declare i integer;
declare splitList nvarchar(4000) array;
declare splitted string;
declare removeEmpty char(1) := 'X';
declare filter_values nvarchar(100);
declare filter_type integer;
-----------PEET--------------

-------------PEBA-------------

declare s integer;
declare splitList1 nvarchar(4000) array;
declare splitted1 string;
declare removeEmpty1 char(1) := 'X';
declare filter_values1 nvarchar(100);
declare filter_type1 integer;

------------PEBA--------------

-------------PEET Filter--------------
IF :IV_PEET_INC <> '' THEN
filter_values = :IV_PEET_INC;
filter_type = 1; -- Include
ELSE 
filter_values = :IV_PEET_EXCL;
filter_type = 2; -- Exclude
end if;

i := 1;
if right(:filter_values,1) <> '|' then
   filter_values := :filter_values || '|';
end if;

while :filter_values <> SUBSTR_AFTER (:filter_values,'|')
do
   splitted = SUBSTR_BEFORE (:filter_values,'|');
   filter_values = SUBSTR_AFTER (:filter_values,'|');
   if not(removeEmpty = 'X' and splitted = '') then
     splitList[i] = splitted;
     i := i+1;
   end if;
end while;

fnSplit = UNNEST(:splitList) as (filter_values);

LT_PEEL_FILTER = select filter_values AS "VALS" from :fnSplit;
--------------END of PEET Filter
------------PEBA----
IF :IV_PEBA_INC <> '' THEN
filter_values1 = :IV_PEBA_INC;
filter_type1 = 1; -- Include
ELSE 
filter_values1 = :IV_PEBA_EXCL;
filter_type1 = 2; -- Exclude
end if;

i := 1;
if right(:filter_values1,1) <> '|' then    filter_values1 := :filter_values1 || '|';
end if;

while :filter_values1 <> SUBSTR_AFTER (:filter_values1,'|')
do
   splitted1 = SUBSTR_BEFORE (:filter_values1,'|');
   filter_values1 = SUBSTR_AFTER (:filter_values1,'|');
   if not(removeEmpty1 = 'X' and splitted1 = '') then
     splitList1[i] = splitted1;
     i := i+1;
   end if;
end while;

fnSplit1 = UNNEST(:splitList1) as (filter_values1);

LT_PEBA_FILTER = select filter_values1 AS "VALS" from :fnSplit1;

-----------End of PEBA Selection---------

------------Main Logic------------------
LT_CNTR =	
	SELECT
		PAYER_ABN,
		PAYEE_ABN,
		ENT_TYP_CD          AS PAYEE_ENT_TYPE,
		BUSS_LOC_STATE      AS PAYEE_BUS_STATE,
		EX_GST_GROSS_PD_AMT AS PAYEE_GROSS_PD_AMT,
		TOTL_BUS_INCM_AMT   AS PAYEE_TOT_INCM_AMT,
		CONTRACTORS_PMNTS   AS PAYEE_CNTR_PMT,
		BUS_INCM_PER        AS PAYEE_BUS_INCM_PER,
		TOTAL_EMP_CNT       AS TOT_EMP_CNT,
		WCQ_ACT_WAGES       AS WCQ_ACT_WAGE,
		PARTNER             AS BPARTNER,
		PRT_REG_STATUS      AS PRT_REG_STATUS
	FROM
	"osr.edw.platform.fra.prt.model::TF_TPAR_PAYEE_PRE_CAL_FIELDS"(:IV_GJAHR)
	WHERE
		EX_GST_GROSS_PD_AMT 	BETWEEN 	:IV_PEGP_L  	AND   :IV_PEGP_H
	AND BUS_INCM_PER        	>= 			:IV_PEGIP
	AND CONTRACTORS_PMNTS       BETWEEN     :IV_PEICP_L     AND   :IV_PEICP_H
	AND WCQ_ACT_WAGES       	BETWEEN 	:IV_PEWW_L  	AND   :IV_PEWW_H
	AND TOTAL_EMP_CNT       	BETWEEN 	:IV_PEAEC_L 	AND   :IV_PEAEC_H
	AND PRT_REG_STATUS			=			:IV_PEPRS
	
    ;
------------

--Payee Entity Type Selection------------
IF :filter_type = 1 then

	ET_CNTR_DETAILS_ENT = 
	SELECT DISTINCT
		:IV_GJAHR AS "GJAHR",
		"PAYER_ABN",
		"PAYEE_ABN",
		"PAYEE_ENT_TYPE",
		"PAYEE_BUS_STATE",
		"PAYEE_TOT_INCM_AMT",
		"PAYEE_CNTR_PMT",
		"PAYEE_BUS_INCM_PER",
		"TOT_EMP_CNT",
		"WCQ_ACT_WAGE",
		"BPARTNER",
		"PRT_REG_STATUS",
		"PAYEE_GROSS_PD_AMT"
	FROM :LT_CNTR 
	WHERE "PAYEE_ENT_TYPE" in (SELECT "VALS" AS "PAYEE_ENT_TYPE" FROM :LT_PEEL_FILTER);
else
	ET_CNTR_DETAILS_ENT = 
	SELECT DISTINCT
		:IV_GJAHR AS "GJAHR",
		"PAYER_ABN",
		"PAYEE_ABN",
		"PAYEE_ENT_TYPE",
		"PAYEE_BUS_STATE",	
		"PAYEE_TOT_INCM_AMT",
		"PAYEE_CNTR_PMT",
		"PAYEE_BUS_INCM_PER",
		"TOT_EMP_CNT",
		"WCQ_ACT_WAGE",
		"BPARTNER",
		"PRT_REG_STATUS",
		"PAYEE_GROSS_PD_AMT"
	FROM :LT_CNTR 
	WHERE "PAYEE_ENT_TYPE" not in (SELECT "VALS" AS "PAYEE_ENT_TYPE" FROM :LT_PEEL_FILTER);
end if;
	
-----Payee State Selection --------------------------------	
IF :filter_type1 = 1 then
	ET_CNTR_DETAILS = 
	SELECT DISTINCT
		:IV_GJAHR AS "GJAHR",
		"PAYER_ABN",
		"PAYEE_ABN",
		"PAYEE_ENT_TYPE",
		"PAYEE_BUS_STATE",
		"PAYEE_TOT_INCM_AMT",
		"PAYEE_CNTR_PMT",
		"PAYEE_BUS_INCM_PER",
		"TOT_EMP_CNT",
		"WCQ_ACT_WAGE",
		"BPARTNER",
		"PRT_REG_STATUS",
		"PAYEE_GROSS_PD_AMT" 
	FROM :ET_CNTR_DETAILS_ENT
	WHERE "PAYEE_BUS_STATE" in (SELECT "VALS" AS "PAYEE_BUS_STATE" FROM :LT_PEBA_FILTER);
else
	ET_CNTR_DETAILS = 
	SELECT DISTINCT
		:IV_GJAHR AS "GJAHR",
		"PAYER_ABN",
		"PAYEE_ABN",
		"PAYEE_ENT_TYPE",
		"PAYEE_BUS_STATE",	
		"PAYEE_TOT_INCM_AMT",
		"PAYEE_CNTR_PMT",
		"PAYEE_BUS_INCM_PER",
		"TOT_EMP_CNT",
		"WCQ_ACT_WAGE",
		"BPARTNER",
		"PRT_REG_STATUS",
		"PAYEE_GROSS_PD_AMT"
	FROM :ET_CNTR_DETAILS_ENT
	WHERE "PAYEE_BUS_STATE" not in (SELECT "VALS" AS "PAYEE_ENT_TYPE" FROM :LT_PEBA_FILTER);
end if;
	
		
	
END