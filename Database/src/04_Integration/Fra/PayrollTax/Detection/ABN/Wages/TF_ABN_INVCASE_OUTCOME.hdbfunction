FUNCTION "osr.edw.platform.fra.prt.dt.abn.wages::TF_ABN_INVCASE_OUTCOME"( )
          RETURNS TABLE (
		
	 "ABN"                        NVARCHAR(11),
	 "INV_PRIORITY"               NVARCHAR(1),
	 "INV_OUTCOME"                NVARCHAR(20),
 	 "CASE_INV_PROD_PRT"          INTEGER,
	 "CASE_INV_PROD_OTHER"        INTEGER,
	 "CASE_INV_UPROD_PRT"         INTEGER,
	 "CASE_INV_UPROD_OTHER"       INTEGER,
	 "CASE_INV_OPEN_PRT"          INTEGER,
	 "CASE_INV_OPEN_OTHER"        INTEGER,
	 "CASE_INV_BLANK_PRT"         INTEGER,
	 "CASE_INV_BLANK_OTHER"       INTEGER    	

)
       LANGUAGE SQLSCRIPT 
       SQL SECURITY INVOKER AS 
BEGIN 
    /*****************************
        Write your function logic
    ****************************/
/*    
 INV_CASE_DATA =
 
SELECT * 
FROM "osr.edw.platform.fra.prt.dt.abn::CV_CRM_BP_CASE"
WHERE "CASE_TYPE" = 'ZINV'
;
*/
 PT_INV_CASE_DATA =
SELECT * 
FROM "osr.edw.platform.fra.prt.dt.abn::CV_CRM_BP_CASE"
WHERE "CASE_TYPE" IN ('ZINV','ZIPT')
AND "CASE_CATEGORY" IN ('PRT','ACST','MANU')
;

OTH_INV_CASE_DATA =
SELECT * 
FROM "osr.edw.platform.fra.prt.dt.abn::CV_CRM_BP_CASE"
WHERE "CASE_TYPE" IN ('ZINV','ZILT')
AND "CASE_CATEGORY" <> 'PRT'
;

INV_DATA =
SELECT
"ABN",
SUM("CASE_INV_PROD_PRT")    AS "CASE_INV_PROD_PRT",
SUM("CASE_INV_PROD_OTHER")  AS "CASE_INV_PROD_OTHER",
SUM("CASE_INV_UPROD_PRT")   AS "CASE_INV_UPROD_PRT",
SUM("CASE_INV_UPROD_OTHER") AS "CASE_INV_UPROD_OTHER",
SUM("CASE_INV_OPEN_PRT")    AS "CASE_INV_OPEN_PRT",
SUM("CASE_INV_OPEN_OTHER")  AS "CASE_INV_OPEN_OTHER",
SUM("CASE_INV_BLANK_PRT")   AS "CASE_INV_BLANK_PRT",
SUM("CASE_INV_BLANK_OTHER") AS "CASE_INV_BLANK_OTHER" 
FROM

(
SELECT 
"ABN",
COUNT(*) AS  "CASE_INV_PROD_PRT",
0        AS  "CASE_INV_PROD_OTHER",
0        AS	 "CASE_INV_UPROD_PRT",
0        AS	 "CASE_INV_UPROD_OTHER",
0        AS	 "CASE_INV_OPEN_PRT",
0        AS	 "CASE_INV_OPEN_OTHER",
0        AS	 "CASE_INV_BLANK_PRT",
0        AS	 "CASE_INV_BLANK_OTHER"
FROM :PT_INV_CASE_DATA
--WHERE "CASE_TYPE"     = 'ZINV'
--AND   "CASE_CATEGORY" = 'PRT'
--AND   "CASE_OUTCOME"  = 'PROD'
WHERE    "CASE_OUTCOME"  = 'PROD'
GROUP BY 
"ABN"


UNION

SELECT 
"ABN",
0        AS  "CASE_INV_PROD_PRT",
COUNT(*) AS  "CASE_INV_PROD_OTHER",
0        AS	 "CASE_INV_UPROD_PRT",
0        AS	 "CASE_INV_UPROD_OTHER",
0        AS	 "CASE_INV_OPEN_PRT",
0        AS	 "CASE_INV_OPEN_OTHER",
0        AS	 "CASE_INV_BLANK_PRT",
0        AS	 "CASE_INV_BLANK_OTHER"
FROM :OTH_INV_CASE_DATA
--WHERE "CASE_TYPE"     = 'ZINV'
--AND   "CASE_CATEGORY" NOT IN ('PRT')
--AND   "CASE_OUTCOME"  = 'PROD'
WHERE "CASE_OUTCOME"  = 'PROD'
GROUP BY 
"ABN"

UNION

SELECT 
"ABN",
0        AS  "CASE_INV_PROD_PRT",
0        AS  "CASE_INV_PROD_OTHER",
COUNT(*) AS	 "CASE_INV_UPROD_PRT",
0        AS	 "CASE_INV_UPROD_OTHER",
0        AS	 "CASE_INV_OPEN_PRT",
0        AS	 "CASE_INV_OPEN_OTHER",
0        AS	 "CASE_INV_BLANK_PRT",
0        AS	 "CASE_INV_BLANK_OTHER"
FROM :PT_INV_CASE_DATA
--WHERE "CASE_TYPE"     = 'ZINV'
--AND   "CASE_CATEGORY" = 'PRT'
--AND   "CASE_OUTCOME"  = 'UNPROD'
WHERE "CASE_OUTCOME"  = 'UNPROD'
GROUP BY 
"ABN"


UNION

SELECT 
"ABN",
0        AS  "CASE_INV_PROD_PRT",
0        AS  "CASE_INV_PROD_OTHER",
0        AS	 "CASE_INV_UPROD_PRT",
COUNT(*) AS	 "CASE_INV_UPROD_OTHER",
0        AS	 "CASE_INV_OPEN_PRT",
0        AS	 "CASE_INV_OPEN_OTHER",
0        AS	 "CASE_INV_BLANK_PRT",
0        AS	 "CASE_INV_BLANK_OTHER"
FROM :OTH_INV_CASE_DATA
--WHERE "CASE_TYPE"     = 'ZINV'
--AND   "CASE_CATEGORY" NOT IN ('PRT')
--AND   "CASE_OUTCOME"  = 'UNPROD'
WHERE "CASE_OUTCOME"  = 'UNPROD'
GROUP BY 
"ABN"

UNION

SELECT 
"ABN",
0        AS  "CASE_INV_PROD_PRT",
0        AS  "CASE_INV_PROD_OTHER",
0        AS	 "CASE_INV_UPROD_PRT",
0        AS	 "CASE_INV_UPROD_OTHER",
COUNT(*) AS	 "CASE_INV_OPEN_PRT",
0        AS	 "CASE_INV_OPEN_OTHER",
0        AS	 "CASE_INV_BLANK_PRT",
0        AS	 "CASE_INV_BLANK_OTHER"
FROM :PT_INV_CASE_DATA
--WHERE "CASE_TYPE"     = 'ZINV'
--AND   "CASE_CATEGORY" = 'PRT'
--AND   "CASE_OUTCOME"  = 'OPEN'
WHERE "CASE_OUTCOME"  = 'OPEN'
GROUP BY 
"ABN"


UNION

SELECT 
"ABN",
0        AS  "CASE_INV_PROD_PRT",
0        AS  "CASE_INV_PROD_OTHER",
0        AS	 "CASE_INV_UPROD_PRT",
0        AS	 "CASE_INV_UPROD_OTHER",
0        AS	 "CASE_INV_OPEN_PRT",
COUNT(*) AS	 "CASE_INV_OPEN_OTHER",
0        AS	 "CASE_INV_BLANK_PRT",
0        AS	 "CASE_INV_BLANK_OTHER"
FROM :OTH_INV_CASE_DATA
--WHERE "CASE_TYPE"     = 'ZINV'
--AND   "CASE_CATEGORY" NOT IN ('PRT')
--AND   "CASE_OUTCOME"  = 'OPEN'
WHERE "CASE_OUTCOME"  = 'OPEN'
GROUP BY 
"ABN"

UNION

SELECT 
"ABN",
0        AS   "CASE_INV_PROD_PRT",
0        AS  "CASE_INV_PROD_OTHER",
0        AS	 "CASE_INV_UPROD_PRT",
0        AS	 "CASE_INV_UPROD_OTHER",
0        AS	 "CASE_INV_OPEN_PRT",
0        AS	 "CASE_INV_OPEN_OTHER",
COUNT(*) AS	 "CASE_INV_BLANK_PRT",
0        AS	 "CASE_INV_BLANK_OTHER"
FROM :PT_INV_CASE_DATA
--WHERE "CASE_TYPE"     = 'ZINV'
--AND   "CASE_CATEGORY" = 'PRT'
--AND   "CASE_OUTCOME"  = ''
WHERE "CASE_OUTCOME"  = ''
GROUP BY 
"ABN"


UNION

SELECT 
"ABN",
0        AS  "CASE_INV_PROD_PRT",
0        AS  "CASE_INV_PROD_OTHER",
0        AS	 "CASE_INV_UPROD_PRT",
0        AS	 "CASE_INV_UPROD_OTHER",
0        AS	 "CASE_INV_OPEN_PRT",
0        AS	 "CASE_INV_OPEN_OTHER",
0        AS	 "CASE_INV_BLANK_PRT",
COUNT(*) AS	 "CASE_INV_BLANK_OTHER"
FROM :OTH_INV_CASE_DATA
--WHERE "CASE_TYPE"     = 'ZINV'
--AND   "CASE_CATEGORY" NOT IN ('PRT')
--AND   "CASE_OUTCOME"  = ''
WHERE "CASE_OUTCOME"  = ''
GROUP BY 
"ABN"

)
GROUP BY 
"ABN"
;

RETURN
SELECT
"ABN",
"INV_PRIORITY",
"INV_OUTCOME",
"CASE_INV_PROD_PRT",
"CASE_INV_PROD_OTHER",
"CASE_INV_UPROD_PRT",
"CASE_INV_UPROD_OTHER",
"CASE_INV_OPEN_PRT",
"CASE_INV_OPEN_OTHER",
"CASE_INV_BLANK_PRT",
"CASE_INV_BLANK_OTHER"

FROM
(
SELECT 
"ABN",
"CASE_INV_PROD_PRT",
"CASE_INV_PROD_OTHER",
"CASE_INV_UPROD_PRT",
"CASE_INV_UPROD_OTHER",
"CASE_INV_OPEN_PRT",
"CASE_INV_OPEN_OTHER",
"CASE_INV_BLANK_PRT",
"CASE_INV_BLANK_OTHER",

--INV_PRIORITY
CASE WHEN "CASE_INV_PROD_PRT"     > 0      THEN '5'         ELSE --5 
CASE WHEN "CASE_INV_UPROD_PRT"    > 0      THEN '4'         ELSE --4
CASE WHEN "CASE_INV_PROD_OTHER"   > 0      THEN '3'         ELSE --3
CASE WHEN "CASE_INV_UPROD_OTHER"  > 0      THEN '3'         ELSE --3
CASE WHEN "CASE_INV_OPEN_PRT"     > 0      THEN '1'         ELSE --1
CASE WHEN "CASE_INV_OPEN_OTHER"   > 0      THEN '1'         ELSE --1
CASE WHEN "CASE_INV_BLANK_PRT"    > 0      THEN '1'         ELSE --1
CASE WHEN "CASE_INV_BLANK_OTHER"  > 0      THEN '1'         ELSE --1
'0' END END END END END END END END AS "INV_PRIORITY",

-- INV_OUTCOME
CASE WHEN "CASE_INV_PROD_PRT"     > 0      THEN 'PRT_PROD'        ELSE --5 
CASE WHEN "CASE_INV_UPROD_PRT"    > 0      THEN 'PRT_UNPROD'      ELSE --4
CASE WHEN "CASE_INV_PROD_OTHER"   > 0      THEN 'Non_PRT_PROD'    ELSE --3
CASE WHEN "CASE_INV_UPROD_OTHER"  > 0      THEN 'Non_PRT_UNPROD'  ELSE --3
CASE WHEN "CASE_INV_OPEN_PRT"     > 0      THEN 'PRT_OPEN'        ELSE --1
CASE WHEN "CASE_INV_OPEN_OTHER"   > 0      THEN 'Non_PRT_OPEN'    ELSE --1
CASE WHEN "CASE_INV_BLANK_PRT"    > 0      THEN 'PRT_BLANK'       ELSE --1
CASE WHEN "CASE_INV_BLANK_OTHER"  > 0      THEN 'Non_PRT_BLANK'   ELSE --1
'NO_OUTCOME' END END END END END END END END AS "INV_OUTCOME"

FROM

:INV_DATA

);

    
END;