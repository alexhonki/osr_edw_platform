PROCEDURE "osr.edw.platform.fra.prt.dt.abn.wages.ex::SP_GrpExclusionCheck_V1"
(
	IN  it_data_for_rule 	"osr.edw.platform.fra.prt.dt.abn::Types.wages.data_wage",
	IN PARAMETERS			"osr.edw.platform.fra.prt.dt.abn::Types.wages.param_exclusions_u",
	OUT ET_RESULT 		    "osr.edw.platform.fra.prt.dt.abn::Types.wages.result",
    OUT ET_TEXT             "osr.edw.platform.fra.prt.dt.abn::Types.wages.text"
	
)


   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   READS SQL DATA AS
BEGIN


DECLARE lv_role_dt                    VARCHAR(8);
--DECLARE lv_pt_role                    NVARCHAR(1) ;
DECLARE lv_id_role                    NVARCHAR(1) ;
DECLARE lv_pt_case_dt                 VARCHAR(8)  ;
DECLARE lv_pt_case                    NVARCHAR(1) ;
DECLARE lv_pt_exm_case				  NVARCHAR(1) ;
--DECLARE lv_flag_abr_acnc              NVARCHAR(1) ;
--DECLARE lv_flag_asic_regd             NVARCHAR(1) ;
--DECLARE lv_flag_sup_gov_exmpt_anzsic  NVARCHAR(1) ;
DECLARE lv_flag_oth_exm_ind			NVARCHAR(1) ;
DECLARE lv_flag_is_wages		 	  NVARCHAR(1) ;
DECLARE lv_flag_pt_grouping  		  NVARCHAR(1) ;
DECLARE lv_fy                         NVARCHAR(4) ;
DECLARE lv_sdate                      DATE;
DECLARE lv_edate                      DATE;

LT_PARAMETERS = 
SELECT
    'Test' 				AS SCENARIO,              
    TO_DATS('2018-06-30') AS "PT_ID_ROLE_DATE",
    'Y' 				AS "ID_ROLE",
    'Y' 				AS "PT_GROUPED",
    TO_DATS('2018-06-30') AS "PT_CASE_DATE",
    'Y' 				AS "PT_CASE",
    'Y' 				AS "FLAG_EXM_CASE",
    'Y' 				AS "FLAG_OTH_EXM_IND",
    'Y' 				AS "FLAG_IS_WAGES"
FROM "osr.hana.platform.synonym::SYS.DUMMY";
        
SELECT
"PT_ID_ROLE_DATE",
--"PT_ROLE", RMS PT  -- removed
"ID_ROLE",
"PT_GROUPED",
"PT_CASE_DATE",
"PT_CASE", -- rename to payroll Tax exemption Case
"FLAG_EXM_CASE",
"FLAG_OTH_EXM_IND", -- Other Exemption Indicators
--"FLAG_ABR_ACNC",  -- replaced by FLAG_OTH_EXM_IND
--"FLAG_ASIC_REGD", -- replaced by FLAG_OTH_EXM_IND
--"FLAG_SUP_GOV_EXMPT_ANZSIC" -- replaced by FLAG_OTH_EXM_IND
"FLAG_IS_WAGES" -- interstate wages in annual return
INTO
lv_role_dt,
--lv_pt_role,
lv_id_role,
lv_flag_pt_grouping,
lv_pt_case_dt,
lv_pt_case,
lv_pt_exm_case,
lv_flag_oth_exm_ind,
--lv_flag_abr_acnc,
--lv_flag_asic_regd,
--lv_flag_sup_gov_exmpt_anzsic
lv_flag_is_wages

--FROM :PARAMETERS LIMIT 1;
FROM :LT_PARAMETERS LIMIT 1;


   /*************************************
       Write your procedure logic 
   *************************************/
   
LT_WORKSET =   
SELECT DISTINCT
	"ABN",
	"PERIOD_CATEGORY",
	"PERIOD_KEY", 
	"GJAHR",
	"GROUP_ID"
FROM
	:it_data_for_rule
WHERE 
	"GROUP_ID" <> ''
   
;

SELECT DISTINCT "GJAHR" INTO lv_fy FROM :LT_WORKSET LIMIT 1 ;


lv_edate = TO_DATS(CONCAT(:lv_fy,'0630')); 
lv_sdate = TO_DATS(CONCAT((TO_INT(:lv_fy) - 1 ),'0701'));


-------------------------Start Of External Data----------------------
-------------------------ABR Fund  and ACNC---------------------------
ABR_AGENCY =
SELECT DISTINCT
	"ABN",
	"PID",
	"ENT_TYP_CD",
	"ACN",
	"SPRSN_IND"
FROM 
	"osr.edw.staging.md.abr.proxy::CV_AGENCY_DATA_C"
 WHERE 
"ABN" IN (SELECT DISTINCT "ABN" FROM  :LT_WORKSET )	

;

ABR_FUND_ACNC_ABN =

SELECT DISTINCT 
	"ABN" 
FROM

(
SELECT  DISTINCT
	"ABN"
FROM

(
SELECT
	 "AGENCY"."ABN"              AS  "ABN", 	
     "AGENCY"."PID"              AS  "PID",
	 "FUND"."PRIMARY_ID"         AS  "FUND_PID",
	 "FUND"."FUND_NAME"          AS  "FUND_NAME" ,
	 "FUND"."FUND_TYPE"          AS  "FUND_TYPE",
	 "FUND"."REGISTRATION_DATE"  AS  "FUND_REG_DT",
	 "FUND"."CANCELLATION_DATE"  AS  "FUND_CAN_DT"
FROM
	:ABR_AGENCY AS "AGENCY" 
INNER JOIN
	"osr.edw.staging.md.abr.proxy::CV_FUNDS_C" AS "FUND"
ON 
	"AGENCY"."PID" = "FUND"."PRIMARY_ID"
)	

UNION	

SELECT DISTINCT 
	"ABN"
FROM
(
SELECT
	 "AGENCY"."ABN"              AS  "ABN", 	
     "AGENCY"."PID"              AS  "PID"
FROM
	:ABR_AGENCY AS "AGENCY" 
INNER JOIN
	"osr.edw.staging.md.abr.proxy::CV_ACNC" AS "ACNC"
ON 
	"AGENCY"."PID" = "ACNC"."PID"
)
)
;	

-------------------------------------------------------------
------------------------- ASIC Org Status -------------------

--------6Monthly file------
ASIC_6MONTHLY =

SELECT DISTINCT "ABN", "ORG_STATUS", '2' AS "RANK_2" FROM
(
SELECT
	 "ASIC"."ABN",
	"ASIC"."DEREGISTRATION_CODE",
	"ASIC"."ORG_NUMBER" ,
	"ASIC"."ORG_CLASS",
	"ASIC"."ORG_END_DT",
	"ASIC"."ORG_START_DT",
	"ASIC"."ORG_END_DT",
	"ASIC"."ORG_STATUS",
	RANK() OVER (PARTITION BY "ASIC"."ABN" ORDER BY "ASIC"."ABN", "ASIC"."ORG_END_DT" DESC, "ASIC"."ORG_START_DT" DESC) AS "RANK_1"
FROM 
	"osr.edw.staging.md.asic.proxy::CV_ORGANISATION_C" AS "ASIC",
	:LT_WORKSET  AS "DET_ABN"
WHERE  
	"ASIC"."ABN" = "DET_ABN"."ABN"
) WHERE "RANK_1" = '1'
;

-- Monhtly Status---
ASIC_MONTHLY =
SELECT "ABN", "ORG_STATUS", 	'1' AS "RANK_2" FROM
(
SELECT 
	"ASIC"."ABN",
	"ASIC"."ACN",
	"ASIC"."ORG_STATUS"
FROM "osr.edw.staging.md.asic.synonym::CDS_ASIC.DSO.COMPANY_REGISTER.active_data" AS "ASIC",
	:LT_WORKSET  AS "DET_ABN"
WHERE  
	"ASIC"."ABN" = "DET_ABN"."ABN"
)
;

---Giving priorty to monthly file and then to 6 monthly file
ASIC_STATUS =
SELECT * FROM
(
SELECT 
	"ABN",
	"ORG_STATUS",
	RANK() OVER (PARTITION BY "ABN" ORDER BY "ABN", "RANK_2" ASC) AS "RANK_1"
FROM	
(
	SELECT * FROM :ASIC_6MONTHLY
	UNION
	SELECT * FROM :ASIC_MONTHLY
	
)	
ORDER BY "ABN"
)
WHERE "RANK_1" = '1'
;
-------------------------------------------------------------
-----------------Exempt Industry Codes-----------------------
ABN_EXMPT_GOV_SUP =

SELECT DISTINCT "ABN"
FROM
(
SELECT DISTINCT 
	"ATO"."ABN" AS "ABN"
FROM "osr.edw.staging.td.ato.proxy::CV_BASNIND_C" AS "ATO",
	:LT_WORKSET AS "DATA_SEL"
WHERE 
	"ATO"."ABN" = "DATA_SEL"."ABN" 
AND    
	"ATO"."ANZSIC_CD" IN ('47200','60100','62100','75100','75200','75300','75400','75510','75520','76000','77110','77130','77140','77200','80100','80210','80220','80230','80240','81020','84010','84020','85910','89100','89210','89220','95400')
AND
	TO_NVARCHAR("ATO"."FINANCIAL_YEAR") = "DATA_SEL"."GJAHR"

UNION

SELECT DISTINCT 
	"ABR"."ABN" AS "ABN"
FROM "osr.edw.staging.md.abr.proxy::CV_AGENCY_DATA_C" AS "ABR",
	:LT_WORKSET AS "DATA_SEL"
WHERE 
	"ABR"."ABN" = "DATA_SEL"."ABN" 
AND    
	"ABR"."MN_INDY_CLSN" IN ('47200','60100','62100','75100','75200','75300','75400','75510','75520','76000','77110','77130','77140','77200','80100','80210','80220','80230','80240','81020','84010','84020','85910','89100','89210','89220','95400')


)	;

-----------------------------------------------------------------------------------
EXT_DATA =
SELECT DISTINCT 
		"ABN",
		"PERIOD_CATEGORY",
		"PERIOD_KEY",
		"GJAHR",
		"GROUP_ID",
		"ABR_ACNC_FLAG",
		"ASIC_ORG_STATUS",
		CASE WHEN "ASIC_ORG_STATUS" = 'REGD' OR "ASIC_ORG_STATUS" = '' OR "ASIC_ORG_STATUS" IS NULL THEN 'Y' ELSE 'N' END AS "ASIC_REGD"  ,
		"SUP_GOV_EXMPT_ANZSIC"
FROM
(
	SELECT
		"WS"."ABN"                       AS  "ABN", 
		"WS"."PERIOD_CATEGORY" 		     AS  "PERIOD_CATEGORY",
	    "WS"."PERIOD_KEY"                AS  "PERIOD_KEY",
		"WS"."GJAHR"                     AS  "GJAHR",
		"WS"."GROUP_ID"                  AS  "GROUP_ID",
		CASE WHEN  "WS"."ABN" = "FUND"."ABN" THEN 'Y' ELSE 'N' END AS "ABR_ACNC_FLAG" ,
		"ASIC"."ORG_STATUS"              AS "ASIC_ORG_STATUS" ,
		CASE WHEN "EXMP"."ABN"	IS NOT NULL THEN 'Y' ELSE 'N' END AS "SUP_GOV_EXMPT_ANZSIC"
	FROM 
		:LT_WORKSET AS  "WS" 
	LEFT OUTER JOIN 
		:ABR_FUND_ACNC_ABN AS "FUND" 
	ON
		"WS"."ABN" = "FUND"."ABN"
	LEFT OUTER JOIN
		:ASIC_STATUS AS "ASIC"
	ON
		"WS"."ABN" = "ASIC"."ABN"
	LEFT OUTER JOIN
		:ABN_EXMPT_GOV_SUP AS "EXMP"
	ON
		"WS"."ABN" = "EXMP"."ABN"	
)	
;

--------------------End Of External Data---------------
--------------------Start of RMS Data------------------
BP_ABN =
SELECT DISTINCT 
        "PARTNER" ,
        "IDNUMBER" AS "ABN"
    FROM 
		"osr.edw.staging.md.rms.synonym::CDS_BP.DSO.BUT0ID.active_data" 
 	WHERE "TYPE" = 'ZABN'
 	AND "PARTNER"  NOT IN ( 
 		
 		SELECT 	DISTINCT "PARTNER" FROM "osr.edw.staging.md.rms.synonym::CDS_BP.DSO.BUT000.active_data"
		WHERE "BU_GROUP" IN ('OLGR') OR "AUGRP"  IN ('ZOFT') OR "XDELE" = 'X'
 	) 
   AND "IDNUMBER" IN (SELECT DISTINCT "ABN" FROM :LT_WORKSET )
   
;


---------------------------BP/ABN PT Registration----------------------------------
PT_REG_FACTS =
SELECT DISTINCT 
"PARTNER"
FROM
(
SELECT DISTINCT 
	"BPARTNER" AS "PARTNER",
	CASE WHEN LEFT("PRT_LIAB_DATE",8) < '19000101' THEN TO_NVARCHAR('19000101') ELSE TO_NVARCHAR(LEFT("PRT_LIAB_DATE",8)) END AS "PRT_LIAB_DATE",	
	CASE WHEN LEFT("VALID_TO",8)      < '19000101' THEN TO_NVARCHAR('19000101') ELSE TO_NVARCHAR(LEFT("VALID_TO",8))      END AS "VALID_TO"
FROM "osr.edw.platform.fra.prt.dt.abn::CV_PRT_BP_REG_FACTS"
WHERE "BPARTNER" IN (SELECT DISTINCT "PARTNER" FROM :BP_ABN)
)
WHERE TO_NVARCHAR("VALID_TO")    >= TO_NVARCHAR(:lv_role_dt )
AND TO_NVARCHAR("PRT_LIAB_DATE") <= TO_NVARCHAR(:lv_role_dt )
;

PT_DATA =
SELECT DISTINCT 
   "S1"."ABN"      AS "ABN",
   "S1"."PARTNER"  AS "PARTNER",
   'PT'            AS "PT_ROLE"
FROM 
	:BP_ABN AS "S1" 
INNER JOIN
	:PT_REG_FACTS AS "PTR"
ON  
	"S1"."PARTNER" = "PTR"."PARTNER";
	
-----------------------------------------------------------------------------------
---------------------------BP/ABN ID Registration----------------------------------
LT_ID_CO =

SELECT DISTINCT 
"PSOBKEY",
"PARTNER",
"VALID_TO"
FROM
(
SELECT 
DISTINCT
	"B"."PSOBKEY" AS "PSOBKEY",
	"B"."PARTNER" AS "PARTNER",
	"B"."PARTNERACCTYP" AS "PARTNERACCTYP",
	CASE WHEN LEFT("A"."VALUE_GENERIC",8) < '19000101' THEN TO_NVARCHAR('19000101') ELSE TO_NVARCHAR(LEFT("A"."VALUE_GENERIC",8)) END AS "VALID_TO"
FROM "osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "A"
INNER JOIN
"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DPSOBBPACC.active_data" AS "B"
ON
"A"."OBJID" = "B"."PSOBKEY"
WHERE 
"A"."OBJID" IN ( SELECT  DISTINCT "PSOBKEY" FROM "osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DPSOBBPACC.active_data" 
					WHERE "PARTNERACCTYP" = 'ID'
					AND   "PARTNER" IN (SELECT DISTINCT "PARTNER" FROM :BP_ABN)
)
AND  "A"."FACT_TYPE" = 'RG01'
AND  "A"."FACT_CAT_SEQ" = '82'
AND  "A"."FACT_SET" = 'ZIND'
AND  "B"."PARTNERACCTYP" = 'ID'
)
WHERE  TO_NVARCHAR("VALID_TO") >= TO_NVARCHAR(:lv_role_dt)
;

ID_DATA =
SELECT DISTINCT 
   "S1"."ABN"     AS "ABN",
   "S1"."PARTNER" AS "PARTNER",
   'ID'           AS "ID_ROLE"

FROM 
	:BP_ABN AS "S1" 
INNER JOIN
	:LT_ID_CO AS "IDR"
ON  
	"S1"."PARTNER" = "IDR"."PARTNER"
;
-----------------------------------------------------------------------------------
---------------------------PT Case Data/ PT MLT Exmpt Cases-------------------------------------------
PT_CASE =
SELECT DISTINCT "ABN" FROM 
(
SELECT
	"ABN",
	"PARTNER",
	"CASE_OUTCOME",
	to_dats(LEFT("CREATE_TIME",8)) AS "CREATE_DATE"
FROM "osr.edw.platform.fra.prt.dt.abn::CV_CRM_BP_CASE"
WHERE "CASE_CATEGORY" IN ('PRT', 'ACST', 'MANU') 
AND  "CASE_TYPE" NOT IN ('ZILT')
AND to_dats(LEFT("CREATE_TIME",8)) >= to_dats(:lv_pt_case_dt) 
AND "ABN" IN (SELECT DISTINCT "ABN" FROM :LT_WORKSET)
)
;


PT_EXM_CASE =
SELECT DISTINCT 
 "ABN"
	FROM
	(
	SELECT
		"CASE"."ABN"
		FROM
			(SELECT "ABN" FROM	
				(	
				SELECT 	"ABN",
						"CASE_ID",
						"PARTNER",
						"REASON_CODE", 
						RANK() OVER (PARTITION BY "ABN", "PARTNER" ORDER BY "ABN", "PARTNER" DESC, "CASE_ID" DESC) AS "RANK_1" 
				FROM 	
					"osr.edw.platform.fra.prt.dt.abn::CV_CRM_BP_CASE" 
					
				WHERE "CASE_TYPE"   = 'ZEXM'
				AND   "REASON_CODE" <> 'INVD'
				AND   "CASE_CATEGORY" IN ('MLT','PRT')
				)
			WHERE "RANK_1" = 1
			AND "REASON_CODE" = 'ALLD'
			) AS "CASE"
	INNER JOIN 
		:LT_WORKSET AS "DATA_SEL"
	ON 
		"CASE"."ABN" = "DATA_SEL"."ABN"
)
;

------------------------PRT Grouping--------------------------


PRT_GRP =
SELECT DISTINCT 
"PARTNER"
FROM
(
    SELECT
    CLIENT     AS CLIENT,
    PARTNER1   AS GROUP_NO,
    PARTNER2   AS PARTNER,
    RELTYP     AS RELTYP,
    DATE_FROM  AS DATE_FROM,
    DATE_TO    AS DATE_TO
    FROM "osr.edw.staging.md.rms.synonym::CDS_BP.DSO.BUT050.active_data" 
    WHERE RELTYP IN ( 'ZDGE', 'ZGRM', 'ZIGM')
    AND DATE_FROM  <= :lv_edate
    AND DATE_TO    >= :lv_sdate
    AND PARTNER2 IN (SELECT DISTINCT "PARTNER" FROM :BP_ABN)
)    
;


GROUP_DATA =
SELECT DISTINCT 
   "S1"."ABN"       AS "ABN",
   "S1"."PARTNER"   AS "PARTNER",
   'GRP'            AS "PT_GROUP"
FROM 
	:BP_ABN AS "S1" 
INNER JOIN
	:PRT_GRP AS "PTR"
ON  
	"S1"."PARTNER" = "PTR"."PARTNER";
	
--------------------------------------------------------------

----------------------------End of RMS Data------------------
/* which of these fields?
lv_edate = TO_DATS(CONCAT(:lv_fy,'0630')); 
lv_sdate = TO_DATS(CONCAT((TO_INT(:lv_fy) - 1 ),'0701'));

DATE_REGISTERED DATE,
DATE_CANCELLED DATE,
STATE_GROUP_ID NVARCHAR(25) ,
DATE_GROUP_JOINED DATE,
DATE_GROUP_LEFT DATE
*/

IS_WAGES_DATA = 
	SELECT DISTINCT
		"WAGES"."ABN"
	FROM "osr.edw.platform.fra.prt.dt.abn.wages::TF_ABN_RMS_WAGES"() AS "WAGES"
	INNER JOIN :LT_WORKSET AS "WS"
	ON "WAGES"."ABN"					=  "WS"."ABN"
		AND "WAGES"."GJAHR" 			=  "WS"."GJAHR"
		AND "WAGES"."PERIOD_CATEGORY"	=  "WS"."PERIOD_CATEGORY"
		AND "WAGES"."PERIOD_KEY"		=  "WS"."PERIOD_KEY"
;
		


Step2 =
SELECT DISTINCT 
		"A"."ABN",
		"A"."PERIOD_CATEGORY",
		"A"."PERIOD_KEY",
		"A"."GJAHR",
-- Begin change 04/11/2019 for contractors		
		--CASE WHEN :lv_flag_abr_acnc = 'Y'  				AND "A"."ABR_ACNC_FLAG" = 'Y' 			THEN 'Y' ELSE 'N' END AS "ABR_ACNC_FLAG",
		--CASE WHEN :lv_flag_asic_regd = 'Y' 				AND "A"."ASIC_REGD" = 'N'    			THEN 'N' ELSE 'Y' END AS "ASIC_REGD",
		--CASE WHEN :lv_flag_sup_gov_exmpt_anzsic = 'Y' 	AND "A"."SUP_GOV_EXMPT_ANZSIC" = 'Y' 	THEN 'Y' ELSE 'N' END AS "SUP_GOV_EXMPT_ANZSIC",
		CASE WHEN :lv_flag_oth_exm_ind = 'Y'  				AND "A"."ABR_ACNC_FLAG" = 'Y' 			THEN 'Y' ELSE 'N' END AS "ABR_ACNC_FLAG",
		CASE WHEN :lv_flag_oth_exm_ind = 'Y' 				AND "A"."ASIC_REGD" = 'N'    			THEN 'N' ELSE 'Y' END AS "ASIC_REGD",
		CASE WHEN :lv_flag_oth_exm_ind = 'Y' 				AND "A"."SUP_GOV_EXMPT_ANZSIC" = 'Y' 	THEN 'Y' ELSE 'N' END AS "SUP_GOV_EXMPT_ANZSIC",
		--CASE WHEN :lv_pt_role = 'Y' 					AND "B"."PT_ROLE" = 'PT'   				THEN 'Y' ELSE 'N' END AS "PT_ROLE",
-- Begin change 04/11/2019 for contractors
		CASE WHEN :lv_id_role = 'Y' 					AND "C"."ID_ROLE" = 'ID'   				THEN 'Y' ELSE 'N' END AS "ID_ROLE",
		CASE WHEN :lv_pt_case = 'Y' 					AND "D"."ABN" IS NOT NULL  				THEN 'Y' ELSE 'N' END AS "PT_CASE",
		CASE WHEN :lv_pt_exm_case = 'Y'					AND "E"."ABN" IS NOT NULL  				THEN 'Y' ELSE 'N' END AS "FLAG_EXM_CASE",
		CASE WHEN :lv_flag_pt_grouping = 'Y'            AND "F"."PT_GROUP" = 'GRP'              THEN 'Y' ELSE 'N' END AS "PT_GROUP",
		CASE WHEN :lv_flag_is_wages = 'Y'           	AND "G"."ABN" IS NOT NULL               THEN 'Y' ELSE 'N' END AS "IS_WAGES"
FROM 
		:EXT_DATA AS "A" 
	LEFT OUTER JOIN
		:PT_DATA  AS "B" 
	ON
		"A"."ABN" = "B"."ABN"
	LEFT OUTER JOIN
		:ID_DATA  AS "C" 
	ON
		"A"."ABN" = "C"."ABN"
    LEFT OUTER JOIN
		:PT_CASE  AS "D" 
	ON
		"A"."ABN" = "D"."ABN"	
	LEFT OUTER JOIN
		:PT_EXM_CASE  AS "E" 
	ON
		"A"."ABN" = "E"."ABN"	
    LEFT OUTER JOIN
		:GROUP_DATA  AS "F" 
	ON
		"A"."ABN" = "F"."ABN"		
	LEFT OUTER JOIN
		:IS_WAGES_DATA  AS "G" 
	ON
		"A"."ABN" = "G"."ABN"	
	
;


ET_RESULT =
SELECT
   "ABN",
   "PERIOD_CATEGORY",
   "PERIOD_KEY",
   "GJAHR",
   100 AS "DETECTION_RESULT"
   FROM :Step2
WHERE
--	"PT_ROLE"					= 'Y' -- removed for contractors
	"ID_ROLE"					= 'Y'
OR	"PT_CASE"					= 'Y'
OR	"ABR_ACNC_FLAG" 			= 'Y'
OR	"ASIC_REGD"    			    = 'N'
OR	"SUP_GOV_EXMPT_ANZSIC"      = 'Y'
OR  "FLAG_EXM_CASE"				= 'Y'
OR  "PT_GROUP"                  = 'Y'
OR	"IS_WAGES"					= 'Y' -- added for contractors
   ;
----------------------Text-------------------------


------------------------------------------------

Step2_txt =

SELECT DISTINCT 
		"ABN",
		"PERIOD_CATEGORY",
		"PERIOD_KEY",
		"GJAHR",
		"ABR_ACNC_FLAG",
		"ASIC_REGD",
		"SUP_GOV_EXMPT_ANZSIC" ,
		"PT_ID_CASE"
FROM
(
SELECT DISTINCT 
		"A"."ABN",
		"A"."PERIOD_CATEGORY",
		"A"."PERIOD_KEY",
		"A"."GJAHR",
		"A"."ABR_ACNC_FLAG",
		"A"."ASIC_REGD",
		"A"."SUP_GOV_EXMPT_ANZSIC" ,
		--CASE WHEN ("B"."PT_ROLE" = 'PT' OR 	"C"."ID_ROLE" = 'ID' OR  "D"."ABN" IS NOT NULL OR "E"."ABN" IS NOT NULL) THEN 'Y' ELSE 'N' END AS "PT_ID_CASE"
		CASE WHEN (	"C"."ID_ROLE" = 'ID' OR  "D"."ABN" IS NOT NULL OR "E"."ABN" IS NOT NULL) THEN 'Y' ELSE 'N' END AS "PT_ID_CASE"
FROM 
		:EXT_DATA AS "A" 
	LEFT OUTER JOIN
		:PT_DATA  AS "B" 
	ON
		"A"."ABN" = "B"."ABN"
	LEFT OUTER JOIN
		:ID_DATA  AS "C" 
	ON
		"A"."ABN" = "C"."ABN"
    LEFT OUTER JOIN
		:PT_CASE  AS "D" 
	ON
		"A"."ABN" = "D"."ABN"	
	LEFT OUTER JOIN
		:PT_EXM_CASE  AS "E" 
	ON
		"A"."ABN" = "E"."ABN"	
WHERE "A"."ABN" IN ( SELECT DISTINCT "ABN" FROM :ET_RESULT)		
)	
;

----------------------------------------------
  
ET_TEXT = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
'' AS "TEXT",
'/OSRQLD/FRA_PRT' AS "MSGID",
'015' AS "MSGNO",
CASE WHEN "PT_ID_CASE" = 'Y'           THEN ' :Yes '       ELSE ' :No '       END AS  "MSGV1",
CASE WHEN ("ASIC_REGD"  = 'Y' OR "SUP_GOV_EXMPT_ANZSIC" = 'Y' OR   "ABR_ACNC_FLAG" = 'Y')   THEN ' :Yes exempt '  ELSE ' :Not exempt ' END AS  "MSGV2",
''  AS  "MSGV3",
''  AS  "MSGV4",
'' AS "MSGV1_FC",
'' AS "MSGV2_FC",
'' AS "MSGV3_FC",
'' AS "MSGV4_FC"
FROM 
:Step2_txt
;

END;