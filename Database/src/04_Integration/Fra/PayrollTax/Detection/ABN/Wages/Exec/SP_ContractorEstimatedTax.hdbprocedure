PROCEDURE "osr.edw.platform.fra.prt.dt.abn.wages.ex::SP_ContractorEstimatedTax"( 
    IN  it_data_for_rule 	"osr.edw.platform.fra.prt.dt.abn::Types.wages.data_wage",
    IN 	parameters          "osr.edw.platform.fra.prt.dt.abn::Types.wages.param_rank_contractor_estimated_tax",
    OUT et_data	       		"osr.edw.platform.fra.prt.dt.abn::Types.wages.ContractorEstimatedTaxData",
    OUT et_result       	"osr.edw.platform.fra.prt.dt.abn::Types.wages.result",
    OUT et_text             "osr.edw.platform.fra.prt.dt.abn::Types.wages.text"
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   READS SQL DATA AS
BEGIN

DECLARE lv_scenario NVARCHAR(10); -- PRT3.1 = TPAR, PRT3.2 = CNTR
DECLARE lv_mode NVARCHAR(1);  
DECLARE lv_thld_yearly Decimal(15,2);
DECLARE lv_max_rating Decimal(3,2);
DECLARE lv_rfr_max_low Decimal(15,2);
DECLARE lv_gjahr NVARCHAR(4);  
 
SELECT 
	"RUN_MODE",
	"THRESHOLD_YEARLY",
	"SCENARIO" -- PRT3.1 = TPAR, PRT3.2 = CNTR
INTO 
	lv_mode,
	lv_thld_yearly,
	lv_scenario
FROM :PARAMETERS LIMIT 1;

SELECT top 1 TO_NVARCHAR("GJAHR") into lv_gjahr FROM :it_data_for_rule ;
SELECT MAX("RISK_FACTOR_RATING") INTO lv_max_rating FROM "osr.edw.platform.fra.prt.dt.abn.wages.dt::CV_RFR_ESTIMATED_TAX";
SELECT "LOW" INTO lv_rfr_max_low FROM "osr.edw.platform.fra.prt.dt.abn.wages.dt::CV_RFR_ESTIMATED_TAX" WHERE "TOP_BAND" = 'X';



IF lv_scenario = 'PRT3.1' THEN -- TPAR
-- 13/02/2020 Added filter to take only Eligible Payee, Payer from CV_PRT_PRTCNTR view
lt_wages_filter = 
	SELECT 
		"ABN",
		"PERIOD_CATEGORY",
		"PERIOD_KEY",
		"GJAHR",
		TO_NVARCHAR('AUD') AS "WAERS",
		0 AS "WAGE"
	FROM :it_data_for_rule AS "A"
WHERE EXISTS  (
	SELECT DISTINCT PAYER_ABN, GJAHR FROM "osr.edw.source.td.fra.proxy::CV_PRT_PRTCNTR" AS "TPAR"
	WHERE 	"A"."GJAHR" = "TPAR"."GJAHR"
	AND     "A"."ABN"	= "TPAR"."PAYER_ABN"
				)
;

	lt_wages = 
		SELECT 		
			"EST"."ABN",
			"EST"."PERIOD_CATEGORY",
			"EST"."PERIOD_KEY",
			"EST"."GJAHR", 
			100 AS "DETECTION_RESULT",
			"EST"."TPAR_WAGES" AS "WAGE",
			CASE WHEN "EST"."TPAR_EST_TAX_LESS_RMS" < 0 THEN 0 ELSE "EST"."TPAR_EST_TAX_LESS_RMS" END AS "RISK_AMOUNT",
			'AUD' AS "CURRENCY",
			:lv_max_rating AS "RISK_FACTOR_RATING"
		FROM "osr.edw.platform.fra.prt.dt.abn.wages::TF_CNTR_TAX_CALCULATION"(:lv_gjahr, 'Y') AS "EST"
		INNER JOIN :lt_wages_filter as "WAGES"
		ON "EST"."ABN" = "WAGES"."ABN"
		AND "EST"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
		AND "EST"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
		AND "EST"."GJAHR" = "WAGES"."GJAHR"
		WHERE "EST"."TPAR_WAGES" >= :lv_thld_yearly
		AND "EST"."CNTR_WAGES" > 0 
		
		;
END IF;

IF lv_scenario = 'PRT3.2' THEN -- ITR
--12/02/2020 in 3.2 ITR Scenario we need to exclude all the ABN's which are part of TPAR data (Payer ABN) 
--for the Financial year.
--Exclude the ABN if its avilable as a payer in TPAR data for the financial year.
lt_wages_filter =
SELECT DISTINCT
		"ABN",
		"PERIOD_CATEGORY",
		"PERIOD_KEY",
		"GJAHR",
		TO_NVARCHAR('AUD') AS "WAERS",
		0 AS "WAGE"
FROM :it_data_for_rule AS "A"
WHERE NOT EXISTS  (
	SELECT DISTINCT PAYER_ABN, FINANCIAL_YEAR FROM "osr.edw.staging.td.ato.proxy::TF_TPAR_PAYEE_C"() AS "TPAR"
	WHERE 	"A"."GJAHR" = "TPAR"."FINANCIAL_YEAR"
	AND     "A"."ABN"	= "TPAR"."PAYER_ABN"
				)
			
;
	lt_wages = 
		SELECT 		
			"EST"."ABN",
			"EST"."PERIOD_CATEGORY",
			"EST"."PERIOD_KEY",
			"EST"."GJAHR", 
			100 AS "DETECTION_RESULT",
			"EST"."ITR_WAGES" AS "WAGE",
			CASE WHEN "EST"."ITR_EST_TAX_LESS_RMS" < 0 THEN 0 ELSE "EST"."ITR_EST_TAX_LESS_RMS" END AS "RISK_AMOUNT",
			'AUD' AS "CURRENCY",
			:lv_max_rating AS "RISK_FACTOR_RATING"
		FROM "osr.edw.platform.fra.prt.dt.abn.wages::TF_CNTR_TAX_CALCULATION"(:lv_gjahr, 'Y') AS "EST"
		INNER JOIN :lt_wages_filter as "WAGES"
			ON "EST"."ABN" = "WAGES"."ABN"
			AND "EST"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
			AND "EST"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
			AND "EST"."GJAHR" = "WAGES"."GJAHR"
		WHERE "ITR_WAGES" >= :lv_thld_yearly
		AND "EST"."ITR_CNTR_WAGES" > 0 
	;
END IF;


	lt_result_new = 
			SELECT 		
				"ABN",
				"PERIOD_CATEGORY",
				"PERIOD_KEY",
				"GJAHR", 
				"DETECTION_RESULT",
				"WAGE",
				"RISK_AMOUNT",
				"CURRENCY",
				:lv_max_rating AS "RISK_FACTOR_RATING"
			FROM :lt_wages
			WHERE "RISK_AMOUNT" >= :lv_rfr_max_low
			UNION
			SELECT 		
				"W"."ABN",
				"W"."PERIOD_CATEGORY",
				"W"."PERIOD_KEY",
				"W"."GJAHR", 
				"W"."DETECTION_RESULT",
				"W"."WAGE",
				"W"."RISK_AMOUNT",
				"W"."CURRENCY",
				"R"."RISK_FACTOR_RATING" AS "RISK_FACTOR_RATING"
			FROM :lt_wages AS "W", "osr.edw.platform.fra.prt.dt.abn.wages.dt::CV_RFR_ESTIMATED_TAX" AS "R"
			WHERE "W"."RISK_AMOUNT" >= "R"."LOW" 
				AND "W"."RISK_AMOUNT" < "R"."HIGH" 
				AND "R"."TOP_BAND" <> 'X'
			;
	


IF :lv_mode = 'R' THEN

et_result = 
	SELECT
		"ABN",
		"PERIOD_CATEGORY",
		"PERIOD_KEY",
		"GJAHR",
		"RISK_FACTOR_RATING" AS "DETECTION_RESULT"
	FROM :lt_result_new
;

et_text = 
	SELECT 
		"ABN",
		"PERIOD_CATEGORY",
		"PERIOD_KEY",
		"GJAHR",
		'' AS "TEXT",
		'/OSRQLD/FRA_PRT' AS "MSGID",
		--'017' AS "MSGNO",
		'027' AS "MSGNO",
		TO_DECIMAL("RISK_AMOUNT",15,2) AS "MSGV1",
		"CURRENCY" AS "MSGV2",
		"RISK_FACTOR_RATING" AS "MSGV3",
		'' AS "MSGV4",
		'' AS "MSGV1_FC",
		'WAERS' AS "MSGV2_FC",
		'' AS "MSGV3_FC",
		'' AS "MSGV4_FC"
	FROM :lt_result_new
;

END IF;

-- for testing output
et_data = 
	SELECT 
		'wages' AS "SOURCE",
		"ABN",
		"WAGE"
	FROM :lt_result_new
	;
		
END