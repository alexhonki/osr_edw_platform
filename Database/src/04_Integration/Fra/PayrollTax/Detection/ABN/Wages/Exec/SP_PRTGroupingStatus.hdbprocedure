PROCEDURE "osr.edw.platform.fra.prt.dt.abn.wages.ex::SP_PRTGroupingStatus"(
	
	IN  it_data_for_rule 	"osr.edw.platform.fra.prt.dt.abn::Types.wages.ws",
	IN PARAMETERS			"osr.edw.platform.fra.prt.dt.abn::Types.wages.param_pt_grp_status",
    OUT et_result       	"osr.edw.platform.fra.prt.dt.abn::Types.wages.result"
    --OUT et_text             "osr.edw.platform.fra.prt.dt.abn::Types.wages.text"
	
	
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   READS SQL DATA AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   
--Note   : Check is for the releveant year 
   
DECLARE sdate DATE;
DECLARE edate DATE;
DECLARE lv_grpstatus_ng  NVARCHAR(1) ;
DECLARE lv_grpstatus_gm  NVARCHAR(1) ;
DECLARE lv_grpstatus_dge NVARCHAR(1) ;

SELECT
    PT_NG,
    PT_GM,
    PT_DGE
INTO
	lv_grpstatus_ng,
	lv_grpstatus_gm,
	lv_grpstatus_dge
FROM :PARAMETERS LIMIT 1;

FY_DATES =
SELECT DISTINCT
	"FISCAL_YEAR",
	CASE WHEN "FISCAL_YEAR" <> '' THEN TO_NVARCHAR(TO_DATS(MIN(DATE_SQL))) ELSE '' END AS "ST_DATE",
	CASE WHEN "FISCAL_YEAR" <> '' THEN TO_NVARCHAR(TO_DATS(MAX(DATE_SQL))) ELSE '' END AS "EN_DATE"
FROM "osr.hana.platform.synonym::_SYS_BI.M_FISCAL_CALENDAR"
WHERE "CALENDAR_VARIANT" = 'Z6'
AND TO_NVARCHAR("FISCAL_YEAR") IN (SELECT DISTINCT "GJAHR" FROM :it_data_for_rule )
GROUP BY "FISCAL_YEAR"
;

PRT_GROUPING_STATUS =
SELECT * FROM
(
SELECT CASE WHEN :lv_grpstatus_ng = 'Y'  THEN 'NG'  ELSE '' END AS "PRT_GRP" FROM "osr.hana.platform.synonym::SYS.DUMMY"
UNION 
SELECT CASE WHEN :lv_grpstatus_gm = 'Y'  THEN 'GM'  ELSE '' END AS "PRT_GRP" FROM "osr.hana.platform.synonym::SYS.DUMMY"
UNION 
SELECT CASE WHEN :lv_grpstatus_dge = 'Y' THEN 'DGE' ELSE '' END AS "PRT_GRP" FROM "osr.hana.platform.synonym::SYS.DUMMY"
)
WHERE "PRT_GRP" <> '';


SELECT DISTINCT "ST_DATE"    INTO sdate     FROM :FY_DATES ;
SELECT DISTINCT "EN_DATE"    INTO edate     FROM :FY_DATES ;

BUT0ID =
SELECT DISTINCT
	"BUT0ID"."PARTNER" AS "PARTNER",
	"BUT0ID"."TYPE" AS "TYPE",
	"BUT0ID"."IDNUMBER" AS "IDNUMBER"
	FROM "osr.edw.staging.md.rms.synonym::CDS_BP.DSO.BUT0ID.active_data" AS "BUT0ID"
WHERE "TYPE" = 'ZABN'
AND EXISTS (
	SELECT * FROM :it_data_for_rule  AS "KEY"
	WHERE "BUT0ID"."IDNUMBER" = "KEY"."ABN"
)
;


RMS_PTX_DATA =
SELECT DISTINCT
	"PARTNER",
	"IDNUMBER" AS "ABN",
	"PSOBKEY"  AS "OBJID"
FROM
(
SELECT DISTINCT
	"A"."PARTNER",
	"A"."IDNUMBER",
	"B"."PSOBKEY"
FROM 
	:BUT0ID  AS "A"
INNER JOIN
	(SELECT 
			"PSOBKEY", 
			"PARTNER" 
	FROM "osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DPSOBBPACC.active_data" 
	WHERE "PARTNERACCTYP" = 'PT' AND "XOBSL" <> 'X') AS "B"
ON
	"A"."PARTNER" = "B"."PARTNER"
)
;	



PRT_DATA =
SELECT 
"OBJID",
"PARTNER",
"ABN",
"FACT_CAT_SEQ_21" AS  "PRT_LIAB_DATE",
"FACT_CAT_SEQ_20" AS  "QLD_LIAB_DATE",
"FACT_CAT_SEQ_11" AS  "PRT_GRP_STATUS",
CASE WHEN "VALID_FROM" < '19000101' THEN TO_DATS('19000101') ELSE TO_DATS(LEFT("VALID_FROM",8)) END AS "VALID_FROM" ,
TO_DATS(LEFT("VALID_TO",8)) AS "VALID_TO"
FROM
(
SELECT 
"A"."OBJID",
"A"."PARTNER",
"A"."ABN",
"A"."VALID_FROM",
"A"."VALID_TO",
"B"."VALUE_GENERIC" AS "FACT_CAT_SEQ_21",
"C"."VALUE_GENERIC" AS "FACT_CAT_SEQ_20", 
"D"."VALUE_GENERIC" AS "FACT_CAT_SEQ_11"
FROM
	(
	SELECT * FROM
	(
	SELECT
		"OBJID",
		"PARTNER",
		"ABN",
		"VALID_FROM",
		"VALID_TO",
		RANK() OVER (PARTITION BY "OBJID","ABN" ORDER BY   "OBJID","ABN"  , "VALID_FROM" DESC , "VALID_TO" DESC) AS "RANK_1"
	FROM
		(
		SELECT 
			"A"."OBJID",
			"A"."PARTNER",
			"A"."ABN",
			TO_NVARCHAR(LEFT("E"."VALID_FROM",8)) AS "VALID_FROM",
			TO_NVARCHAR(LEFT("E"."VALID_TO",8)) AS "VALID_TO"
		FROM

			:RMS_PTX_DATA  AS "A"  

		INNER JOIN
			"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "E" ON
			"A"."OBJID" = "E"."OBJID"
		WHERE 
				"E"."FACT_TYPE" = 'ZPRE'
		AND 	"E"."FACT_CAT_SEQ" = '11'
		AND     TO_NVARCHAR(LEFT("E"."VALID_FROM",8)) <= TO_NVARCHAR(TO_DATS(:edate))
		AND     TO_NVARCHAR(LEFT("E"."VALID_TO",8))   >= TO_NVARCHAR(TO_DATS(:sdate))
		)
	)
	WHERE RANK_1 = 1
	) AS "A"

INNER JOIN
"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "B" ON
"A"."OBJID" = "B"."OBJID"
AND "A"."VALID_FROM" = TO_NVARCHAR(LEFT("B"."VALID_FROM",8))
AND "A"."VALID_TO" = TO_NVARCHAR(LEFT("B"."VALID_TO",8))

INNER JOIN
"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "C" ON
"A"."OBJID" = "C"."OBJID"
AND "A"."VALID_FROM" = TO_NVARCHAR(LEFT("C"."VALID_FROM",8))
AND "A"."VALID_TO" = TO_NVARCHAR(LEFT("C"."VALID_TO",8))

INNER JOIN
"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "D" ON
"A"."OBJID" = "D"."OBJID"
AND "A"."VALID_FROM" = TO_NVARCHAR(LEFT("D"."VALID_FROM",8))
AND "A"."VALID_TO" = TO_NVARCHAR(LEFT("D"."VALID_TO",8))

WHERE 

	"B"."FACT_TYPE" = 'ZPRE'
AND "B"."FACT_CAT_SEQ" = '21'

AND "C"."FACT_TYPE" = 'ZPRE'
AND "C"."FACT_CAT_SEQ" = '20'

AND "D"."FACT_TYPE" = 'ZPRE'
AND "D"."FACT_CAT_SEQ" = '11'

)
;

et_result =

SELECT
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
100 AS "DETECTION_RESULT"
FROM
:it_data_for_rule
WHERE "ABN" IN ( SELECT DISTINCT "ABN" FROM :PRT_DATA WHERE "PRT_GRP_STATUS" IN (SELECT DISTINCT "PRT_GRP" FROM :PRT_GROUPING_STATUS ))
;
   
   
   
END