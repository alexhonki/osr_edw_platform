PROCEDURE "osr.edw.platform.fra.prt.dt.abn.wages.ex::SP_CntrAnnualWageExceedingThld"( 
    IN  it_data_for_rule 	"osr.edw.platform.fra.prt.dt.abn::Types.wages.data_wage",
    IN 	parameters          "osr.edw.platform.fra.prt.dt.abn::Types.wages.param_exceeding_u",
    OUT et_result       	"osr.edw.platform.fra.prt.dt.abn::Types.wages.result_w_amnt",
    OUT et_text             "osr.edw.platform.fra.prt.dt.abn::Types.wages.text"
	
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   READS SQL DATA AS
BEGIN

DECLARE lv_mode NVARCHAR(1);  

DECLARE lv_thld_yearly Decimal(15,2) ;
DECLARE lx_ato NVARCHAR(1) DEFAULT 'N';
DECLARE lx_wcq NVARCHAR(1) DEFAULT 'N';
DECLARE lx_interstate NVARCHAR(1) DEFAULT 'N';

DECLARE lv_scenario NVARCHAR(10); -- PRT3.1 = TPAR, PRT3.2 = CNTR

/*
        table type param_exceeding_u {
            RUN_MODE         : String(1);
            SCENARIO         : String(10);
            THRESHOLD_YEARLY : Decimal(15, 2);
            FLAG_EXCLUSION   : String(1);
            FLAG_ATO         : String(1);
            FLAG_WCQ         : String(1);
            FLAG_INTERSTATE  : String(1);
        };
*/

SELECT 
	"RUN_MODE",
	"SCENARIO",
	"THRESHOLD_YEARLY",
	"FLAG_ATO",
	"FLAG_WCQ",
	"FLAG_INTERSTATE"
INTO 
	lv_mode,
	lv_scenario,
	lv_thld_yearly,
	lx_ato,
	lx_wcq,
	lx_interstate
FROM :PARAMETERS LIMIT 1;

lt_wages = 
	SELECT 
		"ABN",
		"PERIOD_CATEGORY",
		"PERIOD_KEY",
		"GJAHR",
		TO_NVARCHAR('AUD') AS "WAERS",
		0 AS "WAGE"
	FROM :it_data_for_rule
;

-- ATO BAS Data   	
 IF lx_ato = 'Y' THEN
 	lt_wages = 
 	SELECT 
 	"ABN",
 	"PERIOD_CATEGORY",
 	"PERIOD_KEY",
 	"GJAHR",
 	"WAERS",
 	"WAGE"
 	FROM :lt_wages
 	UNION
 	SELECT 
 	"WAGES"."ABN" AS "ABN",
 	"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
 	"WAGES"."GJAHR" AS "GJAHR",
 	"WAGES"."WAERS" AS "WAERS",
 	SUM("WAGES"."ATO_BAS_TOTL_PMT_FOR_WRK_AMT") AS "WAGE"
 	FROM "osr.edw.platform.fra.prt.dt.abn.wages::TF_ABN_ATO_BAS_WAGES"() AS "WAGES"
	INNER JOIN :it_data_for_rule AS "KEYS"
	ON "KEYS"."ABN" = "WAGES"."ABN"
		AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
		AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
		AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
	WHERE "WAGES"."PERIOD_CATEGORY" = 'PT-A'
 	GROUP BY 
 	"WAGES"."ABN",
 	"WAGES"."PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY",
 	"WAGES"."GJAHR",
 	"WAGES"."WAERS"
 	HAVING SUM("WAGES"."ATO_BAS_TOTL_PMT_FOR_WRK_AMT")  > 0 
 	;
 	
 END IF;
 
-- ATO ITR Data 
 IF lx_ato = 'Y' THEN
 
 lt_itr = 
 	SELECT 
 	"WAGES"."ABN" AS "ABN",
 	"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
 	"WAGES"."GJAHR" AS "GJAHR",
 	"WAGES"."WAERS" AS "WAERS",
 	SUM("WAGES"."ATO_ITR_SALARY_WAGES") AS "WAGE",
 	SUM("WAGES"."CONTRACTORS_PMNTS") AS "CONTRACTORS_PMNTS"
 	FROM "osr.edw.platform.fra.prt.dt.abn.wages::TF_ABN_ATO_ITR_WAGES"() AS "WAGES"
	INNER JOIN :it_data_for_rule AS "KEYS"
	ON "KEYS"."ABN" = "WAGES"."ABN"
		AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
		AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
		AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
	WHERE "WAGES"."PERIOD_CATEGORY" = 'PT-A'
 	GROUP BY 
 	"WAGES"."ABN",
 	"WAGES"."PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY",
 	"WAGES"."GJAHR",
 	"WAGES"."WAERS"
 	HAVING (SUM("WAGES"."ATO_ITR_SALARY_WAGES") + SUM("WAGES"."CONTRACTORS_PMNTS")) > 0
 	;
 	
 	lt_wages = 
	 	SELECT 
		 	"ABN",
		 	"PERIOD_CATEGORY",
		 	"PERIOD_KEY",
		 	"GJAHR",
		 	"WAERS",
		 	"WAGE"
	 	FROM :lt_wages
	 	UNION
	 	 SELECT 
		 	"ABN",
		 	"PERIOD_CATEGORY",
		 	"PERIOD_KEY",
		 	"GJAHR",
		 	"WAERS",
		 	"WAGE"
	 	FROM :lt_itr

 	;
 END IF;
 
 -- ATO PAYG Data 
 IF lx_ato = 'Y' THEN
 	lt_wages = 
 	SELECT 
 	"ABN",
 	"PERIOD_CATEGORY",
 	"PERIOD_KEY",
 	"GJAHR",
 	"WAERS",
 	"WAGE"
 	FROM :lt_wages
 	UNION
	SELECT 
 	"WAGES"."ABN" AS "ABN",
 	"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
 	"WAGES"."GJAHR" AS "GJAHR",
 	"WAGES"."WAERS" AS "WAERS",
	SUM("WAGES"."RPRTBL_EMPLYR_SUPER_CNTRBN_AMT") + SUM("WAGES"."TOTL_GRS_AMT") AS "WAGE"
	FROM "osr.edw.platform.fra.prt.dt.abn.wages::TF_ABN_PAYG_NIND_WAGES"() AS "WAGES"
	INNER JOIN :it_data_for_rule AS "KEYS"
	ON "KEYS"."ABN" = "WAGES"."ABN"
		AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
		AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
		AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
	WHERE "WAGES"."PERIOD_CATEGORY" = 'PT-A'
 	GROUP BY 
 	"WAGES"."ABN",
 	"WAGES"."PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY",
 	"WAGES"."GJAHR",
 	"WAGES"."WAERS"
 	HAVING (SUM("TOTL_GRS_AMT")+ SUM("RPRTBL_EMPLYR_SUPER_CNTRBN_AMT"))  > 0 
 	;
 END IF;

 -- WCQ Data 
 IF lx_wcq = 'Y' THEN
 
	lt_wcq = 
	SELECT 
 	"WAGES"."ABN" AS "ABN",
 	"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
 	"WAGES"."GJAHR" AS "GJAHR",
 	"WAGES"."WAERS" AS "WAERS",
 	SUM("WAGES"."WCQ_ACT_WAGES") AS "WAGE"
 	FROM "osr.edw.platform.fra.prt.dt.abn.wages::TF_ABN_WCQ_WAGES"() AS "WAGES"
 	WHERE "PERIOD_CATEGORY" = 'PT-A'
 	  AND EXISTS (
 		SELECT * FROM :it_data_for_rule AS "KEYS"
 		WHERE "KEYS"."ABN" = "WAGES"."ABN"
 		  AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
 		  AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
 		  AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
 	  )
 	GROUP BY 
 	"WAGES"."ABN",
 	"WAGES"."PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY",
 	"WAGES"."GJAHR",
 	"WAGES"."WAERS"
 	HAVING SUM("WAGES"."WCQ_ACT_WAGES") > 0
 	;
 	
 	lt_wages = 
 	SELECT 
 	"ABN",
 	"PERIOD_CATEGORY",
 	"PERIOD_KEY",
 	"GJAHR",
 	"WAERS",
 	"WAGE"
 	FROM :lt_wages
 	UNION
 	SELECT 
 	"ABN",
 	"PERIOD_CATEGORY",
 	"PERIOD_KEY",
 	"GJAHR",
 	"WAERS",
 	"WAGE"
 	FROM
	:lt_wcq
 	;
 END IF;
 
 -- OSR Interstate Data 	
 IF lx_interstate = 'Y' THEN
  	lt_wages = 
 	SELECT 
 	"ABN",
 	"PERIOD_CATEGORY",
 	"PERIOD_KEY",
 	"GJAHR",
 	"WAERS",
 	"WAGE"
 	FROM :lt_wages
	UNION
  	SELECT 
	 	"WAGES"."ABN" AS "ABN",
	 	"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
	 	"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
	 	"WAGES"."GJAHR" AS "GJAHR",
	 	"WAGES"."WAERS" AS "WAERS",
	 	MAX("WAGES"."CLIENT_AUST_WAGES") AS "WAGE"
	FROM "osr.edw.platform.fra.prt.dt.abn.wages::TF_ABN_OSR_STATE_WAGES"() AS "WAGES"
	INNER JOIN :it_data_for_rule AS "KEYS"
	ON "KEYS"."ABN" = "WAGES"."ABN"
		AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
		AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
		AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
	WHERE "WAGES"."PERIOD_CATEGORY" = 'PT-A'
 	GROUP BY 
	 	"WAGES"."ABN",
	 	"WAGES"."PERIOD_CATEGORY",
	 	"WAGES"."PERIOD_KEY",
	 	"WAGES"."GJAHR",
	 	"WAGES"."WAERS"
 	HAVING MAX("WAGES"."CLIENT_AUST_WAGES") > 0;
 
 END IF;
 
 
lt_wages =  
	SELECT 
		"ABN",
		"PERIOD_CATEGORY",
		"PERIOD_KEY",
		"GJAHR",
		"WAERS",
		MAX("WAGE") AS "WAGE"
	FROM :lt_wages
	GROUP BY 
		"ABN",
		"PERIOD_CATEGORY",
		"PERIOD_KEY",
		"GJAHR",
		"WAERS"
	HAVING MAX("WAGE") >= :lv_thld_yearly
;

	
-- Add the contractor payments to the Australia wide wages
-- Add Contractor Wages - only required for TPAR scenario
IF lv_scenario = 'PRT3.1' THEN -- TPAR
	lt_cntr_wages = 
		SELECT 
			"WAGES"."PAYER_ABN" AS "ABN",
			"WAGES"."GJAHR" AS "GJAHR",
			SUM("WAGES"."PAYEE_GROSS_PD_AMT") AS "WAGE"
		FROM "osr.edw.source.td.fra.proxy::CV_PRT_PRTCNTR" AS "WAGES"
		INNER JOIN :it_data_for_rule AS "KEYS"
		ON "WAGES"."PAYER_ABN" = "KEYS"."ABN"
		AND "WAGES"."GJAHR" = "KEYS"."GJAHR" 
		GROUP BY "WAGES"."PAYER_ABN", "WAGES"."GJAHR"
	;
		
	lt_wages = 
		SELECT 
			"ABN",
			"PERIOD_CATEGORY",
			"PERIOD_KEY",
			"GJAHR",
			"WAERS",
			MAX("WAGE") AS "WAGE"
		FROM (	
			SELECT 
				"ABN",
				"PERIOD_CATEGORY",
				"PERIOD_KEY",
				"GJAHR",
				"WAERS",
				"WAGE"
			FROM :lt_wages
			UNION
			SELECT 
				"AU_WAGES"."ABN",
				"AU_WAGES"."PERIOD_CATEGORY",
				"AU_WAGES"."PERIOD_KEY",
				"AU_WAGES"."GJAHR",
				TO_NVARCHAR('AUD') AS "WAERS",
				"AU_WAGES"."WAGE" + "CNTR"."WAGE" AS "WAGE"
			FROM :lt_wages AS "AU_WAGES"
			INNER JOIN :lt_cntr_wages AS "CNTR"
			ON "AU_WAGES"."ABN" = "CNTR"."ABN"
				AND "AU_WAGES"."GJAHR" = "CNTR"."GJAHR"
			WHERE "AU_WAGES"."WAGE" + "CNTR"."WAGE" >= :lv_thld_yearly
		) WHERE "WAGE"  >= :lv_thld_yearly
		GROUP BY
			"ABN",
			"PERIOD_CATEGORY",
			"PERIOD_KEY",
			"GJAHR",
			"WAERS"
	;

END IF;

IF lv_scenario = 'PRT3.2' THEN -- ITR
	lt_wages = 
		SELECT 
			"ABN",
			"PERIOD_CATEGORY",
			"PERIOD_KEY",
			"GJAHR",
			"WAERS",
			MAX("WAGE") AS "WAGE"
		FROM ( 
			SELECT
				"ABN",
				"PERIOD_CATEGORY",
				"PERIOD_KEY",
				"GJAHR",
				"WAERS",
				"WAGE"
			FROM :lt_wages
			UNION
			SELECT 
				"ABN",
				"PERIOD_CATEGORY",
				"PERIOD_KEY",
				"GJAHR",
				"WAERS",
				"WAGE"
			FROM (	
				SELECT 
					"AU_WAGES"."ABN",
					"AU_WAGES"."PERIOD_CATEGORY",
					"AU_WAGES"."PERIOD_KEY",
					"AU_WAGES"."GJAHR",
					TO_NVARCHAR('AUD') AS "WAERS",
					CASE WHEN ("AU_WAGES"."WAGE" * "ITR"."CONTRACTORS_PMNTS") = 0 THEN "AU_WAGES"."WAGE" 
						ELSE ("WCQ"."WAGE" / "AU_WAGES"."WAGE" * "ITR"."CONTRACTORS_PMNTS") + "AU_WAGES"."WAGE" 
					END AS "WAGE"
				FROM :lt_wages AS "AU_WAGES"
				INNER JOIN :lt_itr AS "ITR"
				ON "AU_WAGES"."ABN" = "ITR"."ABN"
					AND "AU_WAGES"."GJAHR" = "ITR"."GJAHR"
					AND "AU_WAGES"."PERIOD_KEY" = "ITR"."PERIOD_KEY"
					AND "AU_WAGES"."PERIOD_CATEGORY" = "ITR"."PERIOD_CATEGORY"
				INNER JOIN :lt_wcq AS "WCQ"
				ON "AU_WAGES"."ABN" = "ITR"."ABN"
					AND "AU_WAGES"."GJAHR" = "ITR"."GJAHR"
					AND "AU_WAGES"."PERIOD_KEY" = "ITR"."PERIOD_KEY"
					AND "AU_WAGES"."PERIOD_CATEGORY" = "ITR"."PERIOD_CATEGORY"	
			) WHERE "WAGE" >= :lv_thld_yearly
		)
		GROUP BY
			"ABN",
			"PERIOD_CATEGORY",
			"PERIOD_KEY",
			"GJAHR",
			"WAERS"	
		;
END IF;


lt_wcq_for_tax = 
	SELECT 
		"WAGES"."ABN" AS "ABN",
		"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
		"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
		"WAGES"."GJAHR" AS "GJAHR",
		"WAGES"."WAERS" AS "WAERS",
		SUM("WAGES"."WCQ_ACT_WAGES") AS "WAGE"
	FROM "osr.edw.platform.fra.prt.dt.abn.wages::TF_ABN_WCQ_WAGES"() AS "WAGES"
	INNER JOIN :lt_wages AS "KEYS"
	ON "KEYS"."ABN" = "WAGES"."ABN"
		AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
		AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
		AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
	WHERE "WAGES"."PERIOD_CATEGORY" = 'PT-A'
	GROUP BY 
		"WAGES"."ABN",
		"WAGES"."PERIOD_CATEGORY",
		"WAGES"."PERIOD_KEY",
		"WAGES"."GJAHR",
		"WAGES"."WAERS"
;
 	
lt_wage_for_tax = 
	SELECT 
		"ABN",
		"PERIOD_CATEGORY",
		"PERIOD_KEY",
		"GJAHR",
		"WAERS",
		SUM("WAGE") AS "WAGE",
		SUM("WCQ_ACT_WAGES") AS "WCQ_ACT_WAGES"
	FROM 
	(
		SELECT 
			"ABN",
			"PERIOD_CATEGORY",
			"PERIOD_KEY",
			"GJAHR",
			"WAERS",
			"WAGE", 
			0 AS "WCQ_ACT_WAGES"
		FROM :lt_wages
		UNION
		SELECT 
			"ABN",
			"PERIOD_CATEGORY",
			"PERIOD_KEY",
			"GJAHR",
			"WAERS",
			0 AS "WAGE", 
			"WAGE" AS "WCQ_ACT_WAGES"
		FROM :lt_wcq_for_tax
	)
	GROUP BY 
		"ABN",
		"PERIOD_CATEGORY",
		"PERIOD_KEY",
		"GJAHR",
		"WAERS"
;
 	
lt_result = 
	SELECT 
		"W"."ABN",
		"W"."PERIOD_CATEGORY",
		"W"."PERIOD_KEY",
		"W"."GJAHR",
		100 AS "DETECTION_RESULT",
		CASE WHEN ( "W"."WAGE" >= "THLD"."DEDUCTION_TO") THEN ("W"."WCQ_ACT_WAGES"*("RATE"."PRT_HYRLY_RATE"/100)) -- Higher rate (PRT_HYRLY_RATE) for over deduction threshold 
			ELSE 
				CASE WHEN ( "W"."WAGE" <= "THLD"."THRESHOLD" ) THEN 0 --no PRT liability
					ELSE 
						CASE WHEN ("W"."WAGE" > "THLD"."THRESHOLD"  AND "W"."WAGE" < "THLD"."DEDUCTION_TO") -- PRT Liable but under deduction threshold so use lower rate (PRT_YRLY_RATE)
							THEN (( "W"."WCQ_ACT_WAGES" - ("W"."WCQ_ACT_WAGES"/"W"."WAGE")*("THLD"."THRESHOLD"-(("W"."WAGE"-"THLD"."THRESHOLD")/4)))*("RATE"."PRT_YRLY_RATE"/100)) --lower rate 
								ELSE 0
						END
				END
		END AS "RISK_AMOUNT",
		"W"."WAERS" AS "CURRENCY"
	FROM :lt_wage_for_tax AS "W"
	INNER JOIN "osr.edw.staging.md.rms.prt.proxy::CV_PRT_THRESHOLD" AS "THLD"
	ON  "W"."PERIOD_CATEGORY" = "THLD"."INCOTYP"
		AND "W"."GJAHR" = "THLD"."GJAHR"
	INNER JOIN "osr.edw.staging.md.rms.prt.proxy::CV_PRT_RATE" AS "RATE"
	ON  "W"."GJAHR" = "RATE"."GJAHR"
		AND "W"."PERIOD_KEY" = "RATE"."PERIOD_KEY"
	;

IF :lv_mode = 'R' THEN

et_result = 
	SELECT
		"ABN",
		"PERIOD_CATEGORY",
		"PERIOD_KEY",
		"GJAHR",
		100 AS "DETECTION_RESULT",
		"RISK_AMOUNT",
		"CURRENCY" 
	FROM :lt_result
	;

et_text = 
	SELECT 
		"ABN",
		"PERIOD_CATEGORY",
		"PERIOD_KEY",
		"GJAHR",
		'' AS "TEXT",
		'/OSRQLD/FRA_PRT'			AS "MSGID",
		'033'						AS "MSGNO",
		TO_DECIMAL("WAGE",15,2) 	AS "MSGV1",
		"WAERS" 					AS "MSGV2",
		''							AS "MSGV3",
		''							AS "MSGV4",
		'ATO_BAS_TOTL_PMT_FOR_WRK_AMT'	AS "MSGV1_FC",
		'ATO_BAS_TOTL_PMT_FOR_WRK_AMT'	AS "MSGV2_FC",
		'PERIOD_KEY'				AS "MSGV3_FC",
		''							AS "MSGV4_FC"
	FROM :lt_wage_for_tax
	;

END IF;

IF :lv_mode = 'S' THEN

et_result = 
	SELECT
		"ABN",
		"PERIOD_CATEGORY",
		"PERIOD_KEY",
		"GJAHR",
		100 AS "DETECTION_RESULT",
		"RISK_AMOUNT",
		"CURRENCY" 
	FROM :lt_result
	;

et_text = 
	SELECT 
		"ABN",
		"PERIOD_CATEGORY",
		"PERIOD_KEY",
		"GJAHR",
		'' AS "TEXT",
		'/OSRQLD/FRA_PRT'			AS "MSGID",
		'033'						AS "MSGNO",
		TO_DECIMAL("WAGE",15,2) 	AS "MSGV1",
		"WAERS" 					AS "MSGV2",
		''							AS "MSGV3",
		''							AS "MSGV4",
		'ATO_BAS_TOTL_PMT_FOR_WRK_AMT' AS "MSGV1_FC",
		'ATO_BAS_TOTL_PMT_FOR_WRK_AMT' AS "MSGV2_FC",
		'PERIOD_KEY'				AS "MSGV3_FC",
		''							AS "MSGV4_FC"
	FROM :lt_wage_for_tax
	;

END IF;


END