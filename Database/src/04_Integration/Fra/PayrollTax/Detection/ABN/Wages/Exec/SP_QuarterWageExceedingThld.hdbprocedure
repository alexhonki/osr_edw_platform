PROCEDURE "osr.edw.platform.fra.prt.dt.abn.wages.ex::SP_QuarterWageExceedingThld"( 
    IN  it_data_for_rule 	"osr.edw.platform.fra.prt.dt.abn::Types.wages.data_wage",
    IN 	parameters          "osr.edw.platform.fra.prt.dt.abn::Types.wages.param_exceeding",
    OUT et_result       	"osr.edw.platform.fra.prt.dt.abn::Types.wages.result_w_amnt",
    OUT et_text             "osr.edw.platform.fra.prt.dt.abn::Types.wages.text"
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   READS SQL DATA AS
BEGIN

DECLARE lv_mode NVARCHAR(1);  

DECLARE lv_thld_yearly Decimal(15,2) ;
DECLARE lx_ato NVARCHAR(1) DEFAULT 'N';
DECLARE lx_wcq NVARCHAR(1) DEFAULT 'N';

DECLARE lv_max_rating Decimal(3,2);


SELECT 
"RUN_MODE",
"THRESHOLD_YEARLY",
"FLAG_ATO",
"FLAG_WCQ"
INTO 
lv_mode,
lv_thld_yearly,
lx_ato,
lx_wcq
FROM :PARAMETERS LIMIT 1;

--estimated annual wages when the quarter wage is above the threshold hold
lt_wages_predict = 
SELECT 
"WAGES"."ABN" AS "ABN",
"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
"WAGES"."GJAHR" AS "GJAHR",
"WAGES"."WAERS" AS "WAERS",
CASE 
WHEN RIGHT("WAGES"."PERIOD_KEY",2) = 'Q1'
THEN SUM("WAGES"."ATO_BAS_TOTL_PMT_FOR_WRK_AMT")*4
WHEN RIGHT("WAGES"."PERIOD_KEY",2) = 'Q2'
THEN SUM("WAGES"."ATO_BAS_TOTL_PMT_FOR_WRK_AMT")/2*4
WHEN RIGHT("WAGES"."PERIOD_KEY",2) = 'Q3'
THEN SUM("WAGES"."ATO_BAS_TOTL_PMT_FOR_WRK_AMT")/3*4
END 
AS "WAGE"
FROM "osr.edw.platform.fra.prt.dt.abn.wages::CV_ABN_ATO_BAS_WAGES" AS "WAGES"
WHERE "PERIOD_CATEGORY" = 'PT-Q'
  AND EXISTS (
	SELECT * FROM :it_data_for_rule AS "KEYS"
	WHERE "KEYS"."ABN" = "WAGES"."ABN"
	  AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
	  AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
	  AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
  )
GROUP BY 
"WAGES"."ABN",
"WAGES"."PERIOD_CATEGORY",
"WAGES"."PERIOD_KEY",
"WAGES"."GJAHR",
"WAGES"."WAERS"
;

lt_wages = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"WAERS",
SUM("WAGE") AS "WAGE"
FROM :lt_wages_predict
GROUP BY 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"WAERS"
HAVING SUM("WAGE")  >= :lv_thld_yearly
;

-- use the WCQ wages from previous year as the predicted wage for the current year
lt_wcq_predict = 
SELECT 
"ABN",
"GJAHR",
"WAERS",
SUM("WCQ_ACT_WAGES") AS "WCQ_ACT_WAGES"
FROM (
SELECT 
"WAGES"."ABN" AS "ABN",
"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
TO_NVARCHAR(TO_INT("WAGES"."PERIOD_KEY") + 1) AS "PERIOD_KEY",
TO_NVARCHAR(TO_INT("WAGES"."GJAHR") + 1) AS "GJAHR",
"WAGES"."WCQ_ACT_WAGES" AS "WCQ_ACT_WAGES",
"WAGES"."WAERS" AS "WAERS"
FROM "osr.edw.platform.fra.prt.dt.abn.wages::CV_ABN_WCQ_WAGES" AS "WAGES"
WHERE "PERIOD_CATEGORY" = 'PT-A'
  AND EXISTS (
	SELECT * FROM :it_data_for_rule AS "KEYS"
	WHERE "KEYS"."ABN" = "WAGES"."ABN"
	  AND "KEYS"."GJAHR" = TO_NVARCHAR(TO_INT("WAGES"."GJAHR") + 1)
  )
)
GROUP BY 
"ABN",
"GJAHR",
"WAERS"
;


lt_wage_for_tax = 
SELECT 
"WAGES_PREDICT"."ABN",
"WAGES_PREDICT"."PERIOD_CATEGORY",
"WAGES_PREDICT"."PERIOD_KEY",
"WAGES_PREDICT"."GJAHR",
"WAGES_PREDICT"."WAERS",
SUM("WAGES_PREDICT"."WAGE") AS "WAGE",
SUM("WCQ_PREDICT"."WCQ_ACT_WAGES") AS "WCQ_ACT_WAGES"
FROM :lt_wages as "WAGES_PREDICT" LEFT OUTER JOIN :lt_wcq_predict AS "WCQ_PREDICT"
ON  "WAGES_PREDICT"."ABN" = "WCQ_PREDICT"."ABN"
AND "WAGES_PREDICT"."GJAHR" = "WCQ_PREDICT"."GJAHR"
GROUP BY 
"WAGES_PREDICT"."ABN",
"WAGES_PREDICT"."PERIOD_CATEGORY",
"WAGES_PREDICT"."PERIOD_KEY",
"WAGES_PREDICT"."GJAHR",
"WAGES_PREDICT"."WAERS"
;
 	
lt_result = 
SELECT 
"W"."ABN",
"W"."PERIOD_CATEGORY",
"W"."PERIOD_KEY",
"W"."GJAHR",
100 AS "DETECTION_RESULT",
"W"."WAGE" as "WAGE",
CASE 
WHEN "W"."WAGE" > "THLD"."DEDUCTION_TO" 
THEN "W"."WCQ_ACT_WAGES" * ("RATE"."PRT_YRLY_RATE"/100)
ELSE CASE
	WHEN "W"."WAGE" >= "THLD"."THRESHOLD" 
	THEN (("W"."WCQ_ACT_WAGES" - ("W"."WCQ_ACT_WAGES"/"W"."WAGE") * ("THLD"."THRESHOLD" - (("W"."WAGE" - "THLD"."THRESHOLD")/4))) * ("RATE"."PRT_YRLY_RATE"/100))
	ELSE 0
END
END 
AS "RISK_AMOUNT",
"W"."WAERS" AS "CURRENCY"
FROM
:lt_wage_for_tax AS "W"
INNER JOIN 
"osr.edw.staging.md.rms.prt.proxy::CV_PRT_THRESHOLD" AS "THLD"
ON  "W"."PERIOD_CATEGORY" = "THLD"."INCOTYP"
AND "W"."GJAHR" = "THLD"."GJAHR"
INNER JOIN
"osr.edw.staging.md.rms.prt.proxy::CV_PRT_RATE" AS "RATE"
ON  "W"."GJAHR" = "RATE"."GJAHR"
AND "W"."GJAHR" = "RATE"."PERIOD_KEY"
;

IF :lv_mode = 'S' THEN

et_result = 
SELECT
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
100 AS "DETECTION_RESULT",
"RISK_AMOUNT",
"CURRENCY" 
FROM 
:lt_result
;

et_text = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
'' AS "TEXT",
'/OSRQLD/FRA_PRT' AS "MSGID",
'005' AS "MSGNO",
TO_DECIMAL("WAGE",15,2) AS "MSGV1",
TO_DECIMAL(:lv_thld_yearly,15,2) AS "MSGV2",
"PERIOD_KEY" AS "MSGV3",
"CURRENCY" AS "MSGV4",
'ATO_BAS_TOTL_PMT_FOR_WRK_AMT' AS "MSGV1_FC",
'ATO_BAS_WAGE_LOW' AS "MSGV2_FC",
'PERIOD_KEY' AS "MSGV3_FC",
'' AS "MSGV4_FC"
FROM 
:lt_result
;

END IF;

IF :lv_mode = 'R' THEN

et_result = 
SELECT
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
100 AS "DETECTION_RESULT",
"RISK_AMOUNT",
"CURRENCY" 
FROM 
:lt_result
;

et_text = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
'' AS "TEXT",
'/OSRQLD/FRA_PRT' AS "MSGID",
'005' AS "MSGNO",
TO_DECIMAL("WAGE",15,2) AS "MSGV1",
TO_DECIMAL(:lv_thld_yearly,15,2) AS "MSGV2",
"PERIOD_KEY" AS "MSGV3",
"CURRENCY" AS "MSGV4",
'ATO_BAS_TOTL_PMT_FOR_WRK_AMT' AS "MSGV1_FC",
'ATO_BAS_WAGE_LOW' AS "MSGV2_FC",
'PERIOD_KEY' AS "MSGV3_FC",
'' AS "MSGV4_FC"
FROM 
:lt_result
;

END IF;

END