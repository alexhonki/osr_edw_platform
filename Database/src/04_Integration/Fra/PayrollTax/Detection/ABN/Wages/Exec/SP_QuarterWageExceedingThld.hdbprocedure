PROCEDURE "osr.edw.platform.fra.prt.dt.abn.wages.ex::SP_QuarterWageExceedingThld"( 
    IN  it_data_for_rule 	"osr.edw.platform.fra.prt.dt.abn::Types.wages.data_wage",
    IN 	parameters          "osr.edw.platform.fra.prt.dt.abn::Types.wages.param_exceeding",
    OUT et_result       	"osr.edw.platform.fra.prt.dt.abn::Types.wages.result_w_amnt",
    OUT et_text             "osr.edw.platform.fra.prt.dt.abn::Types.wages.text"
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   READS SQL DATA AS
BEGIN

DECLARE lv_mode NVARCHAR(1);  

DECLARE lv_thld_yearly Decimal(15,2) ;
DECLARE lx_ato NVARCHAR(1) DEFAULT 'N';
DECLARE lx_wcq NVARCHAR(1) DEFAULT 'N';

DECLARE lv_max_rating Decimal(3,2);


SELECT 
"RUN_MODE",
"THRESHOLD_YEARLY",
"FLAG_ATO",
"FLAG_WCQ"
INTO 
lv_mode,
lv_thld_yearly,
lx_ato,
lx_wcq
FROM :PARAMETERS LIMIT 1;

lt_wages = 
SELECT 
"WAGES"."ABN" AS "ABN",
"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
"WAGES"."GJAHR" AS "GJAHR",
"WAGES"."WAERS" AS "WAERS",
/*
RANK() OVER (
	PARTITION BY  "WAGES"."ABN" ,"WAGES"."PERIOD_CATEGORY", "WAGES"."GJAHR" 
	ORDER BY "WAGES"."PERIOD_KEY" DESC) AS "RANK_PERIOD_KEY",
*/
SUM("WAGES"."ATO_BAS_TOTL_PMT_FOR_WRK_AMT") AS "WAGE"
FROM "osr.edw.platform.fra.prt.dt.abn.wages::CV_ABN_ATO_BAS_WAGES" AS "WAGES"
WHERE "PERIOD_CATEGORY" = 'PT-Q'
  AND EXISTS (
	SELECT * FROM :it_data_for_rule AS "KEYS"
	WHERE "KEYS"."ABN" = "WAGES"."ABN"
	  AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
	  AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
	  AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
  )
GROUP BY 
"WAGES"."ABN",
"WAGES"."PERIOD_CATEGORY",
"WAGES"."PERIOD_KEY",
"WAGES"."GJAHR",
"WAGES"."WAERS"
HAVING SUM("WAGES"."ATO_BAS_TOTL_PMT_FOR_WRK_AMT")  >= :lv_thld_yearly
;



IF :lv_mode = 'S' THEN

et_result =
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
100 AS "DETECTION_RESULT",
0 AS "RISK_AMOUNT",
"WAERS" AS "CURRENCY" 
FROM :lt_wages
;

et_text = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
'' AS "TEXT",
'/OSRQLD/FRA_PRT' AS "MSGID",
'005' AS "MSGNO",
"WAGE" AS "MSGV1",
:lv_thld_yearly AS "MSGV2",
"PERIOD_KEY" AS "MSGV3",
"WAERS" AS "MSGV4",
'ATO_BAS_TOTL_PMT_FOR_WRK_AMT' AS "MSGV1_FC",
'ATO_BAS_WAGE_LOW' AS "MSGV2_FC",
'PERIOD_KEY' AS "MSGV3_FC",
'' AS "MSGV4_FC"
FROM 
:lt_wages
;

END IF;

IF :lv_mode = 'R' THEN

et_result =
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
100 AS "DETECTION_RESULT",
0 AS "RISK_AMOUNT",
"WAERS" AS "CURRENCY" 
FROM :lt_wages
;

et_text = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
'' AS "TEXT",
'/OSRQLD/FRA_PRT' AS "MSGID",
'005' AS "MSGNO",
"WAGE" AS "MSGV1",
:lv_thld_yearly AS "MSGV2",
"PERIOD_KEY" AS "MSGV3",
"WAERS" AS "MSGV4",
'ATO_BAS_TOTL_PMT_FOR_WRK_AMT' AS "MSGV1_FC",
'ATO_BAS_WAGE_LOW' AS "MSGV2_FC",
'PERIOD_KEY' AS "MSGV3_FC",
'' AS "MSGV4_FC"
FROM 
:lt_wages
;

END IF;

END