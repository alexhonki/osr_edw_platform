PROCEDURE "osr.edw.platform.fra.prt.dt.abn.wages.ex::SP_NoBPRegistrationForLiability"( 
    IN  it_data_for_rule 	"osr.edw.platform.fra.prt.dt.abn::Types.wages.data_bp_reg",
    IN 	parameters          "osr.edw.platform.fra.prt.dt.abn::Types.wages.param_bp_reg",
    OUT et_result       	"osr.edw.platform.fra.prt.dt.abn::Types.wages.result"
	
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   READS SQL DATA AS
BEGIN

DECLARE lv_mode NVARCHAR(1);  

DECLARE lx_reinstatement NVARCHAR(1) DEFAULT 'N';
DECLARE lx_new_registration NVARCHAR(1) DEFAULT 'N';
DECLARE lv_reinstatement_cnt Integer DEFAULT 0;
DECLARE lv_new_registration_cnt Integer DEFAULT 0;

SELECT
"RUN_MODE",
"FLAG_REINSTATEMENT",
"FLAG_NEW_REGISTRATION"
INTO 
lv_mode,
lx_reinstatement,
lx_new_registration
FROM :PARAMETERS LIMIT 1;

IF lx_new_registration = 'Y' THEN 
lt_new_registration_result = 
SELECT 
"WS"."ABN",
"WS"."PERIOD_CATEGORY",
"WS"."PERIOD_KEY",
"WS"."GJAHR"
FROM 
:it_data_for_rule AS "WS"
WHERE NOT EXISTS (
	SELECT * FROM "osr.edw.platform.fra.prt.dt.abn::CV_PRT_BP_ABN" as "BP_ABN"
		WHERE "WS"."ABN" = LEFT("BP_ABN"."ABN",11)
)
;

SELECT COUNT(*) INTO lv_new_registration_cnt FROM :lt_new_registration_result;

END IF;

IF lx_reinstatement = 'Y' THEN 
lt_reinstatment = 
SELECT 
"WS"."ABN",
"WS"."PERIOD_CATEGORY",
"WS"."PERIOD_KEY",
"WS"."GJAHR",
"BP_ABN"."BPARTNER",
"BP_ABN"."PRT_LIAB_DATE",
"BP_ABN"."VALID_FROM",
"BP_ABN"."VALID_TO",
--"BP_REG"."ONLINE_FILLING_COMM",
"FY"."START_DATE",
"FY"."END_DATE"
FROM 
:it_data_for_rule AS "WS"
INNER JOIN
"osr.edw.platform.fra.prt.dt.abn::CV_FY_KEY_DATES" "FY"
ON "WS"."GJAHR" = "FY"."FISCAL_YEAR"
INNER JOIN
"osr.edw.platform.fra.prt.dt.abn::CV_PRT_BP_ABN" as "BP_ABN"
ON "WS"."ABN" = LEFT("BP_ABN"."ABN",11)
WHERE "FY"."END_DATE" > "BP_ABN"."VALID_DATE_FROM" 
;

lt_reinstatment_result = 
SELECT
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR"
FROM :lt_reinstatment
WHERE "PRT_LIAB_DATE" > "END_DATE"
  AND "VALID_TO" > "END_DATE"
UNION
SELECT
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR"
FROM :lt_reinstatment
WHERE "PRT_LIAB_DATE" < "START_DATE"
  AND "VALID_TO" < "START_DATE"
;

SELECT COUNT(*) INTO lv_reinstatement_cnt FROM :lt_reinstatment;

END IF;




IF  :lv_reinstatement_cnt > 0 
AND :lv_new_registration_cnt > 0 THEN

lt_result =
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
100 AS "DETECTION_RESULT"
FROM :lt_reinstatment_result
UNION
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
100 AS "DETECTION_RESULT"
FROM :lt_new_registration_result
;

END IF;


IF  :lv_reinstatement_cnt > 0 
AND :lv_new_registration_cnt = 0 THEN

lt_result =
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
100 AS "DETECTION_RESULT"
FROM :lt_reinstatment_result
;

END IF;

IF  :lv_reinstatement_cnt = 0 
AND :lv_new_registration_cnt > 0 THEN

lt_result =
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
100 AS "DETECTION_RESULT"
FROM :lt_new_registration_result
;

END IF;

IF :lv_mode = 'S' THEN

et_result =
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"DETECTION_RESULT"
FROM :lt_result
;

END IF;

IF :lv_mode = 'R' THEN

et_result =
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"DETECTION_RESULT"
FROM :lt_result
;

END IF;



END