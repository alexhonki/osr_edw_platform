PROCEDURE "osr.edw.platform.fra.prt.dt.abn.wages.ex::SP_ExemptionDisallowed"( 
	IN  it_data_for_rule 	"osr.edw.platform.fra.prt.dt.abn::Types.wages.ws",
    OUT et_result       	"osr.edw.platform.fra.prt.dt.abn::Types.wages.result",
    OUT et_text             "osr.edw.platform.fra.prt.dt.abn::Types.wages.text"
)
   
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
READS SQL DATA AS

BEGIN

lt_exm_priority =
SELECT
"CASE_ID", 
"CASE_TYPE", 
"CASE_CATEGORY", 
"REASON_CODE",
"ABN",
"PARTNER" AS "BPARTNER",
"CREATE_TIME",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR"
FROM
(
	SELECT
	"case"."CASE_ID",
	"case"."CASE_TYPE",
	"case"."CASE_CATEGORY",
	"case"."REASON_CODE",
	"case"."ABN",
	"case"."PARTNER",
	"case"."CREATE_TIME",
	"wages"."PERIOD_CATEGORY",
	"wages"."PERIOD_KEY",
	"wages"."GJAHR",
	RANK() OVER (PARTITION BY "case"."ABN", "case"."PARTNER" ORDER BY "case"."ABN", "case"."PARTNER", "case"."CASE_ID" DESC) AS "RANK_1"
	FROM
	"osr.edw.platform.fra.prt.dt.abn::CV_CRM_BP_CASE" AS "case"
	INNER JOIN :it_data_for_rule AS "wages"
	ON "case"."ABN" = "wages"."ABN"
	AND "case"."CASE_TYPE" = 'ZEXM'
	AND "case"."REASON_CODE" <> 'INVD'
)
	WHERE "RANK_1" = '1'
;

lt_pre_result =
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"REASON_CODE" AS "REASON_CODE",
"CASE_ID" AS "CASE_ID",
"BPARTNER" AS "BPARTNER"
FROM
:lt_exm_priority
;

et_result = 
SELECT
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
CASE
WHEN ("REASON_CODE") = 'DISA'
THEN 100
ELSE 0
END AS "DETECTION_RESULT"
FROM
:lt_pre_result
;

et_text = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
'' AS "TEXT",
'/OSRQLD/FRA_PRT' AS "MSGID",
CASE WHEN "REASON_CODE" = 'DISA'
THEN '009'
ELSE '010'
END AS "MSGNO",
LTRIM("CASE_ID") AS "MSGV1",
LTRIM("BPARTNER") AS "MSGV2",
'' AS "MSGV3",
'' AS "MSGV4",
'' AS "MSGV1_FC",
'' AS "MSGV2_FC",
'' AS "MSGV3_FC",
'' AS "MSGV4_FC"
FROM 
:lt_pre_result
;

END
