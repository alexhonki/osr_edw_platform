PROCEDURE "osr.edw.platform.fra.prt.dt.abn.wages.ex::SP_RankByGrpEstimatedTax"
( 
    IN  it_data_for_rule 	"osr.edw.platform.fra.prt.dt.abn::Types.wages.data_wage",
    IN 	parameters          "osr.edw.platform.fra.prt.dt.abn::Types.wages.param_rank_estimated_tax",
    OUT et_result       	"osr.edw.platform.fra.prt.dt.abn::Types.wages.result",
    OUT et_text             "osr.edw.platform.fra.prt.dt.abn::Types.wages.text"

)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   READS SQL DATA AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   
DECLARE lv_mode NVARCHAR(1);  
DECLARE lv_thld_yearly Decimal(15,2) ;
DECLARE lv_max_rating Decimal(3,2);
DECLARE lv_rfr_max_low Decimal(15,2);

SELECT 
"RUN_MODE",
"THRESHOLD_YEARLY"
INTO 
lv_mode,
lv_thld_yearly
FROM :PARAMETERS LIMIT 1;


lt_data1 = 
SELECT DISTINCT
	"ABN",
	"PERIOD_CATEGORY",
	"PERIOD_KEY",
	"GJAHR",
	"GROUP_ID"
FROM 
	:it_data_for_rule
WHERE 
	"GROUP_ID" <> ''
;

lt_wages1 = 
SELECT DISTINCT
	"ABN",
	"PERIOD_CATEGORY",
	"PERIOD_KEY",
	"GJAHR",
	"GROUP_ID",
	TO_NVARCHAR('AUD  ') AS "WAERS",
	0 AS "WAGE"
FROM 
(
   SELECT
   "WS"."ABN",
   "WS"."PERIOD_CATEGORY",
   "WS"."PERIOD_KEY",
   "WS"."GJAHR",
   CASE 
   WHEN "GRP"."GROUP_ID" IS NULL 
   THEN ''
   ELSE "GRP"."GROUP_ID" 
   END AS "GROUP_ID"
   FROM 
   "osr.edw.platform.fra.prt.dt.abn.wages::CV_ABN_WAGES_KEYS" AS "WS"
    INNER JOIN
   "osr.edw.platform.fra.prt.dt.abn.wages::TF_ABN_ACN_MAPPING_BY_ATO"() AS "MAP"
   ON  "WS"."ABN" = "MAP"."ABN"
   AND "WS"."PERIOD_CATEGORY" = "MAP"."PERIOD_CATEGORY"
   AND "WS"."PERIOD_KEY" = "MAP"."PERIOD_KEY"
   AND "WS"."GJAHR" = "MAP"."GJAHR"
   LEFT OUTER JOIN
   "osr.edw.platform.fra.prt.model::TF_GRP_SUMMARY"() AS "GRP"
   ON "MAP"."ACN" = "GRP"."ACN"
   AND "MAP"."GJAHR" = "GRP"."GJAHR"
   WHERE  "GRP"."GROUP_ID" IN (SELECT DISTINCT "GROUP_ID" FROM :lt_data1 )
) 
;

lt_data = 
SELECT DISTINCT
	"ABN",
	"PERIOD_CATEGORY",
	"PERIOD_KEY",
	"GJAHR",
	"GROUP_ID"
FROM 
:lt_wages1 ;

lt_wages = 
SELECT DISTINCT
	"ABN",
	"PERIOD_CATEGORY",
	"PERIOD_KEY",
	"GJAHR",
--	"GROUP_ID",
	TO_NVARCHAR('AUD  ') AS "WAERS",
	0 AS "WAGE"
FROM 
:lt_wages1 ;
-- ATO BAS Data   	

 	lt_wages = 
 	SELECT 
 	"ABN",
 	"PERIOD_CATEGORY",
 	"PERIOD_KEY",
 	"GJAHR",
 	"WAERS",
 	"WAGE"
 	FROM :lt_wages
 	UNION
 	SELECT 
 	"WAGES"."ABN" AS "ABN",
 	"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
 	"WAGES"."GJAHR" AS "GJAHR",
 	"WAGES"."WAERS" AS "WAERS",
 	SUM("WAGES"."ATO_BAS_TOTL_PMT_FOR_WRK_AMT") AS "WAGE"
 	FROM "osr.edw.platform.fra.prt.dt.abn.wages::CV_ABN_ATO_BAS_WAGES" AS "WAGES"
 	WHERE "PERIOD_CATEGORY" = 'PT-A'
 	  AND EXISTS (
 		SELECT * FROM :lt_data AS "KEYS"
 		WHERE "KEYS"."ABN" = "WAGES"."ABN"
 		  AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
 		  AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
 		  AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
 	  )
 	GROUP BY 
 	"WAGES"."ABN",
 	"WAGES"."PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY",
 	"WAGES"."GJAHR",
 	"WAGES"."WAERS"
 
 	;
 	
 	lt_wages = 
 	SELECT 
 	"ABN",
 	"PERIOD_CATEGORY",
 	"PERIOD_KEY",
 	"GJAHR",
 	"WAERS",
 	"WAGE"
 	FROM :lt_wages
 	UNION
	SELECT 
 	"WAGES"."ABN" AS "ABN",
 	"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
 	"WAGES"."GJAHR" AS "GJAHR",
 	"WAGES"."WAERS" AS "WAERS",
 	SUM("WAGES"."ATO_ITR_SALARY_WAGES") AS "WAGE"
 	FROM "osr.edw.platform.fra.prt.dt.abn.wages::CV_ABN_ATO_ITR_WAGES" AS "WAGES"
 	WHERE "PERIOD_CATEGORY" = 'PT-A'
 	  AND EXISTS (
 		SELECT * FROM :lt_data AS "KEYS"
 		WHERE "KEYS"."ABN" = "WAGES"."ABN"
 		  AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
 		  AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
 		  AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
 	  )
 	GROUP BY 
 	"WAGES"."ABN",
 	"WAGES"."PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY",
 	"WAGES"."GJAHR",
 	"WAGES"."WAERS"
 	
 ;
 
 	lt_wcq = 
	SELECT 
 	"WAGES"."ABN" AS "ABN",
 	"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
 	"WAGES"."GJAHR" AS "GJAHR",
 	"WAGES"."WAERS" AS "WAERS",
 	SUM("WAGES"."WCQ_ACT_WAGES") AS "WAGE"
 	FROM "osr.edw.platform.fra.prt.dt.abn.wages::CV_ABN_WCQ_WAGES" AS "WAGES"
 	WHERE "PERIOD_CATEGORY" = 'PT-A'
 	  AND EXISTS (
 		SELECT * FROM :lt_data AS "KEYS"
 		WHERE "KEYS"."ABN" = "WAGES"."ABN"
 		  AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
 		  AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
 		  AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
 	  )
 	GROUP BY 
 	"WAGES"."ABN",
 	"WAGES"."PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY",
 	"WAGES"."GJAHR",
 	"WAGES"."WAERS"
 ;
 
  	lt_wages = 
 	SELECT 
 	"ABN",
 	"PERIOD_CATEGORY",
 	"PERIOD_KEY",
 	"GJAHR",
 	"WAERS",
 	"WAGE"
 	FROM :lt_wages
 	UNION
 	SELECT 
 	"ABN",
 	"PERIOD_CATEGORY",
 	"PERIOD_KEY",
 	"GJAHR",
 	"WAERS",
 	"WAGE"
 	FROM
	:lt_wcq
 	;
 -------------MAX Wage----------	
 lt_wages =  
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"WAERS",
MAX("WAGE") AS "WAGE"
FROM :lt_wages
GROUP BY 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"WAERS"
;	
-------------------------


lt_wcq_for_tax = 
SELECT 
"WAGES"."ABN" AS "ABN",
"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
"WAGES"."GJAHR" AS "GJAHR",
"WAGES"."WAERS" AS "WAERS",
SUM("WAGES"."WCQ_ACT_WAGES") AS "WAGE"
FROM "osr.edw.platform.fra.prt.dt.abn.wages::CV_ABN_WCQ_WAGES" AS "WAGES"
WHERE "PERIOD_CATEGORY" = 'PT-A'
  AND EXISTS (
	SELECT * FROM :lt_wages AS "KEYS"
	WHERE "KEYS"."ABN" = "WAGES"."ABN"
	  AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
	  AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
	  AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
  )
GROUP BY 
"WAGES"."ABN",
"WAGES"."PERIOD_CATEGORY",
"WAGES"."PERIOD_KEY",
"WAGES"."GJAHR",
"WAGES"."WAERS"
;


lt_wage_for_tax = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"WAERS",
SUM("WAGE") AS "WAGE",
SUM("WCQ_ACT_WAGES") AS "WCQ_ACT_WAGES"

FROM 
(
	SELECT 
	"ABN",
	"PERIOD_CATEGORY",
	"PERIOD_KEY",
	"GJAHR",
	"WAERS",
	"WAGE", 
	0 AS "WCQ_ACT_WAGES"
	FROM :lt_wages
	UNION
	SELECT 
	"ABN",
	"PERIOD_CATEGORY",
	"PERIOD_KEY",
	"GJAHR",
	"WAERS",
	0 AS "WAGE", 
	"WAGE" AS "WCQ_ACT_WAGES"
	FROM :lt_wcq_for_tax
)
GROUP BY 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"WAERS"
;

GRP_WAGES =
SELECT * FROM
(
SELECT
"ABN",
"GROUP_ID",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"WAERS",
"WAGE",
"WCQ_ACT_WAGES",
SUM("WAGE") OVER (PARTITION BY "GROUP_ID","GJAHR" ORDER BY "GROUP_ID" , "GJAHR") AS "GRP_WAGE",
SUM("WCQ_ACT_WAGES") OVER (PARTITION BY "GROUP_ID","GJAHR" ORDER BY "GROUP_ID", "GJAHR") AS "GRP_WCQ_ACT_WAGES"
FROM
(
SELECT 
"WAGE"."ABN",
"GRP"."GROUP_ID",
"WAGE"."PERIOD_CATEGORY",
"WAGE"."PERIOD_KEY",
"WAGE"."GJAHR",
"WAGE"."WAERS",
SUM("WAGE"."WAGE") AS "WAGE",
SUM("WAGE"."WCQ_ACT_WAGES") AS "WCQ_ACT_WAGES"
FROM 
	:lt_wage_for_tax AS "WAGE"
LEFT OUTER JOIN
	:lt_data AS "GRP"
ON
	"WAGE"."ABN" = "GRP"."ABN" 
AND	"WAGE"."PERIOD_CATEGORY" = "GRP"."PERIOD_CATEGORY" 
AND	"WAGE"."PERIOD_KEY" = "GRP"."PERIOD_KEY" 
AND	"WAGE"."GJAHR" =  "GRP"."GJAHR"
GROUP BY 
"WAGE"."ABN",
"GRP"."GROUP_ID",
"WAGE"."PERIOD_CATEGORY",
"WAGE"."PERIOD_KEY",
"WAGE"."GJAHR",
"WAGE"."WAERS"
)
)
WHERE "GRP_WAGE" >= :lv_thld_yearly
;


 
    
    
lt_estimated_tax = 
SELECT
--"GROUP_ID",
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
100 AS "DETECTION_RESULT",
"RISK_AMOUNT",
"CURRENCY"
FROM
(
SELECT 
"W"."GROUP_ID",
"W"."ABN",
"W"."PERIOD_CATEGORY",
"W"."PERIOD_KEY",
"W"."GJAHR",
--100 AS "DETECTION_RESULT",
CASE 
WHEN "W"."GRP_WAGE" > "THLD"."DEDUCTION_TO" 
THEN "W"."GRP_WCQ_ACT_WAGES" * ("RATE"."PRT_YRLY_RATE"/100)
ELSE CASE
	WHEN "W"."GRP_WAGE" >= "THLD"."THRESHOLD" 
	THEN (("W"."GRP_WCQ_ACT_WAGES" - ("W"."GRP_WCQ_ACT_WAGES"/"W"."GRP_WAGE") * ("THLD"."THRESHOLD" - (("W"."GRP_WAGE" - "THLD"."THRESHOLD")/4))) * ("RATE"."PRT_YRLY_RATE"/100))
	ELSE 0
END
END 
AS "RISK_AMOUNT",
"W"."WAERS" AS "CURRENCY"
FROM
:GRP_WAGES AS "W"
INNER JOIN 
"osr.edw.staging.md.rms.prt.proxy::CV_PRT_THRESHOLD" AS "THLD"
ON  "W"."PERIOD_CATEGORY" = "THLD"."INCOTYP"
AND "W"."GJAHR" = "THLD"."GJAHR"
INNER JOIN
"osr.edw.staging.md.rms.prt.proxy::CV_PRT_RATE" AS "RATE"
ON  "W"."GJAHR" = "RATE"."GJAHR"
AND "W"."PERIOD_KEY" = "RATE"."PERIOD_KEY"
)
WHERE "ABN" IN ( SELECT DISTINCT "ABN" FROM :lt_data1)
;

    
    
SELECT MAX("RISK_FACTOR_RATING") INTO lv_max_rating FROM "osr.edw.platform.fra.prt.dt.abn.wages.dt::CV_RFR_ESTIMATED_TAX";

SELECT "LOW" INTO lv_rfr_max_low 
FROM "osr.edw.platform.fra.prt.dt.abn.wages.dt::CV_RFR_ESTIMATED_TAX" 
WHERE "TOP_BAND" = 'X';


lt_pre_result = 
SELECT
"W"."ABN",
"W"."PERIOD_CATEGORY",
"W"."PERIOD_KEY",
"W"."GJAHR",
:lv_max_rating AS "RISK_FACTOR_RATING",
"W"."RISK_AMOUNT" AS "RISK_AMOUNT",
"W"."CURRENCY" AS "CURRENCY"
FROM 
:lt_estimated_tax AS "W"
WHERE "W"."RISK_AMOUNT" >= :lv_rfr_max_low
UNION
SELECT
"W"."ABN",
"W"."PERIOD_CATEGORY",
"W"."PERIOD_KEY",
"W"."GJAHR",
"R"."RISK_FACTOR_RATING" AS "RISK_FACTOR_RATING",
"W"."RISK_AMOUNT" AS "RISK_AMOUNT",
"W"."CURRENCY" AS "CURRENCY"
FROM 
:lt_estimated_tax AS "W", 
"osr.edw.platform.fra.prt.dt.abn.wages.dt::CV_RFR_ESTIMATED_TAX" AS "R"
WHERE "W"."RISK_AMOUNT" >= "R"."LOW" 
  AND "W"."RISK_AMOUNT" < "R"."HIGH" 
  AND "R"."TOP_BAND" <> 'X'
;

IF :lv_mode = 'R' THEN

et_result = 
SELECT
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
100*"RISK_FACTOR_RATING"/:lv_max_rating AS "DETECTION_RESULT"
FROM
:lt_pre_result
;

et_text = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
'' AS "TEXT",
'/OSRQLD/FRA_PRT' AS "MSGID",
'017' AS "MSGNO",
TO_DECIMAL("RISK_AMOUNT",15,2) AS "MSGV1",
"CURRENCY" AS "MSGV2",
"RISK_FACTOR_RATING" AS "MSGV3",
'' AS "MSGV4",
'' AS "MSGV1_FC",
'WAERS' AS "MSGV2_FC",
'' AS "MSGV3_FC",
'' AS "MSGV4_FC"
FROM 
:lt_pre_result
;

END IF;

IF :lv_mode = 'S' THEN

et_result = 
SELECT
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
100*"RISK_FACTOR_RATING"/:lv_max_rating AS "DETECTION_RESULT"
FROM
:lt_pre_result
;

et_text = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
'' AS "TEXT",
'/OSRQLD/FRA_PRT' AS "MSGID",
'017' AS "MSGNO",
TO_DECIMAL("RISK_AMOUNT",15,2) AS "MSGV1",
"CURRENCY" AS "MSGV2",
"RISK_FACTOR_RATING" AS "MSGV3",
'' AS "MSGV4",
'' AS "MSGV1_FC",
'WAERS' AS "MSGV2_FC",
'' AS "MSGV3_FC",
'' AS "MSGV4_FC"
FROM 
:lt_pre_result
;
END IF;


END