PROCEDURE "osr.edw.platform.fra.prt.dt.abn.wages.ex::SP_RankByGrpEstimatedTax"
( 
    IN  it_data_for_rule 	"osr.edw.platform.fra.prt.dt.abn::Types.wages.data_wage",
    IN 	parameters          "osr.edw.platform.fra.prt.dt.abn::Types.wages.param_rank_estimated_tax",
    OUT et_result       	"osr.edw.platform.fra.prt.dt.abn::Types.wages.result",
    OUT et_text             "osr.edw.platform.fra.prt.dt.abn::Types.wages.text"

)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   READS SQL DATA AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   
DECLARE lv_mode NVARCHAR(1);  
DECLARE lv_thld_yearly Decimal(15,2) ;
DECLARE lv_max_rating Decimal(3,2);
DECLARE lv_rfr_max_low Decimal(15,2);
DECLARE lv_gjahr NVARCHAR(4);

SELECT 
"RUN_MODE",
"THRESHOLD_YEARLY"
INTO 
lv_mode,
lv_thld_yearly
FROM :PARAMETERS LIMIT 1;


SELECT DISTINCT "GJAHR" INTO lv_gjahr  FROM :it_data_for_rule;

lt_data = 
SELECT DISTINCT
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"GROUP_ID"
FROM
(
SELECT DISTINCT
	"DATA"."ABN",
	"DATA"."PERIOD_CATEGORY",
	"DATA"."PERIOD_KEY",
	"DATA"."GJAHR",
	"DATA"."GROUP_ID"
FROM 
	:it_data_for_rule AS "DATA"
WHERE 
	"DATA"."PERIOD_CATEGORY" = 'PT-A'
AND 
EXISTS 
(
	SELECT * FROM 
	"osr.edw.platform.fra.prt.dt.abn.wages::TF_ABN_GRP_EXCLUSIONS"(:LV_GJAHR) AS "EXCLUSION"
	WHERE "DATA"."GROUP_ID" = "EXCLUSION"."GROUP_ID"
	  AND  "DATA"."ABN" = "EXCLUSION"."ABN" )
)
WHERE	"GROUP_ID" <> ''
AND "PERIOD_CATEGORY" = 'PT-A'	
;



/*
lt_wages1 = 
SELECT DISTINCT
	"ABN",
	'PT-A'	AS "PERIOD_CATEGORY", -- Can join with the lt_data1 to get Period Cat.
	"GJAHR" AS "PERIOD_KEY",      -- Can join with the lt_data1 to get Period Key.
	"GJAHR" AS "GJAHR",
	"GROUP_ID",
	TO_NVARCHAR('AUD  ') AS "WAERS",
	0 AS "WAGE"
FROM 
	"osr.edw.platform.fra.prt.model::TF_GRP_SUMMARY"()
WHERE 		"GROUP_ID" IN (SELECT DISTINCT 	"GROUP_ID" FROM :lt_data1)
;

lt_data = 
SELECT DISTINCT
	"ABN",
	"PERIOD_CATEGORY",
	"PERIOD_KEY",
	"GJAHR",
	"GROUP_ID"
FROM 
:lt_wages1 ;
*/

----------------ATO BAS------------
ATO_BAS =

SELECT
	"WAGES"."ABN"                         AS "ABN",
	TO_NVARCHAR("WAGES"."FINANCIAL_YEAR") AS "GJAHR",
	TO_NVARCHAR('AUD')				  	  AS "WAERS",
	SUM("WAGES"."TOTL_PMT_FOR_WRK_AMT")	  AS "WAGE"
FROM 	
	"osr.edw.staging.td.ato.proxy::TF_BASNIND_C"() AS "WAGES"
WHERE    "WAGES"."BAS_QTR" = 'FY'
AND EXISTS
			(
			SELECT * FROM :lt_data AS "KEYS"
			WHERE "KEYS"."ABN"   = "WAGES"."ABN"
			AND  "KEYS"."GJAHR"  = TO_NVARCHAR("WAGES"."FINANCIAL_YEAR")
			)
GROUP BY "WAGES"."ABN","WAGES"."FINANCIAL_YEAR"
;
-----------ITR--------------------
ATO_ITR =
SELECT
	"WAGES"."ABN"                         AS "ABN",
	TO_NVARCHAR("WAGES"."INCM_YR")		  AS "GJAHR",
	TO_NVARCHAR('AUD')				  	  AS "WAERS",
	SUM("WAGES"."SALARY_WAGES") + SUM("WAGES"."SUPER_EXPNS")  AS "WAGE"
FROM 	
	"osr.edw.staging.td.ato.proxy::TF_ITRNIND_C"() AS "WAGES"
WHERE  EXISTS
			(
			SELECT * FROM :lt_data AS "KEYS"
				WHERE "KEYS"."ABN" = "WAGES"."ABN"
				  AND "KEYS"."GJAHR" = TO_NVARCHAR("WAGES"."INCM_YR") 
	
			)
GROUP BY "WAGES"."ABN","WAGES"."INCM_YR"
;

------WCQ-----------
QLD_WCQ = 

SELECT 
	"ABN",
	"GJAHR",
	"WAERS",
	SUM("WAGE") AS "WAGE"
FROM
(
	SELECT 
 	"WAGES"."ABN" AS "ABN",
 	"WAGES"."GJAHR" AS "GJAHR",
 	TO_NVARCHAR('AUD') AS "WAERS",
 	SUM("WAGES"."WCQ_ACT_WAGES") AS "WAGE"
 	FROM "osr.edw.platform.fra.prt.dt.abn.wages::CV_ABN_WCQ_WAGES" AS "WAGES"
 	WHERE "PERIOD_CATEGORY" = 'PT-A'
 	AND EXISTS (
 		SELECT * FROM :lt_data AS "KEYS"
 		WHERE "KEYS"."ABN" = "WAGES"."ABN"
 		  AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
 		  AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
 	  )
 	GROUP BY 
 	"WAGES"."ABN",
 	"WAGES"."GJAHR"
)
GROUP BY 
	"ABN",
	"GJAHR",
	"WAERS"
 ;
 	

-----------MAX Wages--------
lt_wages = 

SELECT 
"ABN",
"GJAHR",
"WAERS",
MAX("WAGE") AS "WAGE"
FROM
(
SELECT * FROM :QLD_WCQ
UNION
SELECT * FROM :ATO_ITR
UNION
SELECT * FROM :ATO_BAS
)
GROUP BY 
"ABN",
"GJAHR",
"WAERS"
;	

	
-------------------------


lt_wage_for_tax = 
SELECT 
"ABN",
"GJAHR",
"WAERS",
SUM("WAGE") AS "WAGE",
SUM("WCQ_ACT_WAGES") AS "WCQ_ACT_WAGES"

FROM 
(
	SELECT 
	"ABN",
	"GJAHR",
	"WAERS",
	"WAGE", 
	0 AS "WCQ_ACT_WAGES"
	FROM :lt_wages
	UNION
	SELECT 
	"ABN",
	"GJAHR",
	"WAERS",
	0 AS "WAGE", 
	"WAGE" AS "WCQ_ACT_WAGES"
	FROM :QLD_WCQ
)
GROUP BY 
"ABN",
"GJAHR",
"WAERS"
;

GRP_WAGES =
SELECT * FROM
(
SELECT
"ABN",
"GROUP_ID",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"WAERS",
"WAGE",
"WCQ_ACT_WAGES",
SUM("WAGE") OVER (PARTITION BY "GROUP_ID","GJAHR" ORDER BY "GROUP_ID" , "GJAHR") AS "GRP_WAGE",
SUM("WCQ_ACT_WAGES") OVER (PARTITION BY "GROUP_ID","GJAHR" ORDER BY "GROUP_ID", "GJAHR") AS "GRP_WCQ_ACT_WAGES"
FROM
(
SELECT 
"WAGE"."ABN",
"GRP"."GROUP_ID",
"GRP"."PERIOD_CATEGORY",
"GRP"."PERIOD_KEY",
"WAGE"."GJAHR",
"WAGE"."WAERS",
SUM("WAGE"."WAGE") AS "WAGE",
SUM("WAGE"."WCQ_ACT_WAGES") AS "WCQ_ACT_WAGES"
FROM 
	:lt_wage_for_tax AS "WAGE"
LEFT OUTER JOIN
	:lt_data AS "GRP"
ON
	"WAGE"."ABN" = "GRP"."ABN" 
AND	"WAGE"."GJAHR" =  "GRP"."GJAHR"
GROUP BY 
"WAGE"."ABN",
"GRP"."GROUP_ID",
"GRP"."PERIOD_CATEGORY",
"GRP"."PERIOD_KEY",
"WAGE"."GJAHR",
"WAGE"."WAERS"
)
)
WHERE "GRP_WAGE" >= :lv_thld_yearly
;

 
    
    
lt_estimated_tax = 
SELECT
--"GROUP_ID",
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
100 AS "DETECTION_RESULT",
"RISK_AMOUNT",
"CURRENCY"
FROM
(
SELECT 
"W"."GROUP_ID",
"W"."ABN",
"W"."PERIOD_CATEGORY",
"W"."PERIOD_KEY",
"W"."GJAHR",
--100 AS "DETECTION_RESULT",
CASE 
WHEN "W"."GRP_WAGE" > "THLD"."DEDUCTION_TO" 
THEN "W"."GRP_WCQ_ACT_WAGES" * ("RATE"."PRT_YRLY_RATE"/100)
ELSE CASE
	WHEN "W"."GRP_WAGE" >= "THLD"."THRESHOLD" 
	THEN (("W"."GRP_WCQ_ACT_WAGES" - ("W"."GRP_WCQ_ACT_WAGES"/"W"."GRP_WAGE") * ("THLD"."THRESHOLD" - (("W"."GRP_WAGE" - "THLD"."THRESHOLD")/4))) * ("RATE"."PRT_YRLY_RATE"/100))
	ELSE 0
END
END 
AS "RISK_AMOUNT",
"W"."WAERS" AS "CURRENCY"
FROM
:GRP_WAGES AS "W"
INNER JOIN 
"osr.edw.staging.md.rms.prt.proxy::CV_PRT_THRESHOLD" AS "THLD"
ON  "W"."PERIOD_CATEGORY" = "THLD"."INCOTYP"
AND "W"."GJAHR" = "THLD"."GJAHR"
INNER JOIN
"osr.edw.staging.md.rms.prt.proxy::CV_PRT_RATE" AS "RATE"
ON  "W"."GJAHR" = "RATE"."GJAHR"
AND "W"."PERIOD_KEY" = "RATE"."PERIOD_KEY"
)

;

    
    
SELECT MAX("RISK_FACTOR_RATING") INTO lv_max_rating FROM "osr.edw.platform.fra.prt.dt.abn.wages.dt::CV_RFR_ESTIMATED_TAX";

SELECT "LOW" INTO lv_rfr_max_low 
FROM "osr.edw.platform.fra.prt.dt.abn.wages.dt::CV_RFR_ESTIMATED_TAX" 
WHERE "TOP_BAND" = 'X';


lt_pre_result = 
SELECT
"W"."ABN",
"W"."PERIOD_CATEGORY",
"W"."PERIOD_KEY",
"W"."GJAHR",
:lv_max_rating AS "RISK_FACTOR_RATING",
"W"."RISK_AMOUNT" AS "RISK_AMOUNT",
"W"."CURRENCY" AS "CURRENCY"
FROM 
:lt_estimated_tax AS "W"
WHERE "W"."RISK_AMOUNT" >= :lv_rfr_max_low
UNION
SELECT
"W"."ABN",
"W"."PERIOD_CATEGORY",
"W"."PERIOD_KEY",
"W"."GJAHR",
"R"."RISK_FACTOR_RATING" AS "RISK_FACTOR_RATING",
"W"."RISK_AMOUNT" AS "RISK_AMOUNT",
"W"."CURRENCY" AS "CURRENCY"
FROM 
:lt_estimated_tax AS "W", 
"osr.edw.platform.fra.prt.dt.abn.wages.dt::CV_RFR_ESTIMATED_TAX" AS "R"
WHERE "W"."RISK_AMOUNT" >= "R"."LOW" 
  AND "W"."RISK_AMOUNT" < "R"."HIGH" 
  AND "R"."TOP_BAND" <> 'X'
;

IF :lv_mode = 'R' THEN

et_result = 
SELECT
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
100*"RISK_FACTOR_RATING"/:lv_max_rating AS "DETECTION_RESULT"
FROM
:lt_pre_result
;

et_text = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
'' AS "TEXT",
'/OSRQLD/FRA_PRT' AS "MSGID",
'017' AS "MSGNO",
TO_DECIMAL("RISK_AMOUNT",15,2) AS "MSGV1",
"CURRENCY" AS "MSGV2",
"RISK_FACTOR_RATING" AS "MSGV3",
'' AS "MSGV4",
'' AS "MSGV1_FC",
'WAERS' AS "MSGV2_FC",
'' AS "MSGV3_FC",
'' AS "MSGV4_FC"
FROM 
:lt_pre_result
;

END IF;

IF :lv_mode = 'S' THEN

et_result = 
SELECT
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
100*"RISK_FACTOR_RATING"/:lv_max_rating AS "DETECTION_RESULT"
FROM
:lt_pre_result
;

et_text = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
'' AS "TEXT",
'/OSRQLD/FRA_PRT' AS "MSGID",
'017' AS "MSGNO",
TO_DECIMAL("RISK_AMOUNT",15,2) AS "MSGV1",
"CURRENCY" AS "MSGV2",
"RISK_FACTOR_RATING" AS "MSGV3",
'' AS "MSGV4",
'' AS "MSGV1_FC",
'WAERS' AS "MSGV2_FC",
'' AS "MSGV3_FC",
'' AS "MSGV4_FC"
FROM 
:lt_pre_result
;
END IF;


END