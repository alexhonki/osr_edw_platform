PROCEDURE "osr.edw.platform.fra.prt.dt.abn.wages.ex::SP_ATOWageVersusThld"( 
    IN  it_data_for_rule 	"osr.edw.platform.fra.prt.dt.abn::Types.wages.data_wage",
    IN 	parameters          "osr.edw.platform.fra.prt.dt.abn::Types.wages.param_versus",
    OUT et_result       	"osr.edw.platform.fra.prt.dt.abn::Types.wages.result",
    OUT et_text             "osr.edw.platform.fra.prt.dt.abn::Types.wages.text"

)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   READS SQL DATA AS
BEGIN

DECLARE lv_mode NVARCHAR(1);  

DECLARE lv_thld_yearly Decimal(15,2) ;

DECLARE lv_max_rating Decimal(3,2);


SELECT 
"RUN_MODE",
"THRESHOLD_YEARLY"
INTO 
lv_mode,
lv_thld_yearly
FROM :PARAMETERS LIMIT 1;

lt_wages = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
TO_NVARCHAR('AUD  ') AS "WAERS",
0 AS "WAGE"
FROM :it_data_for_rule
;

lt_wages = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"WAERS",
"WAGE"
FROM :lt_wages
UNION
SELECT 
"WAGES"."ABN" AS "ABN",
"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
"WAGES"."GJAHR" AS "GJAHR",
"WAGES"."WAERS" AS "WAERS",
SUM("WAGES"."ATO_BAS_TOTL_PMT_FOR_WRK_AMT") AS "WAGE"
FROM "osr.edw.platform.fra.prt.dt.abn.wages::CV_ABN_ATO_BAS_WAGES" AS "WAGES"
WHERE "PERIOD_CATEGORY" = 'PT-A'
  AND EXISTS (
	SELECT * FROM :it_data_for_rule AS "KEYS"
	WHERE "KEYS"."ABN" = "WAGES"."ABN"
	  AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
	  AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
	  AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
  )
GROUP BY 
"WAGES"."ABN",
"WAGES"."PERIOD_CATEGORY",
"WAGES"."PERIOD_KEY",
"WAGES"."GJAHR",
"WAGES"."WAERS"
HAVING SUM("WAGES"."ATO_BAS_TOTL_PMT_FOR_WRK_AMT")  >= :lv_thld_yearly
UNION
SELECT 
"WAGES"."ABN" AS "ABN",
"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
"WAGES"."GJAHR" AS "GJAHR",
"WAGES"."WAERS" AS "WAERS",
SUM("WAGES"."ATO_ITR_SALARY_WAGES") AS "WAGE"
FROM "osr.edw.platform.fra.prt.dt.abn.wages::CV_ABN_ATO_ITR_WAGES" AS "WAGES"
WHERE "PERIOD_CATEGORY" = 'PT-A'
  AND EXISTS (
	SELECT * FROM :it_data_for_rule AS "KEYS"
	WHERE "KEYS"."ABN" = "WAGES"."ABN"
	  AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
	  AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
	  AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
  )
GROUP BY 
"WAGES"."ABN",
"WAGES"."PERIOD_CATEGORY",
"WAGES"."PERIOD_KEY",
"WAGES"."GJAHR",
"WAGES"."WAERS"
HAVING SUM("WAGES"."ATO_ITR_SALARY_WAGES")  >= :lv_thld_yearly
;

lt_wages_above_thld =  
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"WAERS",
MAX("WAGE") AS "WAGE"
FROM :lt_wages
GROUP BY 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"WAERS"
HAVING MAX("WAGE") >= :lv_thld_yearly
;


lt_bas = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
1 AS "BAS_GE",
0 AS "BAS_LT"
FROM
(
SELECT 
"WAGES"."ABN" AS "ABN",
"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
"WAGES"."GJAHR" AS "GJAHR",
"WAGES"."WAERS" AS "WAERS",
SUM("WAGES"."ATO_BAS_TOTL_PMT_FOR_WRK_AMT") AS "WAGE"
FROM "osr.edw.platform.fra.prt.dt.abn.wages::CV_ABN_ATO_BAS_WAGES" AS "WAGES"
WHERE "PERIOD_CATEGORY" = 'PT-A'
  AND EXISTS (
	SELECT * FROM :lt_wages_above_thld AS "KEYS"
	WHERE "KEYS"."ABN" = "WAGES"."ABN"
	  AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
	  AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
	  AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
  )
GROUP BY 
"WAGES"."ABN",
"WAGES"."PERIOD_CATEGORY",
"WAGES"."PERIOD_KEY",
"WAGES"."GJAHR",
"WAGES"."WAERS"
HAVING SUM("WAGES"."ATO_BAS_TOTL_PMT_FOR_WRK_AMT")  >= :lv_thld_yearly
)
UNION
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
0 AS "BAS_GE",
1 AS "BAS_LT"
FROM
(
SELECT 
"WAGES"."ABN" AS "ABN",
"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
"WAGES"."GJAHR" AS "GJAHR",
"WAGES"."WAERS" AS "WAERS",
SUM("WAGES"."ATO_BAS_TOTL_PMT_FOR_WRK_AMT") AS "WAGE"
FROM "osr.edw.platform.fra.prt.dt.abn.wages::CV_ABN_ATO_BAS_WAGES" AS "WAGES"
WHERE "PERIOD_CATEGORY" = 'PT-A'
  AND EXISTS (
	SELECT * FROM :lt_wages_above_thld AS "KEYS"
	WHERE "KEYS"."ABN" = "WAGES"."ABN"
	  AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
	  AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
	  AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
  )
GROUP BY 
"WAGES"."ABN",
"WAGES"."PERIOD_CATEGORY",
"WAGES"."PERIOD_KEY",
"WAGES"."GJAHR",
"WAGES"."WAERS"
HAVING SUM("WAGES"."ATO_BAS_TOTL_PMT_FOR_WRK_AMT")  < :lv_thld_yearly
)
;

lt_itr = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
1 AS "ITR_GE",
0 AS "ITR_LT",
0 AS "ITR_NIL"
FROM
(
SELECT 
"WAGES"."ABN" AS "ABN",
"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
"WAGES"."GJAHR" AS "GJAHR",
"WAGES"."WAERS" AS "WAERS",
SUM("WAGES"."ATO_ITR_SALARY_WAGES") AS "WAGE"
FROM "osr.edw.platform.fra.prt.dt.abn.wages::CV_ABN_ATO_ITR_WAGES" AS "WAGES"
WHERE "PERIOD_CATEGORY" = 'PT-A'
  AND EXISTS (
	SELECT * FROM :lt_wages_above_thld AS "KEYS"
	WHERE "KEYS"."ABN" = "WAGES"."ABN"
	  AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
	  AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
	  AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
  )
GROUP BY 
"WAGES"."ABN",
"WAGES"."PERIOD_CATEGORY",
"WAGES"."PERIOD_KEY",
"WAGES"."GJAHR",
"WAGES"."WAERS"
HAVING SUM("WAGES"."ATO_ITR_SALARY_WAGES")  >= :lv_thld_yearly
)
UNION
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
0 AS "ITR_GE",
1 AS "ITR_LT",
0 AS "ITR_NIL"
FROM
(
SELECT 
"WAGES"."ABN" AS "ABN",
"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
"WAGES"."GJAHR" AS "GJAHR",
"WAGES"."WAERS" AS "WAERS",
SUM("WAGES"."ATO_ITR_SALARY_WAGES") AS "WAGE"
FROM "osr.edw.platform.fra.prt.dt.abn.wages::CV_ABN_ATO_ITR_WAGES" AS "WAGES"
WHERE "PERIOD_CATEGORY" = 'PT-A'
  AND EXISTS (
	SELECT * FROM :lt_wages_above_thld AS "KEYS"
	WHERE "KEYS"."ABN" = "WAGES"."ABN"
	  AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
	  AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
	  AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
  )
GROUP BY 
"WAGES"."ABN",
"WAGES"."PERIOD_CATEGORY",
"WAGES"."PERIOD_KEY",
"WAGES"."GJAHR",
"WAGES"."WAERS"
HAVING SUM("WAGES"."ATO_ITR_SALARY_WAGES")  < :lv_thld_yearly 
   AND SUM("WAGES"."ATO_ITR_SALARY_WAGES")  > 0
)
UNION
SELECT 
"KEYS"."ABN" AS "ABN",
"KEYS"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
"KEYS"."PERIOD_KEY" AS "PERIOD_KEY",
"KEYS"."GJAHR" AS "GJAHR",
0 AS "ITR_GE",
0 AS "ITR_LT",
1 AS "ITR_NIL"
FROM :lt_wages_above_thld AS "KEYS"
WHERE NOT EXISTS (
	SELECT * FROM "osr.edw.platform.fra.prt.dt.abn.wages::CV_ABN_ATO_ITR_WAGES" AS "WAGES" 
	WHERE "KEYS"."ABN" = "WAGES"."ABN"
	  AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
	  AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
	  AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
  )
;

lt_result_position = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
SUM("BAS_GE") AS "BAS_GE",
SUM("BAS_LT") AS "BAS_LT",
SUM("ITR_GE") AS "ITR_GE",
SUM("ITR_LT") AS "ITR_LT",
SUM("ITR_NIL") AS "ITR_NIL"
FROM
(
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
SUM("BAS_GE") AS "BAS_GE",
SUM("BAS_LT") AS "BAS_LT",
0 AS "ITR_GE",
0 AS "ITR_LT",
0 AS "ITR_NIL"
FROM :lt_bas
GROUP BY 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR"
UNION
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
0 AS "BAS_GE",
0 AS "BAS_LT",
SUM("ITR_GE") AS "ITR_GE",
SUM("ITR_LT") AS "ITR_LT",
SUM("ITR_NIL") AS "ITR_NIL"
FROM :lt_itr
GROUP BY 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR"
)
GROUP BY 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR"
;

lt_result = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
CASE 
WHEN "BAS_GE" = 1 AND "BAS_LT" = 0 THEN 'GE'
WHEN "BAS_GE" = 0 AND "BAS_LT" = 1 THEN 'LT'
ELSE ''
END "BAS",
CASE 
WHEN "ITR_GE" = 1 AND "ITR_LT" = 0 AND "ITR_NIL" = 0 THEN 'GE'
WHEN "ITR_GE" = 0 AND "ITR_LT" = 1 AND "ITR_NIL" = 0 THEN 'LT'
WHEN "ITR_GE" = 0 AND "ITR_LT" = 0 AND "ITR_NIL" = 1 THEN 'NIL'
ELSE 'NIL'
END "ITR"
FROM :lt_result_position
;

IF :lv_mode = 'R' THEN

SELECT MAX("RISK_FACTOR_RATING") INTO lv_max_rating FROM "osr.edw.platform.fra.prt.dt.abn.wages.dt::CV_RFR_ATO_WAGE_VERSUS_THLD";

lt_pre_result = 
SELECT 
"RESULT"."ABN",
"RESULT"."PERIOD_CATEGORY",
"RESULT"."PERIOD_KEY",
"RESULT"."GJAHR",
100*"RFR"."RISK_FACTOR_RATING"/:lv_max_rating AS "DETECTION_RESULT", 
"RFR"."RISK_FACTOR_RATING" AS "RISK_FACTOR_RATING", 
"RESULT"."BAS",
"RESULT"."ITR"
FROM :lt_result AS "RESULT"
INNER JOIN
"osr.edw.platform.fra.prt.dt.abn.wages.dt::CV_RFR_ATO_WAGE_VERSUS_THLD" AS "RFR"
ON  "RESULT"."BAS" = "RFR"."BAS"
AND "RESULT"."ITR" = "RFR"."ITR";

et_result = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"DETECTION_RESULT"
FROM :lt_pre_result AS "RESULT"
;

et_text = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
'' AS "TEXT",
'/OSRQLD/FRA_PRT'       AS "MSGID",
'001'                   AS "MSGNO",
CASE 
WHEN "BAS" = 'GE' THEN '>= yearly threshold' || char(32) || :lv_thld_yearly || 'AUD'
WHEN "BAS" = 'LT' THEN '<  yearly threshold' || char(32) || :lv_thld_yearly || 'AUD'
ELSE ''
END AS "MSGV1",
CASE 
WHEN "ITR" = 'GE' THEN '>=  yearly threshold' || char(32) || :lv_thld_yearly || 'AUD'
WHEN "ITR" = 'LT' THEN '<  yearly threshold' || char(32) || :lv_thld_yearly || 'AUD'
WHEN 'ITR' = 'NIL' THEN 'not available'
ELSE 'not available'
END "MSGV2",
TO_VARCHAR(TO_INT("RISK_FACTOR_RATING")) AS "MSGV3",
'AUD' AS "MSGV4",
'' AS "MSGV1_FC",
'' AS "MSGV2_FC",
'' AS "MSGV3_FC",
'' AS "MSGV4_FC"
FROM 
:lt_pre_result
;

END IF;

IF :lv_mode = 'S' THEN

et_result = 
SELECT 
"RESULT"."ABN",
"RESULT"."PERIOD_CATEGORY",
"RESULT"."PERIOD_KEY",
"RESULT"."GJAHR",
100 AS "DETECTION_RESULT"
FROM :lt_result AS "RESULT"
;

et_text = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
'' AS "TEXT",
'/OSRQLD/FRA_PRT'       AS "MSGID",
'001'                   AS "MSGNO",
CASE 
WHEN "BAS" = 'GE' THEN '>= threshold'
WHEN "BAS" = 'LT' THEN '< threshold'
ELSE ''
END AS "MSGV1",
CASE 
WHEN "ITR" = 'GE' THEN '>= yearly threshold' || char(32) || :lv_thld_yearly || 'AUD'
WHEN "ITR" = 'LT' THEN '<  yearly threshold' || char(32) || :lv_thld_yearly || 'AUD'
WHEN 'ITR' = 'NIL' THEN 'not available'
ELSE 'not available'
END "MSGV2",
TO_VARCHAR(TO_INT("RISK_FACTOR_RATING")) AS "MSGV3",
'AUD' AS "MSGV4",
'' AS "MSGV1_FC",
'' AS "MSGV2_FC",
'' AS "MSGV3_FC",
'' AS "MSGV4_FC"
FROM 
:lt_pre_result
;

END IF;

END