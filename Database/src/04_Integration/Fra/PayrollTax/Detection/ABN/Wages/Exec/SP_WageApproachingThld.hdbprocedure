PROCEDURE "osr.edw.platform.fra.prt.dt.abn.wages.ex::SP_WageApproachingThld"( 
    IN  it_data_for_rule 	"osr.edw.platform.fra.prt.dt.abn::Types.wages.data_wage",
    IN 	parameters          "osr.edw.platform.fra.prt.dt.abn::Types.wages.param_approaching",
    OUT et_result       	"osr.edw.platform.fra.prt.dt.abn::Types.wages.result",
    OUT et_text             "osr.edw.platform.fra.prt.dt.abn::Types.wages.text"
	
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   READS SQL DATA AS
BEGIN

DECLARE lv_pt_a_cnt Integer DEFAULT 0;
DECLARE lv_pt_q_cnt Integer DEFAULT 0;

DECLARE lv_result_a_cnt Integer DEFAULT 0;
DECLARE lv_result_q_cnt Integer DEFAULT 0;


SELECT COUNT(*) INTO lv_pt_q_cnt FROM :it_data_for_rule WHERE "PERIOD_CATEGORY" = 'PT-Q';
IF lv_pt_q_cnt > 0 THEN 
	lt_data_for_rule = SELECT * FROM :it_data_for_rule  WHERE "PERIOD_CATEGORY" = 'PT-Q';
	CALL "osr.edw.platform.fra.prt.dt.abn.wages.ex::SP_QuarterWageApproachingThld"( 
    	it_data_for_rule	=> :lt_data_for_rule,
    	parameters      	=> :parameters,
    	et_result   		=> et_result,
    	et_text         	=> et_text
	)
	;
END IF;

SELECT COUNT(*) INTO lv_pt_a_cnt FROM :it_data_for_rule WHERE "PERIOD_CATEGORY" = 'PT-A';
IF lv_pt_a_cnt > 0 THEN 
	lt_data_for_rule = SELECT * FROM :it_data_for_rule  WHERE "PERIOD_CATEGORY" = 'PT-A';
	CALL "osr.edw.platform.fra.prt.dt.abn.wages.ex::SP_AnnualWageApproachingThld"( 
    	it_data_for_rule	=> :lt_data_for_rule,
    	parameters      	=> :parameters,
    	et_result   		=> et_result,
    	et_text         	=> et_text
	)
	;
END IF;

END