PROCEDURE "osr.edw.platform.fra.prt.dt.abn.wages.ex::SP_UHC"
	( 
    IN  it_data_for_rule 	"osr.edw.platform.fra.prt.dt.abn::Types.wages.data_wage",
    OUT et_result       	"osr.edw.platform.fra.prt.dt.abn::Types.wages.result",
    OUT et_text             "osr.edw.platform.fra.prt.dt.abn::Types.wages.text"
	)
	
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   READS SQL DATA AS
   
BEGIN

et_result = 
SELECT 
"DATA"."ABN",
"DATA"."PERIOD_CATEGORY",
"DATA"."PERIOD_KEY",
"DATA"."GJAHR",
100 AS "DETECTION_RESULT"
FROM 
:it_data_for_rule AS "DATA" --cj
INNER JOIN
"osr.edw.platform.fra.prt.dt.abn.wages::TF_ABN_ACN_MAPPING"( ) AS "MAP"
ON  "DATA"."ABN" ="MAP"."ABN" 
AND "DATA"."PERIOD_CATEGORY" = "MAP"."PERIOD_CATEGORY"
AND "DATA"."PERIOD_KEY" = "MAP"."PERIOD_KEY"
AND "DATA"."GJAHR" = "MAP"."GJAHR"
INNER JOIN
"osr.edw.platform.fra.prt.dt.abn::TF_FY_END_DATE"( ) AS "FY"
ON "DATA"."GJAHR" = "FY"."FISCAL_YEAR"
WHERE EXISTS (
	SELECT * FROM  "osr.edw.staging.md.asic.proxy::TF_XREF_C"( ) AS "XREF"
	WHERE ("MAP"."ACN" = RIGHT("XREF"."OWNER_SOURCE_ID",9) OR "MAP"."ACN" = RIGHT("XREF"."MEMBER_SOURCE_ID",9))
	  AND "FY"."END_DATE_SQL" >= "XREF"."ROLE_START_DT"
	  AND "FY"."END_DATE_SQL" <= "XREF"."XREF_END_DT"
	  AND "XREF"."XREF_ROLE" = 'UH'
	  AND "XREF"."REC_END_DT" >= CURRENT_DATE
	  AND "XREF"."REC_START_DT" <= CURRENT_DATE
)
;

et_text = 
	SELECT 
		"ABN",
		"PERIOD_CATEGORY",
		"PERIOD_KEY",
		"GJAHR",
		''	AS "TEXT",
		''	AS "MSGID",
		''	AS "MSGNO",
		''			AS "MSGV1",
		'' 				AS "MSGV2",
		''					AS "MSGV3",
		''					AS "MSGV4",
		''					AS "MSGV1_FC",
		''					AS "MSGV2_FC",
		''					AS "MSGV3_FC",
		''					AS "MSGV4_FC"
	FROM  :et_result
	;
	
END	