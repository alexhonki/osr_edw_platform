FUNCTION "osr.edw.platform.fra.prt.dt.abn.wages.dt::TF_RFR_EXEMPTION_CASE"( )
           RETURNS TABLE (
	CASE_OUTCOME			NVARCHAR(10),
	CASE_CATEGORY           NVARCHAR(10),
	RISK_FACTOR_RATING		DECIMAL(3,2)	
)
       LANGUAGE SQLSCRIPT 
       SQL SECURITY INVOKER AS 
BEGIN 
    /*****************************
        Write your function logic
    ****************************/
    
lt_dummy = SELECT TOP 1 * FROM "osr.hana.platform.synonym::_SYS_BI.M_FISCAL_CALENDAR";
RETURN

SELECT 'ALLOWED'       AS "CASE_OUTCOME",   'PRT'  AS "CASE_CATEGORY",   5  AS "RISK_FACTOR_RATING" FROM :lt_dummy UNION
SELECT 'ALLOWED'       AS "CASE_OUTCOME",   'MLT'  AS "CASE_CATEGORY",   5  AS "RISK_FACTOR_RATING" FROM :lt_dummy UNION
SELECT 'ALLOWED'       AS "CASE_OUTCOME",   'DTY'  AS "CASE_CATEGORY",   3  AS "RISK_FACTOR_RATING" FROM :lt_dummy UNION

SELECT 'DISALLOWED'    AS "CASE_OUTCOME",   'PRT'  AS "CASE_CATEGORY",   5  AS "RISK_FACTOR_RATING" FROM :lt_dummy UNION
SELECT 'DISALLOWED'    AS "CASE_OUTCOME",   'MLT'  AS "CASE_CATEGORY",   5  AS "RISK_FACTOR_RATING" FROM :lt_dummy UNION
SELECT 'DISALLOWED'    AS "CASE_OUTCOME",   'DTY'  AS "CASE_CATEGORY",   3  AS "RISK_FACTOR_RATING" FROM :lt_dummy UNION

SELECT 'INVALID'       AS "CASE_OUTCOME",   'PRT'  AS "CASE_CATEGORY",   1  AS "RISK_FACTOR_RATING" FROM :lt_dummy UNION
SELECT 'INVALID'       AS "CASE_OUTCOME",   'MLT'  AS "CASE_CATEGORY",   1  AS "RISK_FACTOR_RATING" FROM :lt_dummy UNION
SELECT 'INVALID'       AS "CASE_OUTCOME",   'DTY'  AS "CASE_CATEGORY",   1  AS "RISK_FACTOR_RATING" FROM :lt_dummy UNION

SELECT 'BLANK'         AS "CASE_OUTCOME",   'PRT'  AS "CASE_CATEGORY",   1  AS "RISK_FACTOR_RATING" FROM :lt_dummy UNION
SELECT 'BLANK'         AS "CASE_OUTCOME",   'MLT'  AS "CASE_CATEGORY",   1  AS "RISK_FACTOR_RATING" FROM :lt_dummy UNION
SELECT 'BLANK'         AS "CASE_OUTCOME",   'DTY'  AS "CASE_CATEGORY",   1  AS "RISK_FACTOR_RATING" FROM :lt_dummy
;    
END;