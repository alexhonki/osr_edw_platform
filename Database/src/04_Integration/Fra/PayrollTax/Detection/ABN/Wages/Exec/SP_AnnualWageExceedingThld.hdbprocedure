PROCEDURE "osr.edw.platform.fra.prt.dt.abn.wages.ex::SP_AnnualWageExceedingThld"( 
    IN  it_data_for_rule 	"osr.edw.platform.fra.prt.dt.abn::Types.wages.data_wage",
    IN 	parameters          "osr.edw.platform.fra.prt.dt.abn::Types.wages.param_exceeding",
    OUT et_result       	"osr.edw.platform.fra.prt.dt.abn::Types.wages.result_w_amnt"
	
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   READS SQL DATA AS
BEGIN

DECLARE lv_mode NVARCHAR(1);  

DECLARE lv_thld_yearly Decimal(15,2) ;
DECLARE lx_ato_bas NVARCHAR(1);
DECLARE lx_ato_itr NVARCHAR(1);
DECLARE lx_wcq NVARCHAR(1);
DECLARE lx_risk_value NVARCHAR(1);

DECLARE lv_max_rating Decimal(3,2);


SELECT 
"RUN_MODE",
"THRESHOLD_YEARLY",
"FLAG_ATO_BAS",
"FLAG_ATO_ITR",
"FLAG_WCQ",
"FLAG_RISK_VALUE"
INTO 
lv_mode,
lv_thld_yearly,
lx_ato_bas,
lx_ato_itr,
lx_wcq,
lx_risk_value
FROM :PARAMETERS LIMIT 1;

lt_wages = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
TO_NVARCHAR('AUD  ') AS "WAERS",
0 AS "WAGE"
FROM :it_data_for_rule
;

-- ATO BAS Data   	
 IF lx_ato_bas = 'Y' THEN
 	lt_wages = 
 	SELECT 
 	"ABN",
 	"PERIOD_CATEGORY",
 	"PERIOD_KEY",
 	"GJAHR",
 	"WAERS",
 	"WAGE"
 	FROM :lt_wages
 	UNION
 	SELECT 
 	"WAGES"."ABN" AS "ABN",
 	"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
 	"WAGES"."GJAHR" AS "GJAHR",
 	"WAGES"."WAERS" AS "WAERS",
 	SUM("WAGES"."ATO_BAS_TOTL_PMT_FOR_WRK_AMT") AS "WAGE"
 	FROM "osr.edw.platform.fra.prt.dt.abn.wages::CV_ABN_ATO_BAS_WAGES" AS "WAGES"
 	WHERE "PERIOD_CATEGORY" = 'PT-A'
 	  AND EXISTS (
 		SELECT * FROM :it_data_for_rule AS "KEYS"
 		WHERE "KEYS"."ABN" = "WAGES"."ABN"
 		  AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
 		  AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
 		  AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
 	  )
 	GROUP BY 
 	"WAGES"."ABN",
 	"WAGES"."PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY",
 	"WAGES"."GJAHR",
 	"WAGES"."WAERS"
 	HAVING SUM("WAGES"."ATO_BAS_TOTL_PMT_FOR_WRK_AMT")  >= :lv_thld_yearly
 	;
 	
 END IF;
 
 IF lx_ato_itr = 'Y' THEN
 	lt_wages = 
 	SELECT 
 	"ABN",
 	"PERIOD_CATEGORY",
 	"PERIOD_KEY",
 	"GJAHR",
 	"WAERS",
 	"WAGE"
 	FROM :lt_wages
 	UNION
	SELECT 
 	"WAGES"."ABN" AS "ABN",
 	"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
 	"WAGES"."GJAHR" AS "GJAHR",
 	"WAGES"."WAERS" AS "WAERS",
 	SUM("WAGES"."ATO_ITR_SALARY_WAGES") AS "WAGE"
 	FROM "osr.edw.platform.fra.prt.dt.abn.wages::CV_ABN_ATO_ITR_WAGES" AS "WAGES"
 	WHERE "PERIOD_CATEGORY" = 'PT-A'
 	  AND EXISTS (
 		SELECT * FROM :it_data_for_rule AS "KEYS"
 		WHERE "KEYS"."ABN" = "WAGES"."ABN"
 		  AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
 		  AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
 		  AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
 	  )
 	GROUP BY 
 	"WAGES"."ABN",
 	"WAGES"."PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY",
 	"WAGES"."GJAHR",
 	"WAGES"."WAERS"
 	HAVING SUM("WAGES"."ATO_ITR_SALARY_WAGES")  >= :lv_thld_yearly
 	;
 END IF;
 
 IF lx_wcq = 'Y' THEN
 
	lt_wcq = 
	SELECT 
 	"WAGES"."ABN" AS "ABN",
 	"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
 	"WAGES"."GJAHR" AS "GJAHR",
 	"WAGES"."WAERS" AS "WAERS",
 	SUM("WAGES"."WCQ_ACT_WAGES") AS "WAGE"
 	FROM "osr.edw.platform.fra.prt.dt.abn.wages::CV_ABN_WCQ_WAGES" AS "WAGES"
 	WHERE "PERIOD_CATEGORY" = 'PT-A'
 	  AND EXISTS (
 		SELECT * FROM :it_data_for_rule AS "KEYS"
 		WHERE "KEYS"."ABN" = "WAGES"."ABN"
 		  AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
 		  AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
 		  AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
 	  )
 	GROUP BY 
 	"WAGES"."ABN",
 	"WAGES"."PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY",
 	"WAGES"."GJAHR",
 	"WAGES"."WAERS"
 	HAVING SUM("WAGES"."WCQ_ACT_WAGES")  >= :lv_thld_yearly
 	;
 	
 	lt_wages = 
 	SELECT 
 	"ABN",
 	"PERIOD_CATEGORY",
 	"PERIOD_KEY",
 	"GJAHR",
 	"WAERS",
 	"WAGE"
 	FROM :lt_wages
 	UNION
 	SELECT 
 	"ABN",
 	"PERIOD_CATEGORY",
 	"PERIOD_KEY",
 	"GJAHR",
 	"WAERS",
 	"WAGE"
 	FROM
	:lt_wcq
 	;
 END IF;
 	

lt_wages =  
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"WAERS",
MAX("WAGE") AS "WAGE"
FROM :lt_wages
GROUP BY 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"WAERS"
HAVING MAX("WAGE") >= :lv_thld_yearly
;


lt_wage_for_tax = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"WAERS",
SUM("WAGE") AS "WAGE",
SUM("WCQ_ACT_WAGES") AS "WCQ_ACT_WAGES"
FROM 
(
	SELECT 
	"ABN",
	"PERIOD_CATEGORY",
	"PERIOD_KEY",
	"GJAHR",
	"WAERS",
	"WAGE", 
	0 AS "WCQ_ACT_WAGES"
	FROM :lt_wages
	UNION
	SELECT 
	"ABN",
	"PERIOD_CATEGORY",
	"PERIOD_KEY",
	"GJAHR",
	"WAERS",
	0 AS "WAGE", 
	"WAGE" AS "WCQ_ACT_WAGES"
	FROM :lt_wcq
)
GROUP BY 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"WAERS"
;
 	
lt_result = 
SELECT 
"W"."ABN",
"W"."PERIOD_CATEGORY",
"W"."PERIOD_KEY",
"W"."GJAHR",
100 AS "DETECTION_RESULT",
CASE 
WHEN "W"."WAGE" > "THLD"."DEDUCTION_TO" 
THEN "W"."WCQ_ACT_WAGES" * ("RATE"."PRT_YRLY_RATE"/100)
WHEN "W"."WAGE" >= "THLD"."THRESHOLD" 
THEN (("W"."WCQ_ACT_WAGES" - ("W"."WCQ_ACT_WAGES"/"W"."WAGE") * ("THLD"."THRESHOLD" - (("W"."WAGE" - "THLD"."THRESHOLD")/4))) * ("RATE"."PRT_YRLY_RATE"/100))
ELSE 0
END 
AS "RISK_AMOUNT",
"W"."WAERS" AS "CURRENCY"
FROM
:lt_wage_for_tax AS "W"
INNER JOIN 
"osr.edw.staging.md.rms.prt.proxy::CV_PRT_THRESHOLD" AS "THLD"
ON  "W"."PERIOD_CATEGORY" = "THLD"."INCOTYP"
AND "W"."GJAHR" = "THLD"."GJAHR"
INNER JOIN
"osr.edw.staging.md.rms.prt.proxy::CV_PRT_RATE" AS "RATE"
ON  "W"."GJAHR" = "THLD"."GJAHR"
AND "W"."GJAHR" = "RATE"."PERIOD_KEY"
;

IF :lv_mode = 'R' THEN

SELECT MAX("RISK_FACTOR_RATING") INTO lv_max_rating FROM "osr.edw.platform.fra.prt.dt.abn.wages.dt::CV_RFR_ATO_WAGE_VERSUS_THLD";

et_result = 
SELECT
"W"."ABN",
"W"."PERIOD_CATEGORY",
"W"."PERIOD_KEY",
"W"."GJAHR",
100*"R"."RISK_FACTOR_RATING"/:lv_max_rating AS "DETECTION_RESULT",
CASE 
WHEN :lx_risk_value = 'Y' THEN "RISK_AMOUNT" 
ELSE 0 
END AS "RISK_AMOUNT",
"CURRENCY" 
FROM 
:lt_result AS "W", 
"osr.edw.platform.fra.prt.dt.abn.wages.dt::CV_RFR_ESTIMATED_TAX" AS "R"
WHERE "W"."RISK_AMOUNT" > "R"."LOW"
  AND "R"."TOP_BAND" = 'X'
UNION
SELECT
"W"."ABN",
"W"."PERIOD_CATEGORY",
"W"."PERIOD_KEY",
"W"."GJAHR",
100*"R"."RISK_FACTOR_RATING"/:lv_max_rating AS "DETECTION_RESULT",
CASE 
WHEN :lx_risk_value = 'Y' THEN "RISK_AMOUNT" 
ELSE 0 
END AS "RISK_AMOUNT",
"CURRENCY" 
FROM 
:lt_result AS "W", 
"osr.edw.platform.fra.prt.dt.abn.wages.dt::CV_RFR_ESTIMATED_TAX" AS "R"
WHERE "W"."RISK_AMOUNT" >= "R"."LOW" 
  AND "W"."RISK_AMOUNT" < "R"."HIGH" 
  AND "R"."TOP_BAND" <> 'X'
;

END IF;

IF :lv_mode = 'S' THEN

et_result = 
SELECT
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
100 AS "DETECTION_RESULT",
CASE 
WHEN :lx_risk_value = 'Y' THEN "RISK_AMOUNT" 
ELSE 0 
END AS "RISK_AMOUNT",
"CURRENCY" 
FROM 
:lt_result
;

END IF;


END