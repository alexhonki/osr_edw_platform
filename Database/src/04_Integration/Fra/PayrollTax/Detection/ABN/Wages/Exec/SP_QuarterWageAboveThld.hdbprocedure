PROCEDURE "osr.edw.platform.fra.prt.dt.abn.wages.ex::SP_QuarterWageAboveThld"( 
    IN  it_data_for_rule 	"osr.edw.platform.fra.prt.dt.abn::Types.wages.data_wage",
    IN 	parameters          "osr.edw.platform.fra.prt.dt.abn::Types.wages.param_wage",
    OUT et_result       	"osr.edw.platform.fra.prt.dt.abn::Types.wages.result_w_amnt"
	
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   READS SQL DATA AS
BEGIN

DECLARE lv_mode NVARCHAR(1);  

DECLARE lv_thld_yearly Decimal(15,2) ;
DECLARE lv_ato_bas_wage_low DECIMAL(15,2);
DECLARE lv_ato_bas_wage_high DECIMAL(15,2);
DECLARE lx_ato_bas NVARCHAR(1);
DECLARE lx_ato_itr NVARCHAR(1);
DECLARE lx_wcq NVARCHAR(1);
DECLARE lx_risk_value NVARCHAR(1);
DECLARE lx_reinstatement NVARCHAR(1);
DECLARE lx_new_registration NVARCHAR(1);

DECLARE lv_pt_a_cnt Integer;
DECLARE lv_pt_q_cnt Integer;
DECLARE lv_ato_bas_cnt Integer;

SELECT 
"RUN_MODE",
"THRESHOLD_YEARLY", 
"ATO_BAS_WAGE_LOW", 
"ATO_BAS_WAGE_HIGH", 
"FLAG_ATO_BAS",
"FLAG_ATO_ITR",
"FLAG_WCQ",
"FLAG_RISK_VALUE",
"FLAG_REINSTATEMENT",
"FLAG_NEW_REGISTRATION"
INTO 
lv_mode,
lv_thld_yearly,
lv_ato_bas_wage_low,
lv_ato_bas_wage_high,
lx_ato_bas,
lx_ato_itr,
lx_wcq,
lx_risk_value,
lx_reinstatement,
lx_new_registration
FROM :PARAMETERS LIMIT 1;

lt_wages = 
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
TO_NVARCHAR('AUD  ') AS "WAERS",
0 AS "WAGE"
FROM :it_data_for_rule
;

-- ATO BAS Data   	
 IF lx_ato_bas = 'X' THEN
 	lt_wages = 
 	SELECT 
 	"ABN",
 	"PERIOD_CATEGORY",
 	"PERIOD_KEY",
 	"GJAHR",
 	"WAERS",
 	"WAGE"
 	FROM :lt_wages
 	UNION
 	SELECT 
 	"WAGES"."ABN" AS "ABN",
 	"WAGES"."PERIOD_CATEGORY" AS "PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY" AS "PERIOD_KEY",
 	"WAGES"."GJAHR" AS "GJAHR",
 	"WAGES"."WAERS" AS "WAERS",
 	SUM("WAGES"."ATO_BAS_TOTL_PMT_FOR_WRK_AMT") AS "WAGE"
 	FROM "osr.edw.platform.fra.prt.dt.abn.wages::CV_ABN_ATO_BAS_WAGES" AS "WAGES"
 	WHERE "PERIOD_CATEGORY" = 'PT-Q'
 	  AND EXISTS (
 		SELECT * FROM :it_data_for_rule AS "KEYS"
 		WHERE "KEYS"."ABN" = "WAGES"."ABN"
 		  AND "KEYS"."PERIOD_CATEGORY" = "WAGES"."PERIOD_CATEGORY"
 		  AND "KEYS"."PERIOD_KEY" = "WAGES"."PERIOD_KEY"
 		  AND "KEYS"."GJAHR" = "WAGES"."GJAHR"
 	  )
 	GROUP BY 
 	"WAGES"."ABN",
 	"WAGES"."PERIOD_CATEGORY",
 	"WAGES"."PERIOD_KEY",
 	"WAGES"."GJAHR",
 	"WAGES"."WAERS"
 	HAVING SUM("WAGES"."ATO_BAS_TOTL_PMT_FOR_WRK_AMT")  >= :lv_thld_yearly
 	;
 	
END IF;

lt_wages =  
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"WAERS",
MAX("WAGE") AS "WAGE"
FROM :lt_wages
GROUP BY 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
"WAERS"
HAVING MAX("WAGE") >= :lv_thld_yearly
;
	
et_result =
SELECT 
"ABN",
"PERIOD_CATEGORY",
"PERIOD_KEY",
"GJAHR",
100 AS "DETECTION_RESULT",
100 AS "RISK_AMOUNT",
"WAERS" AS "CURRENCY"
FROM :lt_wages
;


END