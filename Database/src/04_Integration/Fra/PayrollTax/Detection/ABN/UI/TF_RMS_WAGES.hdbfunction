FUNCTION "osr.edw.platform.fra.prt.dt.abn.ui::TF_RMS_WAGES"(IN IP_ALERT_ID NVARCHAR(20), IN IP_FY_ADJUSTMENT INTEGER )
RETURNS TABLE
(
DB_KEY						VARBINARY(16),
ALERT_ID					NVARCHAR(20),
ABN							NVARCHAR(20),
GJAHR						NVARCHAR(4),
FIN_YEAR					NVARCHAR(4),
BPARTNER                	NVARCHAR(10),
A_GROSS_SAL_WAGE	    	DECIMAL(13,2),
A_ALLOWANCE					DECIMAL(13,2),
A_BONUS	    				DECIMAL(13,2),
A_COMMISSION	        	DECIMAL(13,2),
A_DIRECTOR_FEE	        	DECIMAL(13,2),
A_EMPL_SUP_CONTRIB			DECIMAL(13,2),
A_FRINGE_BENEFIT			DECIMAL(13,2),
A_ELIG_TERM_PMT				DECIMAL(13,2),
A_CONTRACTORS				DECIMAL(13,2),
A_SHARE_SCHEMES				DECIMAL(13,2),
C_TOT_QLD_TXBLE_WAGES		DECIMAL(13,2),
A_TOT_INT_WAGE				DECIMAL(13,2),
A_APPRENT_PMT				DECIMAL(13,2),
A_TRAINEES_PMT				DECIMAL(13,2),
A_OTH_NON_TAX_WAGE			DECIMAL(13,2),
C_TOT_QLD_NON_TAX_WAGE		DECIMAL(13,2),
C_TOT_GRP_AUST_WAGES        DECIMAL(13,2),
WAERS						NVARCHAR(5)
)
LANGUAGE SQLSCRIPT 
SQL SECURITY INVOKER AS 

BEGIN



IF :IP_ALERT_ID IS NULL OR :IP_ALERT_ID = '?' OR :IP_ALERT_ID = 'NULL' OR :IP_ALERT_ID = '' THEN

ALERT_INFO =
                SELECT
                    "DB_KEY",
                    "DB_KEY_DASH",
                    "ALERT_ID",
                    "ABN" ,
                    "BPARTNER",
                    "GJAHR"
                FROM 
                "osr.edw.platform.fra.prt.dt.abn::TF_ALERT_PT_ABN_FY"()
;

ELSE

ALERT_INFO =
                SELECT
                                "DB_KEY",
                                "DB_KEY_DASH",
                                "ALERT_ID",
                                "ABN" ,
                                "BPARTNER",
                                "GJAHR"
                FROM 
                                "osr.edw.platform.fra.prt.dt.abn::TF_ALERT_PT_ABN_FY"()
                WHERE 
                                "ALERT_ID" = :IP_ALERT_ID
;

END IF;


ALERT_CREA_TIME =

SELECT * FROM
(
SELECT DISTINCT 
	"ALERT_ROOT"."ALERT_ID",
	TO_DATS(TO_NVARCHAR(LEFT("ALERT_ROOT"."CREA_DATE_TIME",8))) AS "ALERT_CREA_DATE",
	"CAL"."FISCAL_YEAR" AS "ALERT_CREA_YEAR"
FROM 
	"osr.apps.acs.synonym::SAPACS.FRA_D_ALERT_ROOT" AS "ALERT_ROOT"
INNER JOIN
	"osr.hana.platform.synonym::_SYS_BI.M_FISCAL_CALENDAR" AS "CAL"
ON
	TO_DATS(TO_NVARCHAR(LEFT("ALERT_ROOT"."CREA_DATE_TIME",8))) = TO_DATS("CAL"."DATE")
WHERE 
	"ALERT_ROOT"."INVEST_OBJ_TYPE" = 'PT_ABN_FY'
AND "ALERT_ROOT"."ALERT_ID" IN (SELECT DISTINCT "ALERT_ID" FROM :ALERT_INFO)
AND "CAL"."CALENDAR_VARIANT" = 'Z6'
)
;

ALERT_INFO_YEAR =
SELECT DISTINCT
    "A"."DB_KEY",
    "A"."DB_KEY_DASH",
    "A"."ALERT_ID",
    "A"."ABN" ,
    "A"."BPARTNER",
    "A"."GJAHR",
    "B"."ALERT_CREA_YEAR"
FROM 
:ALERT_INFO AS "A"
INNER JOIN
:ALERT_CREA_TIME AS "B"
ON
"A"."ALERT_ID" = "B"."ALERT_ID"
;


RETURN
SELECT 
"ALERT"."DB_KEY"				AS "DB_KEY",
"ALERT"."ALERT_ID"				AS "ALERT_ID",	
"ALERT"."ABN"					AS "ABN",
"ALERT"."GJAHR" 				AS "GJAHR",
TO_NVARCHAR(TO_INT("ALERT"."ALERT_CREA_YEAR") - :IP_FY_ADJUSTMENT) AS "FIN_YEAR",
"DFMCA_RETURN"."TAXPAYER"	    AS "BPARTNER",
"3PYA"."A_GROSS_SAL_WAGE"       AS "A_GROSS_SAL_WAGE",
"3PYA"."A_ALLOWANCE"			AS "A_ALLOWANCE",
"3PYA"."A_BONUS"    			AS "A_BONUS",
"3PYA"."A_COMMISSION"    		AS "A_COMMISSION",
"3PYA"."A_DIRECTOR_FEE"	        AS "A_DIRECTOR_FEE",		
"3PYA"."A_EMPL_SUP_CONTRIB"		AS "A_EMPL_SUP_CONTRIB",	
"3PYA"."A_FRINGE_BENEFIT"		AS "A_FRINGE_BENEFIT",	
"3PYA"."A_ELIG_TERM_PMT"		AS "A_ELIG_TERM_PMT",
"3PYA"."A_CONTRACTORS"			AS "A_CONTRACTORS",
"3PYA"."A_SHARE_SCHEMES"		AS "A_SHARE_SCHEMES",
"3PYA"."C_TOT_QLD_TXBLE_WAGES"	AS "C_TOT_QLD_TXBLE_WAGES",		
"3PYA"."A_TOT_INT_WAGE"			AS "A_TOT_INT_WAGE",	
"3PYA"."A_APPRENT_PMT"			AS "A_APPRENT_PMT",	
"3PYA"."A_TRAINEES_PMT"			AS "A_TRAINEES_PMT",	
"3PYA"."A_OTH_NON_TAX_WAGE"		AS "A_OTH_NON_TAX_WAGE",	
"3PYA"."C_TOT_QLD_NON_TAX_WAGE"	AS "C_TOT_QLD_NON_TAX_WAGE",
"3PYA"."C_TOT_GRP_AUST_WAGES"   AS "C_TOT_GRP_AUST_WAGES",
'AUD  ' 						AS "WAERS"
FROM 
"osr.edw.staging.td.rms.synonym::CDS_PSCD.DSO.DFMCA_RETURN.active_data" AS "DFMCA_RETURN"
INNER JOIN "osr.hana.platform.synonym::_SYS_BI.M_FISCAL_CALENDAR" AS "CALENDAR"
ON "DFMCA_RETURN"."APPLY_TO" = "CALENDAR"."DATE"
/*
INNER JOIN
"osr.edw.staging.rms.forms.tf.proxy::TF_FORM_0IDP_M_LV"() AS "0IDP"
ON "DFMCA_RETURN"."CASE_GUID" = "0IDP"."RETURN_ID"
*/
INNER JOIN
"osr.edw.staging.rms.forms.tf.proxy::TF_FORM_3PYA_M_LV"() AS "3PYA"
ON "DFMCA_RETURN"."CASE_GUID" = "3PYA"."RETURN_ID"
INNER JOIN
:ALERT_INFO_YEAR AS "ALERT"
ON "DFMCA_RETURN"."TAXPAYER" = "ALERT"."BPARTNER"
AND TO_NVARCHAR("CALENDAR"."FISCAL_YEAR") = TO_NVARCHAR(TO_INT("ALERT"."ALERT_CREA_YEAR") - :IP_FY_ADJUSTMENT)
WHERE "DFMCA_RETURN"."REVENUE_TYPE" = 'PT'
  AND "DFMCA_RETURN"."FBSTA" = 'IP014'
  AND "DFMCA_RETURN"."FBTYP" IN ( 'ZPA2', 'ZPF2', 'ZPTF', 'ZPTM')
  AND "3PYA"."FORM" IN ('/OSRQLD/IPA1_FORM', 'Z3PYA', '/OSRQLD/IPF1_FORM')
;
END;