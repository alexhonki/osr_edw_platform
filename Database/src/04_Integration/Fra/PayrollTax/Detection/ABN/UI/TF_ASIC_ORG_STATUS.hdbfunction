FUNCTION "osr.edw.platform.fra.prt.dt.abn.ui::TF_ASIC_ORG_STATUS" ( IN IP_ALERT_ID NVARCHAR(20) )
RETURNS TABLE
(
DB_KEY					VARBINARY(16),
DB_KEY_DASH				NVARCHAR(32),
ALERT_ID				NVARCHAR(20),
ABN						NVARCHAR(20),
GJAHR					NVARCHAR(4),
ACN						NVARCHAR(9),
ORG_NAME				NVARCHAR(100),
ORG_TYPE				NVARCHAR(4),
ORG_STATUS				NVARCHAR(4),
ORG_CLASS				NVARCHAR(4),
--REGN_START_DT			NVARCHAR(8),
--REGN_END_DT			NVARCHAR(8),
REGN_START_DT			DAYDATE ,
REGN_END_DT				DAYDATE ,
DEREGISTRATION_CODE		NVARCHAR(4),
PLACE_OF_INCORP			NVARCHAR(30)
)
LANGUAGE SQLSCRIPT 
SQL SECURITY INVOKER AS 

BEGIN 


lt_asic = 
SELECT 
"ALERT"."DB_KEY" AS "DB_KEY",
"ALERT"."ALERT_ID" AS "ALERT_ID",
"ALERT"."ABN" AS "ABN",
"ALERT"."GJAHR" AS "GJAHR",
"ALERT"."DB_KEY_DASH" AS "DB_KEY_DASH",
"MAP"."ACN" AS "ACN",
"DATA"."ORG_NAME" AS "ORG_NAME",
"DATA"."ORG_TYPE" AS "ORG_TYPE",
"DATA"."ORG_STATUS" AS "ORG_STATUS",
"DATA"."ORG_CLASS" AS "ORG_CLASS",
TO_NVARCHAR(TO_DATS("DATA"."REGN_START_DT")) AS "REGN_START_DT",
TO_NVARCHAR(TO_DATS("DATA"."REGN_END_DT")) AS "REGN_END_DT",
"DATA"."DEREGISTRATION_CODE" AS "DEREGISTRATION_CODE",
"DATA"."PLACE_OF_INCORP" AS "PLACE_OF_INCORP"
FROM
"osr.edw.platform.fra.prt.dt.abn::TF_ALERT_PT_ABN_FY"() AS "ALERT"
INNER JOIN 
"osr.edw.staging.td.ato.proxy::TF_ATO_ABN_ACN_MAPPING"() AS "MAP"
ON "ALERT"."ABN" = "MAP"."ABN"
AND "ALERT"."GJAHR" = "MAP"."GJAHR"
INNER JOIN
"osr.edw.staging.md.asic.proxy::CV_ORGANISATION_C" AS "DATA"
--ON  "ALERT"."ABN" = "DATA"."ABN"
ON "MAP"."ACN" = "DATA"."ORG_NUMBER"
--INNER JOIN
--"osr.edw.staging.td.ato.proxy::CV_BASNIND_C" AS "MAP"
--ON "ALERT"."ABN" = "MAP"."ABN"
--AND "ALERT"."GJAHR" = TO_NVARCHAR("DATA"."FINANCIAL_YEAR")
WHERE LEFT(RIGHT("DATA"."NAME",10),2) = 'FY'
--AND "ALERT"."ALERT_ID" = :IP_ALERT_ID
;

IF :IP_ALERT_ID IS NULL OR :IP_ALERT_ID = '?' OR :IP_ALERT_ID = 'NULL' OR :IP_ALERT_ID = '' THEN

RETURN
SELECT
"DB_KEY",
"DB_KEY_DASH",
"ALERT_ID",
"ABN",
"GJAHR",
"ACN",
"ORG_NAME",
"ORG_TYPE",
"ORG_STATUS",
"ORG_CLASS",
--"REGN_START_DT",
--"REGN_END_DT",
CASE WHEN "REGN_START_DT" IS NOT NULL AND "REGN_START_DT" <> '' THEN TO_DATE("REGN_START_DT") ELSE NULL END AS "REGN_START_DT",
CASE WHEN "REGN_END_DT" IS NOT NULL AND "REGN_END_DT" <> '' THEN TO_DATE("REGN_END_DT") ELSE NULL END AS "REGN_END_DT",
"DEREGISTRATION_CODE",
"PLACE_OF_INCORP"
FROM :lt_asic
;

ELSE

RETURN
SELECT
"DB_KEY",
"DB_KEY_DASH",
"ALERT_ID",
"ABN",
"GJAHR",
"ACN",
"ORG_NAME",
"ORG_TYPE",
"ORG_STATUS",
"ORG_CLASS",
--"REGN_START_DT",
--"REGN_END_DT",
CASE WHEN "REGN_START_DT" IS NOT NULL AND "REGN_START_DT" <> '' THEN TO_DATE("REGN_START_DT") ELSE NULL END AS "REGN_START_DT",
CASE WHEN "REGN_END_DT" IS NOT NULL AND "REGN_END_DT" <> '' THEN TO_DATE("REGN_END_DT") ELSE NULL END AS "REGN_END_DT",
"DEREGISTRATION_CODE",
"PLACE_OF_INCORP"
FROM :lt_asic
WHERE "ALERT_ID" = :IP_ALERT_ID
;

END IF;

END;