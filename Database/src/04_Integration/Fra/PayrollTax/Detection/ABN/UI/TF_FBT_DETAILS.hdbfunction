FUNCTION "osr.edw.platform.fra.prt.dt.abn.ui::TF_FBT_DETAILS"(IN IP_ALERT_ID NVARCHAR(20))
              RETURNS TABLE 
    	(
			DB_KEY								VARBINARY(16)	,
			DB_KEY_DASH							NVARCHAR(36)    ,
			ALERT_ID							NVARCHAR(20)	,
			ABN									NVARCHAR(20)	,
			GJAHR								NVARCHAR(4)		,
			FBT_YEAR 							NVARCHAR(4)		,
			TYP1_AGRGT_AMT						NVARCHAR(20)	,
			TYP2_AGRGT_AMT						NVARCHAR(20)	,
			AGRGT_NON_EXMT_AMT					NVARCHAR(20)	,
			FBTABLE_AMT							NVARCHAR(20)	,
			TAX_PYBL_AMT						NVARCHAR(20)	,
			EMPLES_RCVG_FB_CNT					NVARCHAR(20)	,
			ENTRMNT_TXBL_AMT					NVARCHAR(20)	,
			CAR_PARKG_VAL_OF_BNFTS_AMT			NVARCHAR(20)	,
			MEAL_ENTRTNT_VAL_OF_BNFTS_AMT		NVARCHAR(20)	,
			WAERS								NVARCHAR(5)
    	)    		
       LANGUAGE SQLSCRIPT 
       SQL SECURITY INVOKER AS 
BEGIN 
    /*****************************
        Write your function logic
    ****************************/
/*    
 IF :IP_ALERT_ID IS NULL OR :IP_ALERT_ID = '?' OR :IP_ALERT_ID = 'NULL' OR :IP_ALERT_ID = '' THEN   
 
 RETURN
		SELECT 
			"ALERT"."DB_KEY",
			"ALERT"."DB_KEY_DASH",
			"ALERT"."ALERT_ID",
			"ALERT"."ABN"																	AS "ABN",
			"ALERT"."GJAHR" 																AS "GJAHR", 
			TO_NVARCHAR("DATA"."FBT_YEAR")													AS "FBT_YEAR",
			SUM("TYP1_AGRGT_AMT")  AS "TYP1_AGRGT_AMT",
			SUM("TYP2_AGRGT_AMT")  AS "TYP2_AGRGT_AMT",
			SUM("AGRGT_NON_EXMT_AMT")  AS "AGRGT_NON_EXMT_AMT" ,
			SUM("FBTABLE_AMT") AS   "FBTABLE_AMT"  ,
			SUM("TAX_PYBL_AMT") AS "TAX_PYBL_AMT"   ,
			SUM("EMPLES_RCVG_FB_CNT")  AS "EMPLES_RCVG_FB_CNT"   ,
			SUM("ENTRMNT_TXBL_AMT")  AS "ENTRMNT_TXBL_AMT"   ,
			SUM("CAR_PARKG_VAL_OF_BNFTS_AMT")  AS "CAR_PARKG_VAL_OF_BNFTS_AMT"  ,
			SUM("MEAL_ENTRTNT_VAL_OF_BNFTS_AMT") AS "MEAL_ENTRTNT_VAL_OF_BNFTS_AMT" ,
			'AUD'																			AS "WAERS"	
		FROM		"osr.edw.platform.fra.prt.dt.abn::TF_ALERT_PT_ABN_FY"()					AS "ALERT"
		INNER JOIN	"osr.edw.staging.td.ato.proxy::TF_FBT_C"()								AS "DATA"					
		ON  		"ALERT"."ABN" = "DATA"."ABN"
		--AND 		TO_NVARCHAR("DATA"."FBT_YEAR") = TO_NVARCHAR(TO_INT("ALERT"."GJAHR"))
		GROUP BY 
			"ALERT"."DB_KEY",
			"ALERT"."DB_KEY_DASH",
			"ALERT"."ALERT_ID",
			"ALERT"."ABN",
			"ALERT"."GJAHR",
			"DATA"."FBT_YEAR"
		ORDER BY "ALERT"."ABN" ASC ,"DATA"."FBT_YEAR" ASC
		;
		
	ELSE
	
	RETURN
			SELECT 
			"ALERT"."DB_KEY",
			"ALERT"."DB_KEY_DASH",
			"ALERT"."ALERT_ID",
			"ALERT"."ABN"																	AS "ABN",
			"ALERT"."GJAHR" 																AS "GJAHR", 
			TO_NVARCHAR("DATA"."FBT_YEAR")													AS "FBT_YEAR",
			SUM("TYP1_AGRGT_AMT")  AS "TYP1_AGRGT_AMT",
			SUM("TYP2_AGRGT_AMT")  AS "TYP2_AGRGT_AMT",
			SUM("AGRGT_NON_EXMT_AMT")  AS "AGRGT_NON_EXMT_AMT" ,
			SUM("FBTABLE_AMT") AS   "FBTABLE_AMT"  ,
			SUM("TAX_PYBL_AMT") AS "TAX_PYBL_AMT"   ,
			SUM("EMPLES_RCVG_FB_CNT")  AS "EMPLES_RCVG_FB_CNT"   ,
			SUM("ENTRMNT_TXBL_AMT")  AS "ENTRMNT_TXBL_AMT"   ,
			SUM("CAR_PARKG_VAL_OF_BNFTS_AMT")  AS "CAR_PARKG_VAL_OF_BNFTS_AMT"  ,
			SUM("MEAL_ENTRTNT_VAL_OF_BNFTS_AMT") AS "MEAL_ENTRTNT_VAL_OF_BNFTS_AMT" ,
			'AUD'																			AS "WAERS"	
		FROM		"osr.edw.platform.fra.prt.dt.abn::TF_ALERT_PT_ABN_FY"()					AS "ALERT"
		INNER JOIN	"osr.edw.staging.td.ato.proxy::TF_FBT_C"()								AS "DATA"					
		ON  		"ALERT"."ABN" = "DATA"."ABN"
		WHERE "ALERT"."ALERT_ID" = :IP_ALERT_ID
		--AND 		TO_NVARCHAR("DATA"."FBT_YEAR") = TO_NVARCHAR(TO_INT("ALERT"."GJAHR"))
		GROUP BY 
			"ALERT"."DB_KEY",
			"ALERT"."DB_KEY_DASH",
			"ALERT"."ALERT_ID",
			"ALERT"."ABN",
			"ALERT"."GJAHR",
			"DATA"."FBT_YEAR"
		ORDER BY "ALERT"."ABN" ASC ,"DATA"."FBT_YEAR" ASC
		;

		END IF;
*/
IF :IP_ALERT_ID IS NULL OR :IP_ALERT_ID = '?' OR :IP_ALERT_ID = 'NULL' OR :IP_ALERT_ID = '' THEN

ALERT_INFO =
                SELECT
                    "DB_KEY",
                    "DB_KEY_DASH",
                    "ALERT_ID",
                    "ABN" ,
                    "GJAHR"
                FROM 
                "osr.edw.platform.fra.prt.dt.abn::TF_ALERT_PT_ABN_FY"()
;

ELSE

ALERT_INFO =
                SELECT
                                "DB_KEY",
                                "DB_KEY_DASH",
                                "ALERT_ID",
                                "ABN" ,
                                "GJAHR"
                FROM 
                                "osr.edw.platform.fra.prt.dt.abn::TF_ALERT_PT_ABN_FY"()
                WHERE 
                                "ALERT_ID" = :IP_ALERT_ID
;

END IF;


FISCAL_YR =
SELECT DISTINCT
	"FISCAL_YEAR"
FROM "osr.hana.platform.synonym::_SYS_BI.M_FISCAL_CALENDAR"
WHERE 
TO_NVARCHAR("FISCAL_YEAR") 
BETWEEN 
	(SELECT DISTINCT MIN("GJAHR") - 8 FROM :ALERT_INFO ) 
AND 
	(SELECT DISTINCT MAX("GJAHR")  FROM :ALERT_INFO)
;

ALERT_INFO_FY =
SELECT * FROM 
	(
	SELECT DISTINCT
			"ALERT"."DB_KEY",
			"ALERT"."DB_KEY_DASH",
			"ALERT"."ALERT_ID",
			"ALERT"."ABN",
			"ALERT"."GJAHR", 
			"YR"."FISCAL_YEAR"
FROM	:ALERT_INFO	AS "ALERT"	,
	(
	SELECT DISTINCT
		"FISCAL_YEAR"
	FROM :FISCAL_YR
	) AS "YR"
	) 
WHERE "FISCAL_YEAR" BETWEEN "GJAHR" - 7 and "GJAHR"

;

FBT_DATA = 
SELECT 
	"FBT"."ABN",
	TO_NVARCHAR("FBT"."FBT_YEAR")													AS "FBT_YEAR",
	SUM("TYP1_AGRGT_AMT")  AS "TYP1_AGRGT_AMT",
	SUM("TYP2_AGRGT_AMT")  AS "TYP2_AGRGT_AMT",
	SUM("AGRGT_NON_EXMT_AMT")  AS "AGRGT_NON_EXMT_AMT" ,
	SUM("FBTABLE_AMT") AS   "FBTABLE_AMT"  ,
	SUM("TAX_PYBL_AMT") AS "TAX_PYBL_AMT"   ,
	SUM("EMPLES_RCVG_FB_CNT")  AS "EMPLES_RCVG_FB_CNT"   ,
	SUM("ENTRMNT_TXBL_AMT")  AS "ENTRMNT_TXBL_AMT"   ,
	SUM("CAR_PARKG_VAL_OF_BNFTS_AMT")  AS "CAR_PARKG_VAL_OF_BNFTS_AMT"  ,
	SUM("MEAL_ENTRTNT_VAL_OF_BNFTS_AMT") AS "MEAL_ENTRTNT_VAL_OF_BNFTS_AMT" ,
	'AUD'																			AS "WAERS"
FROM "osr.edw.staging.td.ato.proxy::TF_FBT_C"() AS "FBT"
WHERE EXISTS
(
	SELECT * FROM :ALERT_INFO_FY AS "ALERT_FY"
	WHERE "FBT"."ABN" = "ALERT_FY"."ABN"
	AND   TO_NVARCHAR("FBT"."FBT_YEAR") = "ALERT_FY"."FISCAL_YEAR"
)
GROUP BY 
	"FBT"."ABN",
	"FBT"."FBT_YEAR"
;

RETURN 
SELECT
	"DB_KEY",
	"DB_KEY_DASH",
	"ALERT_ID",
	"ABN" AS "ABN",
	"GJAHR",
	TO_NVARCHAR("FBT_YEAR") AS "FBT_YEAR",
	CASE WHEN TO_NVARCHAR("TYP1_AGRGT_AMT")       IS NULL THEN '-' ELSE  CONCAT("TYP1_AGRGT_AMT", CONCAT(' ', "WAERS"))       END AS  "TYP1_AGRGT_AMT",
	CASE WHEN TO_NVARCHAR("TYP2_AGRGT_AMT")       IS NULL THEN '-' ELSE  CONCAT("TYP2_AGRGT_AMT", CONCAT(' ',"WAERS"))        END AS  "TYP2_AGRGT_AMT",
	CASE WHEN TO_NVARCHAR("AGRGT_NON_EXMT_AMT")   IS NULL THEN '-' ELSE  CONCAT("AGRGT_NON_EXMT_AMT", CONCAT(' ',"WAERS"))    END AS  "AGRGT_NON_EXMT_AMT",
	CASE WHEN TO_NVARCHAR("FBTABLE_AMT")          IS NULL THEN '-' ELSE  CONCAT("FBTABLE_AMT", CONCAT(' ',"WAERS"))           END AS  "FBTABLE_AMT",
	CASE WHEN TO_NVARCHAR("TAX_PYBL_AMT")         IS NULL THEN '-' ELSE  CONCAT("TAX_PYBL_AMT", CONCAT(' ',"WAERS"))          END AS  "TAX_PYBL_AMT",
	CASE WHEN TO_NVARCHAR("EMPLES_RCVG_FB_CNT")   IS NULL THEN '-' ELSE   "EMPLES_RCVG_FB_CNT"    							  END AS  "EMPLES_RCVG_FB_CNT",
	CASE WHEN TO_NVARCHAR("ENTRMNT_TXBL_AMT")     IS NULL THEN '-' ELSE  CONCAT("ENTRMNT_TXBL_AMT", CONCAT(' ',"WAERS"))      END AS  "ENTRMNT_TXBL_AMT",
	CASE WHEN TO_NVARCHAR("CAR_PARKG_VAL_OF_BNFTS_AMT")     IS NULL THEN '-' ELSE  CONCAT("CAR_PARKG_VAL_OF_BNFTS_AMT", CONCAT(' ',"WAERS"))     END AS  "CAR_PARKG_VAL_OF_BNFTS_AMT",
	CASE WHEN TO_NVARCHAR("MEAL_ENTRTNT_VAL_OF_BNFTS_AMT")  IS NULL THEN '-' ELSE  CONCAT("MEAL_ENTRTNT_VAL_OF_BNFTS_AMT", CONCAT(' ',"WAERS"))  END AS  "MEAL_ENTRTNT_VAL_OF_BNFTS_AMT",
	'AUD' AS "WAERS"	
FROM
	(

	SELECT 
		"ALERT"."DB_KEY",
		"ALERT"."DB_KEY_DASH",
		"ALERT"."ALERT_ID",
		"ALERT"."ABN" AS "ABN",
		TO_NVARCHAR("ALERT"."GJAHR")            					AS "GJAHR", 
		TO_NVARCHAR("ALERT"."FISCAL_YEAR")      					AS "FBT_YEAR",
		TO_NVARCHAR("DATA"."TYP1_AGRGT_AMT")        				AS "TYP1_AGRGT_AMT",
		TO_NVARCHAR("DATA"."TYP2_AGRGT_AMT")        				AS "TYP2_AGRGT_AMT",
		TO_NVARCHAR("DATA"."AGRGT_NON_EXMT_AMT")					AS "AGRGT_NON_EXMT_AMT",
		TO_NVARCHAR("DATA"."FBTABLE_AMT")   						AS "FBTABLE_AMT",
		TO_NVARCHAR("DATA"."TAX_PYBL_AMT")							AS "TAX_PYBL_AMT",
		TO_NVARCHAR("DATA"."EMPLES_RCVG_FB_CNT")        			AS "EMPLES_RCVG_FB_CNT",
		TO_NVARCHAR("DATA"."ENTRMNT_TXBL_AMT")  					AS "ENTRMNT_TXBL_AMT",
		TO_NVARCHAR("DATA"."CAR_PARKG_VAL_OF_BNFTS_AMT")			AS "CAR_PARKG_VAL_OF_BNFTS_AMT",
		TO_NVARCHAR("DATA"."MEAL_ENTRTNT_VAL_OF_BNFTS_AMT")         AS "MEAL_ENTRTNT_VAL_OF_BNFTS_AMT",
		'AUD' AS "WAERS"
	FROM 
		:ALERT_INFO_FY  AS "ALERT"
	LEFT OUTER JOIN
		:FBT_DATA		AS "DATA"
	ON
		"ALERT"."ABN"         = "DATA"."ABN"
	AND "ALERT"."FISCAL_YEAR" = "DATA"."FBT_YEAR"
)
ORDER BY "ALERT_ID","FBT_YEAR" ASC
;


END;