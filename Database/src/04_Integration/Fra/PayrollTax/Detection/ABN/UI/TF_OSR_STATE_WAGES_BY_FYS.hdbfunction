FUNCTION "osr.edw.platform.fra.prt.dt.abn.ui::TF_OSR_STATE_WAGES_BY_FYS"(IN IP_ALERT_ID NVARCHAR(20), IN IP_STATE_CODE NVARCHAR(3) )
RETURNS TABLE
(
DB_KEY					VARBINARY(16),
DB_KEY_DASH				NVARCHAR(32),
ALERT_ID				NVARCHAR(20),
ABN						NVARCHAR(20),
GJAHR					NVARCHAR(4),
ROW_NAME				NVARCHAR(30),
ROW0_VALUE				NVARCHAR(200),
ROW1_VALUE				NVARCHAR(200),
ROW2_VALUE				NVARCHAR(200),
ROW3_VALUE				NVARCHAR(200),
ROW4_VALUE				NVARCHAR(200)
)
LANGUAGE SQLSCRIPT 
SQL SECURITY INVOKER AS 
BEGIN 




lt_wages = 
SELECT 
"DB_KEY",
"ALERT_ID",
"ABN",
"GJAHR",
"MEASURE_NAME",
sum("FY0_AMOUNT") AS "FY0_AMOUNT",
sum("FY1_AMOUNT") AS "FY1_AMOUNT",
sum("FY2_AMOUNT") AS "FY2_AMOUNT",
sum("FY3_AMOUNT") AS "FY3_AMOUNT",
sum("FY4_AMOUNT") AS "FY4_AMOUNT"
FROM (
SELECT 
"DB_KEY",
"ALERT_ID",
"ABN",
"GJAHR",
"MEASURE_NAME",
CASE WHEN "AMOUNT" IS NULL THEN 0 ELSE "AMOUNT" END AS "FY0_AMOUNT",
0 AS "FY1_AMOUNT",
0 AS "FY2_AMOUNT",
0 AS "FY3_AMOUNT",
0 AS "FY4_AMOUNT"
FROM "osr.edw.platform.fra.prt.dt.abn.ui::TF_OSR_STATE_WAGES_BY_FY"(:IP_ALERT_ID, 0, :IP_STATE_CODE)
UNION
SELECT 
"DB_KEY",
"ALERT_ID",
"ABN",
"GJAHR",
"MEASURE_NAME",
0 AS "FY0_AMOUNT",
CASE WHEN "AMOUNT" IS NULL THEN 0 ELSE "AMOUNT" END AS "FY1_AMOUNT",
0 AS "FY2_AMOUNT",
0 AS "FY3_AMOUNT",
0 AS "FY4_AMOUNT"
FROM "osr.edw.platform.fra.prt.dt.abn.ui::TF_OSR_STATE_WAGES_BY_FY"(:IP_ALERT_ID, 1, :IP_STATE_CODE)
UNION
SELECT 
"DB_KEY",
"ALERT_ID",
"ABN",
"GJAHR",
"MEASURE_NAME",
0 AS "FY0_AMOUNT",
0 AS "FY1_AMOUNT",
CASE WHEN "AMOUNT" IS NULL THEN 0 ELSE "AMOUNT" END AS "FY2_AMOUNT",
0 AS "FY3_AMOUNT",
0 AS "FY4_AMOUNT"
FROM "osr.edw.platform.fra.prt.dt.abn.ui::TF_OSR_STATE_WAGES_BY_FY"(:IP_ALERT_ID, 2, :IP_STATE_CODE)
UNION
SELECT 
"DB_KEY",
"ALERT_ID",
"ABN",
"GJAHR",
"MEASURE_NAME",
0 AS "FY0_AMOUNT",
0 AS "FY1_AMOUNT",
0 AS "FY2_AMOUNT",
CASE WHEN "AMOUNT" IS NULL THEN 0 ELSE "AMOUNT" END AS "FY3_AMOUNT",
0 AS "FY4_AMOUNT"
FROM "osr.edw.platform.fra.prt.dt.abn.ui::TF_OSR_STATE_WAGES_BY_FY"(:IP_ALERT_ID, 3, :IP_STATE_CODE)
UNION
SELECT 
"DB_KEY",
"ALERT_ID",
"ABN",
"GJAHR",
"MEASURE_NAME",
0 AS "FY0_AMOUNT",
0 AS "FY1_AMOUNT",
0 AS "FY2_AMOUNT",
0 AS "FY3_AMOUNT",
CASE WHEN "AMOUNT" IS NULL THEN 0 ELSE "AMOUNT" END  AS "FY4_AMOUNT"
FROM "osr.edw.platform.fra.prt.dt.abn.ui::TF_OSR_STATE_WAGES_BY_FY"(:IP_ALERT_ID, 4, :IP_STATE_CODE)
)
GROUP BY 
"DB_KEY",
"ALERT_ID",
"ABN",
"GJAHR",
"MEASURE_NAME"
;

RETURN
SELECT 
"DB_KEY",
REPLACE_REGEXPR('(.{8})(.{4})(.{4})(.{4})(.*)' IN "DB_KEY" with '\1-\2-\3-\4-\5') AS "DB_KEY_DASH",
"ALERT_ID",
"ABN",
"GJAHR",
"ROW_NAME",
CASE WHEN "ROW0_VALUE" IS NULL THEN '0' ELSE "ROW0_VALUE" END 
AS "ROW0_VALUE",
CASE WHEN "ROW1_VALUE" IS NULL THEN '0' ELSE "ROW1_VALUE" END 
AS "ROW1_VALUE",
CASE WHEN "ROW2_VALUE" IS NULL THEN '0' ELSE "ROW2_VALUE" END 
AS "ROW2_VALUE",
CASE WHEN "ROW3_VALUE" IS NULL THEN '0' ELSE "ROW3_VALUE" END 
AS "ROW3_VALUE",
CASE WHEN "ROW4_VALUE" IS NULL THEN '0' ELSE "ROW4_VALUE" END 
AS "ROW4_VALUE"
FROM 
(	
SELECT 
"DB_KEY",
"ALERT_ID",
"ABN",
"GJAHR",
"MEASURE_NAME" AS "ROW_NAME",
sum("FY0_AMOUNT") AS "ROW0_VALUE",
sum("FY1_AMOUNT") AS "ROW1_VALUE",
sum("FY2_AMOUNT") AS "ROW2_VALUE",
sum("FY3_AMOUNT") AS "ROW3_VALUE",
sum("FY4_AMOUNT") AS "ROW4_VALUE"
FROM 
:lt_wages
GROUP BY 
"DB_KEY",
"ALERT_ID",
"ABN",
"GJAHR",
"MEASURE_NAME"
)
;
END;