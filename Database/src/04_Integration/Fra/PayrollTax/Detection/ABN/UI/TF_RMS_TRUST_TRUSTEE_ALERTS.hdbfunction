FUNCTION "osr.edw.platform.fra.prt.dt.abn.ui::TF_RMS_TRUST_TRUSTEE_ALERTS"(IN IP_ALERT_ID NVARCHAR(20) )
    RETURNS TABLE
		(
			DB_KEY                  		VARBINARY(16)	,
			DB_KEY_DASH						NVARCHAR(36)	,
			ALERT_ID                		NVARCHAR(20)	,
			ABN                     		NVARCHAR(20)	,
			GJAHR                   		NVARCHAR(4)		,
			"ALERT_BP"						NVARCHAR(10)	,
			"TRUST_PARTNER" 				NVARCHAR(10)	,
			"TRUST_DESC"					NVARCHAR(200)	,
			"TYPE"							NVARCHAR(100)	,
			"TRUSTEE_PARTNER"				NVARCHAR(10)	,
			"TRUSTEE_DESC"					NVARCHAR(200)	,
			"PRT_REG_PARTNER"               NVARCHAR(10)    ,
			"PRT_LIAB_DATE"					NVARCHAR(8)		,
			"QLD_LIAB_DATE"					NVARCHAR(8)		,
			"PRT_GRP_STATUS"				NVARCHAR(10)	,
			"VALID_FROM"					NVARCHAR(8)		,
			"VALID_TO"						NVARCHAR(8)		,
			"PT_REG_FLAG"                   NVARCHAR(1)		,
			"C_TOT_QLD_TXBLE_WAGES"         DECIMAL(17,2)	,
			"C_TOT_QLD_NON_TAX_WAGE"		DECIMAL(17,2)	, 
			"A_TOT_INT_WAGE"				DECIMAL(17,2)	,
			"A_TOT_QLD_GM"                  DECIMAL(17,2)	,
			"A_TOT_INT_GM"                  DECIMAL(17,2)	,
			"C_TOT_GRP_AUST_WAGES"			DECIMAL(17,2)

		)	
       LANGUAGE SQLSCRIPT 
       SQL SECURITY INVOKER AS 
BEGIN 
    /*****************************
        Write your function logic
    ****************************/
    
    
IF :IP_ALERT_ID IS NULL OR :IP_ALERT_ID = '?' OR :IP_ALERT_ID = 'NULL' OR :IP_ALERT_ID = '' THEN

ALERT_INFO =
                SELECT
                    "DB_KEY",
                    "DB_KEY_DASH",
                    "ALERT_ID",
                    "ABN" ,
                    "GJAHR",
                    "BPARTNER"
                FROM "osr.edw.platform.fra.prt.dt.abn::TF_ALERT_PT_ABN_FY"()

;

ELSE

ALERT_INFO =
                SELECT
                    "DB_KEY",
                    "DB_KEY_DASH",
                    "ALERT_ID",
                    "ABN" ,
                    "GJAHR",
                    "BPARTNER"
                FROM  "osr.edw.platform.fra.prt.dt.abn::TF_ALERT_PT_ABN_FY"()
                WHERE "ALERT_ID" = :IP_ALERT_ID
;

END IF;   

ALERT_BP =
	SELECT DISTINCT 
        "ABN",
        "BPARTNER" AS "PARTNER"
    FROM 
		:ALERT_INFO
    WHERE 
    	"BPARTNER" <> ''	
;

TRUST_TRUSTEE_REL =
SELECT DISTINCT
   "ABN",
   "ALERT_BP",
   "TRUST_PARTNER",
   "TYPE",
   "TRUSTEE_PARTNER"
FROM
(
 SELECT  
   "A"."ABN",
   "A"."PARTNER" AS "ALERT_BP",
   "B"."PARTNER1" AS "TRUST_PARTNER",
   'Has Trustees' AS "TYPE",
   "B"."PARTNER2" AS "TRUSTEE_PARTNER"
FROM   
	:ALERT_BP AS "A"
INNER JOIN
	"osr.edw.staging.md.rms.synonym::CDS_BP.DSO.BUT050.active_data" AS "B"
ON
	"A"."PARTNER" =  "B"."PARTNER2"
WHERE 
	"B"."RELTYP"= 'ZTRU'
	
UNION

 SELECT  
  "A"."ABN",
  "A"."PARTNER"  AS "ALERT_BP",
  "B"."PARTNER1" AS "TRUST_PARTNER",
  'Has Trustees' AS "TYPE",
  "B"."PARTNER2" AS "TRUSTEE_PARTNER"
FROM   
	:ALERT_BP AS "A"
   INNER JOIN
	"osr.edw.staging.md.rms.synonym::CDS_BP.DSO.BUT050.active_data" AS "B"
ON
	 "A"."PARTNER" =  "B"."PARTNER1"
WHERE 
	"B"."RELTYP"= 'ZTRU'
)	
;	


PRT_BP =

	SELECT 
		"PSOBKEY" AS "OBJID", 
		"PARTNER" AS "PARTNER"
	FROM "osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DPSOBBPACC.active_data" 
	WHERE 
		"PARTNERACCTYP" = 'PT' 
	AND "XOBSL" <> 'X'
	AND "PARTNER" IN
					(
					SELECT PARTNER FROM
						(
							SELECT DISTINCT "TRUST_PARTNER"   AS "PARTNER" FROM :TRUST_TRUSTEE_REL WHERE "TRUST_PARTNER"   NOT IN ( SELECT "PARTNER" FROM :ALERT_BP)
							UNION
							SELECT DISTINCT "TRUSTEE_PARTNER" AS "PARTNER" FROM :TRUST_TRUSTEE_REL WHERE "TRUSTEE_PARTNER" NOT IN ( SELECT "PARTNER" FROM :ALERT_BP)
						)	
					)

;

PRT_DATA =
SELECT DISTINCT
"OBJID",
"PARTNER",
"FACT_CAT_SEQ_21" AS  "PRT_LIAB_DATE",
"FACT_CAT_SEQ_20" AS  "QLD_LIAB_DATE",
"FACT_CAT_SEQ_11" AS  "PRT_GRP_STATUS",
CASE WHEN "VALID_FROM" < '19000101' THEN TO_DATS('19000101') ELSE TO_DATS(LEFT("VALID_FROM",8)) END AS "VALID_FROM" ,
TO_DATS(LEFT("VALID_TO",8)) AS "VALID_TO"
FROM
(
SELECT 
"A"."OBJID",
"A"."PARTNER",
"A"."VALID_FROM",
"A"."VALID_TO",
"B"."VALUE_GENERIC" AS "FACT_CAT_SEQ_21",
"C"."VALUE_GENERIC" AS "FACT_CAT_SEQ_20", 
"D"."VALUE_GENERIC" AS "FACT_CAT_SEQ_11"
FROM
	(
	SELECT * FROM
	(
	SELECT
		"OBJID",
		"PARTNER",
		"VALID_FROM",
		"VALID_TO",
		RANK() OVER (PARTITION BY "OBJID" ORDER BY   "OBJID", "VALID_FROM" DESC , "VALID_TO" DESC) AS "RANK_1"
	FROM
		(
		SELECT 
			"A"."OBJID",
			"A"."PARTNER",
			TO_NVARCHAR(LEFT("E"."VALID_FROM",8)) AS "VALID_FROM",
			TO_NVARCHAR(LEFT("E"."VALID_TO",8)) AS "VALID_TO"
		FROM

			:PRT_BP   AS "A"  

		INNER JOIN
			"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "E" ON
			"A"."OBJID" = "E"."OBJID"
		WHERE 
				"E"."FACT_TYPE" = 'ZPRE'
		AND 	"E"."FACT_CAT_SEQ" = '11'
		)
	)
	WHERE RANK_1 = 1
	) AS "A"

INNER JOIN
"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "B" ON
"A"."OBJID" = "B"."OBJID"
AND "A"."VALID_FROM" = TO_NVARCHAR(LEFT("B"."VALID_FROM",8))
AND "A"."VALID_TO" = TO_NVARCHAR(LEFT("B"."VALID_TO",8))

INNER JOIN
"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "C" ON
"A"."OBJID" = "C"."OBJID"
AND "A"."VALID_FROM" = TO_NVARCHAR(LEFT("C"."VALID_FROM",8))
AND "A"."VALID_TO" = TO_NVARCHAR(LEFT("C"."VALID_TO",8))

INNER JOIN
"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "D" ON
"A"."OBJID" = "D"."OBJID"
AND "A"."VALID_FROM" = TO_NVARCHAR(LEFT("D"."VALID_FROM",8))
AND "A"."VALID_TO" = TO_NVARCHAR(LEFT("D"."VALID_TO",8))

WHERE 

	"B"."FACT_TYPE" = 'ZPRE'
AND "B"."FACT_CAT_SEQ" = '21'

AND "C"."FACT_TYPE" = 'ZPRE'
AND "C"."FACT_CAT_SEQ" = '20'

AND "D"."FACT_TYPE" = 'ZPRE'
AND "D"."FACT_CAT_SEQ" = '11'

)
;

PRT_INFO_JOIN =
SELECT DISTINCT 
	"ABN",
	"ALERT_BP",
	"TRUST_PARTNER",
	"TYPE",
	"TRUSTEE_PARTNER",
	"PRT_REG_PARTNER",
	"PRT_LIAB_DATE"  ,
	"QLD_LIAB_DATE"  ,
	"PRT_GRP_STATUS" ,
	"VALID_FROM"    , 	
	"VALID_TO"      
	FROM
(
SELECT DISTINCT
	"A"."ABN",
	"A"."ALERT_BP",
	"A"."TRUST_PARTNER",
	'Trust' AS "TYPE",
	"A"."TRUSTEE_PARTNER",
	"B"."PARTNER" AS "PRT_REG_PARTNER",
	"B"."PRT_LIAB_DATE"  ,
	"B"."QLD_LIAB_DATE"  ,
	"B"."PRT_GRP_STATUS" ,
	"B"."VALID_FROM"    , 	
	"B"."VALID_TO"      
FROM

	:TRUST_TRUSTEE_REL AS "A"
INNER JOIN
	:PRT_DATA  AS "B"
ON 
	"A"."TRUST_PARTNER"  = "B"."PARTNER"
	
UNION

SELECT DISTINCT
	"A"."ABN",
	"A"."ALERT_BP",
	"A"."TRUST_PARTNER",
	'Trustee' AS "TYPE",
	"A"."TRUSTEE_PARTNER",
	"B"."PARTNER" AS "PRT_REG_PARTNER",
	"B"."PRT_LIAB_DATE"  ,
	"B"."QLD_LIAB_DATE"  ,
	"B"."PRT_GRP_STATUS" ,
	"B"."VALID_FROM"    , 	
	"B"."VALID_TO"      
FROM

	:TRUST_TRUSTEE_REL AS "A"
INNER JOIN
	:PRT_DATA  AS "B"
ON 
	"A"."TRUSTEE_PARTNER"  = "B"."PARTNER"

)

;

ALERT_JOIN =
SELECT    
    "A"."DB_KEY",
    "A"."DB_KEY_DASH",
    "A"."ALERT_ID",
    "A"."ABN" ,
    "A"."GJAHR",
	"B"."ALERT_BP",
	"B"."TRUST_PARTNER",
	"B"."TRUSTEE_PARTNER",
	"B"."TYPE",
	"B"."PRT_REG_PARTNER",
	"B"."PRT_LIAB_DATE"  ,
	"B"."QLD_LIAB_DATE"  ,
	"B"."PRT_GRP_STATUS" ,
	"B"."VALID_FROM"    , 	
	"B"."VALID_TO"    
FROM
	:ALERT_INFO  AS "A"
INNER JOIN
	:PRT_INFO_JOIN AS "B"
ON
	"A"."ABN" = "B"."ABN"	
;

BP_NAME=
SELECT DISTINCT
	"PARTNER",
	"TYPE",
	"MC_NAME1",
	"MC_NAME2",
	TRIM("MC_NAME1" || CHAR(32) || TRIM("MC_NAME2")) AS "BP_DESC"
FROM "osr.edw.staging.rms.synonym::CV_BUT000_Current" 
WHERE 	"PARTNER" IN (
	
	SELECT PARTNER FROM
	(
		
							SELECT DISTINCT "TRUST_PARTNER"   AS "PARTNER" FROM :ALERT_JOIN
							UNION
							SELECT DISTINCT "TRUSTEE_PARTNER" AS "PARTNER" FROM :ALERT_JOIN

	)
	
	
)
;


PRT_RETURN_DATA =
SELECT
	"ALERT_ID", 
	"GJAHR", 
	"PRT_REG_PARTNER",
	SUM("C_TOT_QLD_TXBLE_WAGES")    AS "C_TOT_QLD_TXBLE_WAGES",
	SUM("C_TOT_QLD_NON_TAX_WAGE")	AS "C_TOT_QLD_NON_TAX_WAGE", 
	SUM("A_TOT_INT_WAGE")			AS "A_TOT_INT_WAGE",	
	SUM("A_TOT_QLD_GM")             AS "A_TOT_QLD_GM",
	SUM("A_TOT_INT_GM")             AS "A_TOT_INT_GM",
	SUM("C_TOT_GRP_AUST_WAGES")     AS "C_TOT_GRP_AUST_WAGES"
FROM
(
SELECT
	"ALERT"."DB_KEY"				AS "DB_KEY",
	"ALERT"."ALERT_ID"				AS "ALERT_ID",	
	"ALERT"."ABN"					AS "ABN",
	"ALERT"."GJAHR" 				AS "GJAHR",
	"ALERT"."PRT_REG_PARTNER"       AS "PRT_REG_PARTNER",
	"DFMCA_RETURN"."TAXPAYER"       AS "FB_BPARTNER",
	"DFMCA_RETURN"."FBNUM"     	    AS "FBNUM",
	"0IDP"."C_START_DATE"			AS "C_START_DATE",
	"0IDP"."C_END_DATE"			    AS "C_END_DATE",
	"3PYA"."C_TOT_QLD_TXBLE_WAGES"	AS "C_TOT_QLD_TXBLE_WAGES",	
	"3PYA"."C_TOT_QLD_NON_TAX_WAGE"	AS "C_TOT_QLD_NON_TAX_WAGE",
	"3PYA"."A_TOT_INT_WAGE"			AS "A_TOT_INT_WAGE",	
	"3PYA"."A_TOT_QLD_GM"           AS "A_TOT_QLD_GM",
	"3PYA"."A_TOT_INT_GM"           AS "A_TOT_INT_GM",
	"3PYA"."C_TOT_GRP_AUST_WAGES"   AS "C_TOT_GRP_AUST_WAGES",
	'AUD' 						AS "WAERS"
FROM 
"osr.edw.staging.td.rms.synonym::CDS_PSCD.DSO.DFMCA_RETURN.active_data" AS "DFMCA_RETURN"
INNER JOIN
"osr.edw.staging.rms.forms.tf.proxy::TF_FORM_0IDP_M_LV"() AS "0IDP"
ON "DFMCA_RETURN"."CASE_GUID" = "0IDP"."RETURN_ID"
INNER JOIN
"osr.edw.staging.rms.forms.tf.proxy::TF_FORM_3PYA_M_LV"() AS "3PYA"
ON "DFMCA_RETURN"."CASE_GUID" = "3PYA"."RETURN_ID"
INNER JOIN
(SELECT DISTINCT "DB_KEY","ALERT_ID","ABN","GJAHR","PRT_REG_PARTNER" FROM :ALERT_JOIN) AS "ALERT"
ON "DFMCA_RETURN"."TAXPAYER" = "ALERT"."PRT_REG_PARTNER"
AND "APPLY_FROM" <= TO_NVARCHAR(CONCAT("ALERT"."GJAHR",'0630'))
AND "APPLY_TO"   >= TO_NVARCHAR(CONCAT((TO_INT("ALERT"."GJAHR") - 1),'0701'))
WHERE "DFMCA_RETURN"."REVENUE_TYPE" = 'PT'
  AND "DFMCA_RETURN"."FBSTA" = 'IP014'
  AND "DFMCA_RETURN"."FBTYP" IN ( 'ZPA2')
)
GROUP  BY  "ALERT_ID", "GJAHR", "PRT_REG_PARTNER"
;


JOIN_OUTPUT =

SELECT
    "A"."DB_KEY",
    "A"."DB_KEY_DASH",
    "A"."ALERT_ID",
    "A"."ABN" ,
    "A"."GJAHR",
    "A"."ALERT_BP",
	"A"."TRUST_PARTNER",
	"B"."BP_DESC" AS "TRUST_DESC",
	"A"."TRUSTEE_PARTNER",
	"C"."BP_DESC" AS "TRUSTEE_DESC",
	"A"."TYPE",
	"A"."PRT_REG_PARTNER",
	"A"."PRT_LIAB_DATE",
	"A"."QLD_LIAB_DATE",
	"A"."PRT_GRP_STATUS",
	"A"."VALID_FROM" ,
	"A"."VALID_TO",
	"D"."C_TOT_QLD_TXBLE_WAGES",
	"D"."C_TOT_QLD_NON_TAX_WAGE", 
	"D"."A_TOT_INT_WAGE",	
	"D"."A_TOT_QLD_GM",
	"D"."A_TOT_INT_GM",
	"D"."C_TOT_GRP_AUST_WAGES",
	CASE WHEN TO_NVARCHAR(CONCAT(TO_NVARCHAR(TO_INT("A"."GJAHR")-1),'0701')) < TO_NVARCHAR("A"."VALID_TO")  AND "A"."PRT_LIAB_DATE" > '19000000' AND TO_NVARCHAR(CONCAT(TO_NVARCHAR(TO_INT("A"."GJAHR")),'0630')) > TO_NVARCHAR("A"."PRT_LIAB_DATE") THEN 'X' ELSE 
	CASE WHEN TO_NVARCHAR(CONCAT(TO_NVARCHAR(TO_INT("A"."GJAHR")-1),'0701')) < TO_NVARCHAR("A"."VALID_TO")  AND  TO_NVARCHAR(CONCAT(TO_NVARCHAR(TO_INT("A"."GJAHR")),'0630')) > TO_NVARCHAR("A"."VALID_FROM") THEN 'X' ELSE '' END END AS "PT_REG_FLAG"

FROM	
	:ALERT_JOIN AS "A"
	
LEFT OUTER JOIN
	:BP_NAME AS "B"
ON
	"A"."TRUST_PARTNER" = "B"."PARTNER"
	
LEFT OUTER JOIN
	:BP_NAME AS "C"
ON
	"A"."TRUSTEE_PARTNER" = "C"."PARTNER"
	
LEFT OUTER JOIN
	:PRT_RETURN_DATA AS "D"
ON
	 "A"."PRT_REG_PARTNER" = "D"."PRT_REG_PARTNER"
AND  "A"."GJAHR"	 = "D"."GJAHR"
AND  "A"."ALERT_ID" = "D"."ALERT_ID"
;

RETURN
SELECT
	"DB_KEY",
    "DB_KEY_DASH",
    "ALERT_ID",
    "ABN" ,
    "GJAHR",
    "ALERT_BP",
	"TRUST_PARTNER",
	"TRUST_DESC",
	"TYPE",
	"TRUSTEE_PARTNER",
	"TRUSTEE_DESC",
	"PRT_REG_PARTNER",
	"PRT_LIAB_DATE",
	"QLD_LIAB_DATE",
	"PRT_GRP_STATUS",
	"VALID_FROM" ,
	"VALID_TO",
	"PT_REG_FLAG",
	"C_TOT_QLD_TXBLE_WAGES",
	"C_TOT_QLD_NON_TAX_WAGE", 
	"A_TOT_INT_WAGE",	
	"A_TOT_QLD_GM",
	"A_TOT_INT_GM",
	"C_TOT_GRP_AUST_WAGES"

FROM	:JOIN_OUTPUT 
;










END;