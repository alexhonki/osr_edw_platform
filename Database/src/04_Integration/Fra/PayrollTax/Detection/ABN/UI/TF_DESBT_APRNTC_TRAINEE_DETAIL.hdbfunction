FUNCTION "osr.edw.platform.fra.prt.dt.abn.ui::TF_DESBT_APRNTC_TRAINEE_DETAIL"(IN IP_ALERT_ID NVARCHAR(20))
      RETURNS TABLE
		(
			DB_KEY                    VARBINARY(16),
			DB_KEY_DASH				  NVARCHAR(32),
			ALERT_ID                  NVARCHAR(20),
			ABN                       NVARCHAR(20),
			GJAHR                     NVARCHAR(4),
			TRAINEE_ID                NVARCHAR(10), 
			TRAINING_AGREEMENT_TYPE   NVARCHAR(1), 
			STATUS_DESC               NVARCHAR(30), 
--			COMMENCEMENT_DATE         NVARCHAR(8), 
--			TERMINATION_DATE          NVARCHAR(8), 
			COMMYEAR                  NVARCHAR(4),
			COMMENCEMENT_DATE         DAYDATE, 
			TERMINATION_DATE          DAYDATE, 
			CONTRACT_MODE             NVARCHAR(12), 
			OCCUPATION_NAME           NVARCHAR(100), 
--			NOMINAL_COMPLETION_DATE   NVARCHAR(8), 
--			DATE_OF_BIRTH             NVARCHAR(8), 
			NOMINAL_COMPLETION_DATE   DAYDATE, 
			DATE_OF_BIRTH             DAYDATE, 
			GIVEN_NAME                NVARCHAR(30), 
			MIDDLE_NAME               NVARCHAR(30), 
			SURNAME                   NVARCHAR(30),
			QUALIFICATION_LEVEL		  NVARCHAR(60),
			QUALIFICATION_TITLE		  NVARCHAR(100)	,
			COMMENCEMENT_STATUS		  NVARCHAR(2)	,
			COMMENCEMENT_STATUS_DESC  NVARCHAR(60),
			SRTO_NAME				  NVARCHAR(200)	,
			REG_NUMBER				  NVARCHAR(30)	

		)


       LANGUAGE SQLSCRIPT 
       SQL SECURITY INVOKER AS 
BEGIN 


IF :IP_ALERT_ID IS NULL OR :IP_ALERT_ID = '?' OR :IP_ALERT_ID = 'NULL' OR :IP_ALERT_ID = '' THEN

ALERT_INFO =
                SELECT
                    "DB_KEY",
                    "ALERT_ID",
                    "ABN" ,
                    "GJAHR"
                FROM "osr.edw.platform.fra.prt.dt.abn::TF_ALERT_PT_ABN_FY"()
;

ELSE

ALERT_INFO =
                SELECT
                    "DB_KEY",
                    "ALERT_ID",
                    "ABN" ,
                    "GJAHR"
                FROM  "osr.edw.platform.fra.prt.dt.abn::TF_ALERT_PT_ABN_FY"()
                WHERE "ALERT_ID" = :IP_ALERT_ID
;

END IF;


DESBT_DATA =


				SELECT DISTINCT 
            		"ABN" , 
                	"TRAINEE_ID", 
            		"TRAINING_AGREEMENT_TYPE", 
                	"STATUS_DESC", 
                	TO_NVARCHAR("COMMYEAR") AS "COMMYEAR",
                	TO_DATS("COMMENCEMENT_DATE")		AS "COMMENCEMENT_DATE", 
                	TO_DATS("TERMINATION_DATE") 		AS "TERMINATION_DATE", 
                	"CONTRACT_MODE", 
                	"OCCUPATION_NAME", 
                	TO_DATS("NOMINAL_COMPLETION_DATE")	AS "NOMINAL_COMPLETION_DATE", 
                	TO_DATS("DATE_OF_BIRTH")			AS "DATE_OF_BIRTH", 
                	"GIVEN_NAME", 
                	"MIDDLE_NAME", 
                	"SURNAME",
                	"QUALIFICATION_LEVEL",
					"QUALIFICATION_TITLE",
					TO_NVARCHAR("COMMENCEMENT_STATUS") as "COMMENCEMENT_STATUS",
					CASE WHEN "COMMENCEMENT_STATUS" = 1 then 'First Attend'   ELSE 
					CASE WHEN "COMMENCEMENT_STATUS" = 2 then 'Recommencement' ELSE TO_NVARCHAR("COMMENCEMENT_STATUS") END END AS  "COMMENCEMENT_STATUS_DESC",
					"SRTO_NAME",
                	TO_NVARCHAR("REG_NUMBER")   AS "REG_NUMBER"
				FROM "osr.edw.staging.md.desbt.synonym::CDS_ORG.DSO.TRAINING.active_data"
				WHERE	"TRAINING_AGREEMENT_TYPE"	IN ('A', 'T')
				AND 	"ABN"						IN (SELECT "ABN"     FROM :ALERT_INFO )


;


RETURN
				SELECT
                   "DB_KEY",
                   REPLACE_REGEXPR('(.{8})(.{4})(.{4})(.{4})(.*)' IN "DB_KEY" with '\1-\2-\3-\4-\5') AS "DB_KEY_DASH",                   
                   "ALERT_ID",
                   "ABN" ,
                   "GJAHR",
                   "TRAINEE_ID", 
                   "TRAINING_AGREEMENT_TYPE", 
                   "STATUS_DESC", 
   --              "COMMENCEMENT_DATE", 
   --              "TERMINATION_DATE", 
				   "COMMYEAR",
				   CASE WHEN "COMMENCEMENT_DATE" IS NOT NULL AND "COMMENCEMENT_DATE" <> '' THEN TO_DATE("COMMENCEMENT_DATE") ELSE NULL END AS "COMMENCEMENT_DATE",
				   CASE WHEN "TERMINATION_DATE" IS NOT NULL AND "TERMINATION_DATE" <> '' THEN TO_DATE("TERMINATION_DATE") ELSE NULL END AS "TERMINATION_DATE",
                   "CONTRACT_MODE", 
                   "OCCUPATION_NAME", 
 --                "NOMINAL_COMPLETION_DATE", 
 --                "DATE_OF_BIRTH", 
					CASE WHEN "NOMINAL_COMPLETION_DATE" IS NOT NULL AND "NOMINAL_COMPLETION_DATE" <> '' THEN TO_DATE("NOMINAL_COMPLETION_DATE") ELSE NULL END AS "NOMINAL_COMPLETION_DATE",
					CASE WHEN "DATE_OF_BIRTH" IS NOT NULL AND "DATE_OF_BIRTH" <> '' THEN TO_DATE("DATE_OF_BIRTH") ELSE NULL END AS "DATE_OF_BIRTH",               
                    "GIVEN_NAME", 
                    "MIDDLE_NAME", 
                    "SURNAME",
                	"QUALIFICATION_LEVEL",
					"QUALIFICATION_TITLE",
					"COMMENCEMENT_STATUS",
					"COMMENCEMENT_STATUS_DESC",
					"SRTO_NAME",
                	"REG_NUMBER"
				FROM
				(                              
                	SELECT
                       "A"."DB_KEY",
                       "A"."ALERT_ID",
                       "A"."ABN" ,
                       "A"."GJAHR",
                       "B"."TRAINEE_ID", 
                       "B"."TRAINING_AGREEMENT_TYPE", 
                       "B"."STATUS_DESC", 
                       "B"."COMMYEAR",
                       "B"."COMMENCEMENT_DATE", 
                       "B"."TERMINATION_DATE", 
                       "B"."CONTRACT_MODE", 
                       "B"."OCCUPATION_NAME", 
                       "B"."NOMINAL_COMPLETION_DATE", 
                       "B"."DATE_OF_BIRTH", 
                       "B"."GIVEN_NAME", 
                       "B"."MIDDLE_NAME", 
                       "B"."SURNAME",
                       "B"."QUALIFICATION_LEVEL",
					   "B"."QUALIFICATION_TITLE",
					   "B"."COMMENCEMENT_STATUS",
					   "B"."COMMENCEMENT_STATUS_DESC",
					   "B"."SRTO_NAME",
                       "B"."REG_NUMBER"


					FROM		:ALERT_INFO 	AS "A"
					INNER JOIN	:DESBT_DATA 	AS "B"
					ON			 "A"."ABN"  	= "B"."ABN"

				)
				ORDER BY "ALERT_ID" ASC , "STATUS_DESC" ASC, "TRAINING_AGREEMENT_TYPE" ASC,"REG_NUMBER" DESC, "COMMENCEMENT_DATE" DESC
				;

END;      
