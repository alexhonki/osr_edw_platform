FUNCTION "osr.edw.platform.fra.prt.dt.abn.ui::TF_ATO_BAS_NIND_WAGES_DETAIL"(IN IP_ALERT_ID NVARCHAR(20))
RETURNS TABLE
(
DB_KEY					VARBINARY(16),
DB_KEY_DASH				NVARCHAR(36),
ALERT_ID				NVARCHAR(20),
ABN						NVARCHAR(20),
GJAHR					NVARCHAR(4),
FINANCIAL_YEAR			NVARCHAR(4),	
BAS_QTR                 NVARCHAR(4),          
TOTL_PMT_FOR_WRK_AMT	DECIMAL(15,2),
PMT_FOR_WRK_IT_WHDG_AMT DECIMAL(15,2),
FBT_INST_AMT			DECIMAL(15,2),
TOTALWAGESPLUS9PERSUPER	DECIMAL(15,2),
WAERS					NVARCHAR(5)
)

LANGUAGE SQLSCRIPT 
SQL SECURITY INVOKER AS 

BEGIN 

IF :IP_ALERT_ID IS NULL OR :IP_ALERT_ID = '?' OR :IP_ALERT_ID = 'NULL' OR :IP_ALERT_ID = '' THEN

ALERT_INFO =
                SELECT
                    "DB_KEY",
                    "DB_KEY_DASH",
                    "ALERT_ID",
                    "ABN" ,
                    "GJAHR"
                FROM 
                "osr.edw.platform.fra.prt.dt.abn::TF_ALERT_PT_ABN_FY"()
;

ELSE

ALERT_INFO =
                SELECT
                                "DB_KEY",
                                "DB_KEY_DASH",
                                "ALERT_ID",
                                "ABN" ,
                                "GJAHR"
                FROM 
                                "osr.edw.platform.fra.prt.dt.abn::TF_ALERT_PT_ABN_FY"()
                WHERE 
                                "ALERT_ID" = :IP_ALERT_ID
;

END IF;

/*
RETURN  


SELECT 
"ALERT"."DB_KEY",
"ALERT"."DB_KEY_DASH",
"ALERT"."ALERT_ID",
"ALERT"."ABN" AS "ABN",
"ALERT"."GJAHR" AS "GJAHR", 
TO_NVARCHAR("DATA"."FINANCIAL_YEAR") AS "FINANCIAL_YEAR",
"DATA"."TOTL_PMT_FOR_WRK_AMT",
"DATA"."PMT_FOR_WRK_IT_WHDG_AMT",
"DATA"."FBT_INST_AMT",
("DATA"."TOTL_PMT_FOR_WRK_AMT" * 1.09) AS "TOTALWAGESPLUS9PERSUPER",
'AUD  ' AS "WAERS"
FROM :ALERT_INFO AS "ALERT"
INNER JOIN "osr.edw.staging.td.ato.proxy::CV_BASNIND_C" AS "DATA"
ON  "ALERT"."ABN" = "DATA"."ABN"
AND TO_NVARCHAR("DATA"."FINANCIAL_YEAR") BETWEEN TO_NVARCHAR((to_int("ALERT"."GJAHR") - 4)) and "ALERT"."GJAHR"
WHERE "DATA"."BAS_QTR" = 'FY'
;
*/

FISCAL_YR =
SELECT DISTINCT
	"FISCAL_YEAR"
FROM "osr.hana.platform.synonym::_SYS_BI.M_FISCAL_CALENDAR"
WHERE 
TO_NVARCHAR("FISCAL_YEAR") 
BETWEEN 
	(SELECT DISTINCT MIN("GJAHR") - 8 FROM :ALERT_INFO ) 
AND 
	(SELECT DISTINCT MAX("GJAHR")  FROM :ALERT_INFO)
;

ALERT_INFO_FY =
SELECT * FROM 
	(
	SELECT DISTINCT
			"ALERT"."DB_KEY",
			"ALERT"."DB_KEY_DASH",
			"ALERT"."ALERT_ID",
			"ALERT"."ABN",
			"ALERT"."GJAHR", 
			"YR"."FISCAL_YEAR"
FROM	:ALERT_INFO	AS "ALERT"	,
	(
	SELECT DISTINCT
		"FISCAL_YEAR"
	FROM :FISCAL_YR
	) AS "YR"
	) 
WHERE "FISCAL_YEAR" BETWEEN "GJAHR" - 7 and "GJAHR"

;

BAS_DATA = 
SELECT 
	"ABN",
	"FINANCIAL_YEAR",
	"BAS_QTR",
	SUM("TOTL_PMT_FOR_WRK_AMT") AS "TOTL_PMT_FOR_WRK_AMT" ,
	SUM("PMT_FOR_WRK_IT_WHDG_AMT") AS "PMT_FOR_WRK_IT_WHDG_AMT",
	SUM("FBT_INST_AMT") AS  "FBT_INST_AMT"
FROM
	"osr.edw.staging.td.ato.proxy::TF_BASNIND_C"() AS "BAS"
WHERE EXISTS
(
	SELECT * FROM :ALERT_INFO_FY AS "ALERT_FY"
	WHERE "BAS"."ABN" = "ALERT_FY"."ABN"
	AND   "BAS"."FINANCIAL_YEAR" = "ALERT_FY"."FISCAL_YEAR"
)
GROUP BY 
	"ABN",
	"FINANCIAL_YEAR",
	"BAS_QTR"
;	


RETURN 
SELECT
	"DB_KEY",
	"DB_KEY_DASH",
	"ALERT_ID",
	"ABN" AS "ABN",
	"GJAHR",
	TO_NVARCHAR("FISCAL_YEAR") AS "FINANCIAL_YEAR",
	CASE WHEN TO_NVARCHAR("BAS_QTR")  IS NULL THEN '-' ELSE  "BAS_QTR" END AS  "BAS_QTR",
	"TOTL_PMT_FOR_WRK_AMT",
	"PMT_FOR_WRK_IT_WHDG_AMT",
	"FBT_INST_AMT",
	"TOTALWAGESPLUS9PERSUPER",
	'AUD' AS "WAERS"	
FROM
	(

	SELECT 
		"ALERT"."DB_KEY",
		"ALERT"."DB_KEY_DASH",
		"ALERT"."ALERT_ID",
		"ALERT"."ABN" AS "ABN",
		"DATA"."BAS_QTR" AS "BAS_QTR",
		TO_NVARCHAR("ALERT"."GJAHR") AS "GJAHR", 
		TO_NVARCHAR("ALERT"."FISCAL_YEAR") AS "FISCAL_YEAR",
		"TOTL_PMT_FOR_WRK_AMT",
		"PMT_FOR_WRK_IT_WHDG_AMT",
		"FBT_INST_AMT",
		CASE WHEN "TOTL_PMT_FOR_WRK_AMT" IS NULL THEN NULL ELSE TO_DECIMAL("TOTL_PMT_FOR_WRK_AMT" * 1.09,15,2) END AS "TOTALWAGESPLUS9PERSUPER",
		'AUD' AS "WAERS"
	FROM 
		:ALERT_INFO_FY  AS "ALERT"
	LEFT OUTER JOIN
		:BAS_DATA		AS "DATA"
	ON
		"ALERT"."ABN" = "DATA"."ABN"
	AND "ALERT"."FISCAL_YEAR" = TO_NVARCHAR("DATA"."FINANCIAL_YEAR")
)
ORDER BY "ALERT_ID","FISCAL_YEAR",RIGHT("BAS_QTR",1) DESC
;


END;