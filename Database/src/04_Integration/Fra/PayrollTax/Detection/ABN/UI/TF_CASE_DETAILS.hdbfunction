FUNCTION "osr.edw.platform.fra.prt.dt.abn.ui::TF_CASE_DETAILS"(IN IP_ALERT_ID NVARCHAR(20) )
   RETURNS TABLE (
 
   		DB_KEY			  VARBINARY(16),
   		KEY1			  NVARCHAR(32),
		ALERT_ID		  NVARCHAR(20),
		ABN				  NVARCHAR(20),
		GJAHR			  NVARCHAR(4),
		PARTNER			  NVARCHAR(10)  ,
		CASE_GUID		  NVARCHAR(32)  ,
		CASE_ID			  NVARCHAR(12)  ,		
		CASE_TYPE		  NVARCHAR(4)   ,
		CASE_CATEGORY	  NVARCHAR(32)  ,	
		CASE_PRIORITY	  NVARCHAR(32)  ,    	
    	CASE_OUTCOME	  NVARCHAR(5)   ,
    	REASON_CODE       NVARCHAR(4)   ,
		CASE_TITLE		  NVARCHAR(80)  ,
		STAT_ORDERNO      NVARCHAR(2)   , 
		PROCESSOR         NVARCHAR(12)  ,
		ZZTOTASSMT        DECIMAL(21,2) ,
		ZZCURRENT_ACTION  NVARCHAR(10) , 
		OUTCOME_REASON    NVARCHAR(50) , 
		REC_CNT			  INTEGER,	
		CREATE_TIME		  NVARCHAR(8) ,
		CHANGE_TIME		  NVARCHAR(8) ,
		CLOSING_TIME	  NVARCHAR(8) 
	--	CREATE_TIME		  DECIMAL(15,0) ,
	--	CHANGE_TIME		  DECIMAL(15,0) ,
	--	CLOSING_TIME	  DECIMAL(15,0) 

)
       LANGUAGE SQLSCRIPT 
       SQL SECURITY INVOKER AS 
BEGIN 
    /*****************************
        Write your function logic
    ****************************/
 
CASE_DETAILS = 
 SELECT 
	"ALERT"."DB_KEY" AS "DB_KEY",
	"ALERT"."KEY1" AS "KEY1",
	"ALERT"."ALERT_ID" AS "ALERT_ID",
	"ALERT"."ABN" AS "ABN",
	"ALERT"."GJAHR" AS "GJAHR",
	"DATA"."PARTNER" AS "PARTNER",
	--"DATA"."ABN",
	"DATA"."CASE_GUID" AS "CASE_GUID",
	"DATA"."CASE_ID" AS "CASE_ID",
	"DATA"."CASE_TYPE" AS "CASE_TYPE",
	"DATA"."CASE_CATEGORY" AS "CASE_CATEGORY",
	"DATA"."CASE_PRIORITY" AS "CASE_PRIORITY",
	"DATA"."CASE_OUTCOME" AS "CASE_OUTCOME",
	"DATA"."REASON_CODE" AS "REASON_CODE",
	"DATA"."CASE_TITLE" AS "CASE_TITLE",
	"DATA"."STAT_ORDERNO" AS "STAT_ORDERNO",
	"DATA"."PROCESSOR" AS "PROCESSOR",
	"DATA"."ZZTOTASSMT" AS "ZZTOTASSMT",
	"DATA"."ZZCURRENT_ACTION" AS "ZZCURRENT_ACTION",
	TO_NVARCHAR(to_dats(left("DATA"."CREATE_TIME",8))) AS "CREATE_TIME",
	TO_NVARCHAR(to_dats(left("DATA"."CHANGE_TIME",8))) AS "CHANGE_TIME",
	TO_NVARCHAR(to_dats(left("DATA"."CLOSING_TIME",8))) AS "CLOSING_TIME"
	--"DATA"."CREATE_TIME" AS "CREATE_TIME",
	--"DATA"."CHANGE_TIME" AS "CHANGE_TIME",
	--"DATA"."CLOSING_TIME" AS "CLOSING_TIME"
FROM
	"osr.edw.platform.fra.prt.dt.abn::TF_ALERT_PT_ABN_FY"() AS "ALERT"
	INNER JOIN
	"osr.edw.platform.fra.prt.dt.abn::CV_CRM_BP_CASE" AS "DATA"
	ON  "ALERT"."ABN" = "DATA"."ABN"
	AND "DATA"."CASE_CATEGORY" = 'PRT'
	--AND "ALERT"."GJAHR" = TO_NVARCHAR("DATA"."FINANCIAL_YEAR")
	--WHERE LEFT(RIGHT("DATA"."NAME",10),2) = 'FY'
;

 IF :IP_ALERT_ID IS NULL OR :IP_ALERT_ID = '?' OR :IP_ALERT_ID = 'NULL' OR :IP_ALERT_ID = '' THEN

RETURN
SELECT 
	"DB_KEY",
	"KEY1",
	"ALERT_ID",
	"ABN",
	"GJAHR",
	"PARTNER",
	"CASE_GUID",
	"CASE_ID",
	"CASE_TYPE",
	"CASE_CATEGORY",
	"CASE_PRIORITY",
	"CASE_OUTCOME",
	"REASON_CODE",
	"CASE_TITLE",
	"STAT_ORDERNO",
	"PROCESSOR",
	"ZZTOTASSMT",
	"ZZCURRENT_ACTION",
	CASE WHEN UPPER("ZZCURRENT_ACTION") = 'ASSESSRAIS' THEN 'ASSESSMENT RAISED'
	     WHEN UPPER("ZZCURRENT_ACTION") = 'AUDITREQUI' THEN 'AUDIT REQUIRED'
	     WHEN UPPER("ZZCURRENT_ACTION") = 'INFORECEIV' THEN 'INFORMATION RECEIVED'
	     WHEN UPPER("ZZCURRENT_ACTION") = 'INFOREQUIR' THEN 'INFORMATION REQUIRED'
	     WHEN UPPER("ZZCURRENT_ACTION") = 'NOACTIONRE' THEN 'NO ACTION REQUIRED'
		 ELSE ''
	END AS "OUTCOME_REASON",
	1 AS "REC_CNT",
	"CREATE_TIME",
	"CHANGE_TIME",
	"CLOSING_TIME"
FROM :CASE_DETAILS
;

ELSE

RETURN
SELECT 
	"DB_KEY",
	"KEY1",
	"ALERT_ID",
	"ABN",
	"GJAHR",
	"PARTNER",
	"CASE_GUID",
	"CASE_ID",
	"CASE_TYPE",
	"CASE_CATEGORY",
	"CASE_PRIORITY",
	"CASE_OUTCOME",
	"REASON_CODE",
	"CASE_TITLE",
	"STAT_ORDERNO",
	"PROCESSOR",
	"ZZTOTASSMT",
	"ZZCURRENT_ACTION",
	CASE WHEN UPPER("ZZCURRENT_ACTION") = 'ASSESSRAIS' THEN 'ASSESSMENT RAISED'
	     WHEN UPPER("ZZCURRENT_ACTION") = 'AUDITREQUI' THEN 'AUDIT REQUIRED'
	     WHEN UPPER("ZZCURRENT_ACTION") = 'INFORECEIV' THEN 'INFORMATION RECEIVED'
	     WHEN UPPER("ZZCURRENT_ACTION") = 'INFOREQUIR' THEN 'INFORMATION REQUIRED'
	     WHEN UPPER("ZZCURRENT_ACTION") = 'NOACTIONRE' THEN 'NO ACTION REQUIRED'
		 ELSE ''
	END AS "OUTCOME_REASON",
	1 AS "REC_CNT",
	"CREATE_TIME",
	"CHANGE_TIME",
	"CLOSING_TIME"
FROM :CASE_DETAILS
WHERE "ALERT_ID" = :IP_ALERT_ID
;

END IF;    
    
END; 