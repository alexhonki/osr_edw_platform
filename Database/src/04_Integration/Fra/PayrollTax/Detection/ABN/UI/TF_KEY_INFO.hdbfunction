FUNCTION "osr.edw.platform.fra.prt.dt.abn.ui::TF_KEY_INFO"(IN IP_ALERT_ID NVARCHAR(20) )

/**********
	CREATED BY		: LAKSHMI
	CREATED ON		: 10/01/2019
	CREATION REASON	: Alert Details New Reg - KEY INFORMATION 
				      If condition has been added in case the input parameter has been as NULL or ?
**********/
RETURNS TABLE
(
--ALERT	
DB_KEY				VARBINARY(16),
ALERT_ID			NVARCHAR(20),
ABN					NVARCHAR(20),
GJAHR				NVARCHAR(4),
FINANCIAL_YEAR      NVARCHAR(4),
--ITR/BAS
TRDNG_NM			NVARCHAR(200),
ANZSIC_CD			NVARCHAR(5),
ANZSIC_TITLE		NVARCHAR(79),
--ABR
GST_REGN_DT			NVARCHAR(8),
GST_CANCN_DT		NVARCHAR(8),
ENT_TYP_CD			NVARCHAR(3),
--ASIC
REGN_START_DT		NVARCHAR(8),
REGN_END_DT			NVARCHAR(8),
ASIC_STATUS         NVARCHAR(20),
--PRT
PRT_START_DT		NVARCHAR(8),
PRT_END_DT			NVARCHAR(8),
PRT_REG_DT			NVARCHAR(8),
PRT_GRP_STATUS      NVARCHAR(60),
PRT_BP_NO           NVARCHAR(10),
--ITR
ACNT_PERD_BG_DT		NVARCHAR(8),
ACNT_PERD_END_DT	NVARCHAR(8),
CNSLDTD_HD_CMPNY	NVARCHAR(1),
--CRM
ECI_STATUS			NVARCHAR(12),
--Questions
NO_OPEN_CASE       DECIMAL(13,0),
APP_WITH_RANGE     NVARCHAR(3),
IS_A_TRUST         NVARCHAR(3),
TPAR_WAGE_GT       NVARCHAR(3),
--Wages
WCQ_ACT_WAGES      DECIMAL(15,2),
ATO_ITR_WAGES      DECIMAL(15,2),
ATO_BAS_WAGES      DECIMAL(15,2),
ATO_PAYG_WAGES     DECIMAL(15,2)
)

       LANGUAGE SQLSCRIPT 
       SQL SECURITY INVOKER AS 
BEGIN 


-----------------------------ALERT INFO--------------------
IF :IP_ALERT_ID IS NULL OR :IP_ALERT_ID = '?' OR :IP_ALERT_ID = 'NULL' OR :IP_ALERT_ID = '' THEN

ALERT_INFO =
	SELECT
		"DB_KEY",
		"ALERT_ID",
		"ABN" ,
		"GJAHR"
	FROM 
		"osr.edw.platform.fra.prt.dt.abn::TF_ALERT_PT_ABN_FY"()
;

ELSE

ALERT_INFO =
	SELECT
		"DB_KEY",
		"ALERT_ID",
		"ABN" ,
		"GJAHR"
	FROM 
		"osr.edw.platform.fra.prt.dt.abn::TF_ALERT_PT_ABN_FY"()
	WHERE 
		"ALERT_ID" = :IP_ALERT_ID
;

END IF;
--------------------------END OF ALERT-----------------------

------------------WCQ DATA-------------------------
/*
WCQ_POLICY_NO =
SELECT DISTINCT 
	"POLICY_NO",
	"ABN"
FROM "osr.edw.staging.md.wcq.proxy::TF_POLICY_DETAILS_C"()
WHERE 	 "ABN"  IN  (SELECT DISTINCT "ABN" FROM :ALERT_INFO)

;

WCQ_AMT_DATA =
SELECT DISTINCT 
	"ABN", 	
	"ASSESSMENT_YEAR" AS "FINANCIAL_YEAR",
	"ACT_WAGES"
FROM
(
SELECT 
	"ABN", 
	"ASSESSMENT_YEAR",
	SUM("ACT_WAGES") AS "ACT_WAGES"
FROM
(
SELECT 
	"POLICY_NO",
	"ASSESSMENT_YEAR",
	"WIC",
	"ACT_WAGES",
	"ACT_APPR_WAGES",
	"EST_ASSESS_METHOD",
	"ABN"
FROM
(
SELECT 
	"A"."POLICY_NO",
	"A"."ASSESSMENT_YEAR",
	"A"."WIC",
	"A"."ACT_WAGES",
	"A"."ACT_APPR_WAGES",
	"A"."EST_ASSESS_METHOD",
	"B"."ABN"
FROM 
	"osr.edw.staging.td.wcq.proxy::TF_POLICY_WAGES_C"()  AS "A"
INNER JOIN
:WCQ_POLICY_NO  AS "B"
ON
	    	"A"."POLICY_NO" = "B"."POLICY_NO"

WHERE 	
	TO_NVARCHAR("A"."ASSESSMENT_YEAR")  IN  (SELECT DISTINCT "GJAHR" FROM :ALERT_INFO) 	
	AND   UPPER("A"."EST_ASSESS_METHOD")  =  'STANDARD ASSESSED'
)
) GROUP BY "ABN","ASSESSMENT_YEAR"
)
;
*/

-----------------------END OF WCQ-----------------
----------------------BAS Data--------------------------
/*
BAS_AMT_DATA =
SELECT	
		"ABN",
		TO_NVARCHAR("FINANCIAL_YEAR") AS  "FINANCIAL_YEAR",
		SUM("TOTL_PMT_FOR_WRK_AMT") AS 	"TOTL_PMT_FOR_WRK_AMT"
FROM "osr.edw.staging.td.ato.proxy::TF_BASNIND_C"()		
WHERE 
	 "ABN"  IN  (SELECT DISTINCT "ABN" FROM :ALERT_INFO)
AND  TO_NVARCHAR("FINANCIAL_YEAR")  IN  (SELECT DISTINCT "GJAHR" FROM :ALERT_INFO)
GROUP BY
		"ABN","FINANCIAL_YEAR"
		
;
*/


TRD_NM =
SELECT DISTINCT
	"ABN",
	"FINANCIAL_YEAR",
	"TRDNG_NM"
FROM "osr.edw.staging.td.ato.proxy::TF_BASNIND_C"()		
WHERE 
	 "ABN"  IN  (SELECT DISTINCT "ABN" FROM :ALERT_INFO)
AND  TO_NVARCHAR("FINANCIAL_YEAR")  IN  (SELECT DISTINCT "GJAHR" FROM :ALERT_INFO)
AND "TRDNG_NM" <> ''
;

FULL_NAME =
SELECT DISTINCT
	"ABN",
	"FINANCIAL_YEAR",
	"FULL_NM_TXT" AS "TRDNG_NM"
FROM "osr.edw.staging.td.ato.proxy::TF_BASNIND_C"()		
WHERE 
	 "ABN"  IN  (SELECT DISTINCT "ABN" FROM :ALERT_INFO WHERE "ABN" NOT IN (SELECT DISTINCT "ABN" FROM :TRD_NM))
AND  TO_NVARCHAR("FINANCIAL_YEAR")  IN  (SELECT DISTINCT "GJAHR" FROM :ALERT_INFO)

;

BAS_TRDNG_NAME =
SELECT	
	"ABN",
	"FINANCIAL_YEAR",
	"TRDNG_NM"
FROM
(
SELECT DISTINCT
	"ABN",
	"FINANCIAL_YEAR",
	"TRDNG_NM"
FROM :TRD_NM

UNION

SELECT DISTINCT
	"ABN",
	"FINANCIAL_YEAR",
	"TRDNG_NM"
FROM :FULL_NAME
)
;
-----------------------END OF BAS -------------------
----------------------ITR Data-----------------------------
/*
ITR_AMT_DATA =

SELECT	
		"ABN",
		"INCM_YR" AS "FINANCIAL_YEAR",
		"ACNT_PERD_BG_DT",
		"ACNT_PERD_END_DT",
		"CNSLDTD_HD_CMPNY",
		SUM("SALARY_WAGES") AS 	"SALARY_WAGES"
FROM "osr.edw.staging.td.ato.proxy::TF_ITRNIND_C"()		
WHERE 
	 "ABN"  IN  (SELECT DISTINCT "ABN" FROM :ALERT_INFO)
AND  TO_NVARCHAR("INCM_YR")  IN  (SELECT DISTINCT "GJAHR" FROM :ALERT_INFO)
GROUP BY
		"ABN",
		"INCM_YR",
		"ACNT_PERD_BG_DT",
		"ACNT_PERD_END_DT",
		"CNSLDTD_HD_CMPNY"
;	
*/

ITR_AMT_DATA = 
SELECT	
		"ALERT"."ABN" AS "ABN",
		"ALERT"."GJAHR" AS "FINANCIAL_YEAR",
		"ITR"."ACNT_PERD_BG_DT" AS "ACNT_PERD_BG_DT",
		"ITR"."ACNT_PERD_END_DT" AS "ACNT_PERD_END_DT",
		"ITR"."CNSLDTD_HD_CMPNY" AS "CNSLDTD_HD_CMPNY"
FROM 
"osr.edw.staging.td.ato.proxy::TF_ITRNIND_C"() AS "ITR"
INNER JOIN
:ALERT_INFO AS "ALERT"
ON  "ITR"."ABN" = "ALERT"."ABN"
AND LEFT(TO_NVARCHAR("ITR"."INCM_YR"),4) = "ALERT"."GJAHR"
;
-----------------END OF ITR------------------------------

----------------------------
--Get Unique ASZSIC info as an ABN can have multiple ANZSIC Codes ( High Priority )
--------------------------------
IND_CODE = 

	 SELECT DISTINCT
    "ABN",
--	"ACN",
	"CLNT_TYP",
	"ANZSIC_CD"     AS "ANZSIC_CD",
	"ANZSIC_TITLE"  AS "ANZSIC_TITLE"
FROM
 (
 
	 SELECT 
		"TF_ITRNIND_C"."ABN" AS "ABN",
--		"ACN",
		"TF_ITRNIND_C"."CLNT_TYP" AS "CLNT_TYP",
		"TF_ITRNIND_C"."ATO_ANZSIC_CD" AS "ANZSIC_CD",
		UPPER("ANZSIC_TITLE")   AS "ANZSIC_TITLE"
	FROM "osr.edw.staging.td.ato.proxy::TF_ITRNIND_C"() AS "TF_ITRNIND_C"
	WHERE EXISTS (
		SELECT * FROM  :ALERT_INFO AS "ALERT"
		WHERE "TF_ITRNIND_C"."ABN" = "ALERT"."ABN"
		  AND TO_NVARCHAR("TF_ITRNIND_C"."INCM_YR") = "ALERT"."ABN"
	)
	 UNION 
 
	 SELECT 
		"TF_BASNIND_C"."ABN" AS "ABN",
--		"ACN",
		"TF_BASNIND_C"."CLNT_TYP" AS "CLNT_TYP",
		"TF_BASNIND_C"."ANZSIC_CD"     AS "ANZSIC_CD",
		UPPER("TF_BASNIND_C"."ANZSIC_TITLE")  AS "ANZSIC_TITLE"
	FROM "osr.edw.staging.td.ato.proxy::TF_BASNIND_C"()	AS "TF_BASNIND_C"
	WHERE EXISTS (
		SELECT * FROM  :ALERT_INFO AS "ALERT"
		WHERE "TF_BASNIND_C"."ABN" = "ALERT"."ABN"
		  AND LEFT("TF_BASNIND_C"."FINANCIAL_YEAR",4) = "ALERT"."ABN"
	)
	);

IND_CODE_GRP =	
SELECT 	DISTINCT 
		"ABN",
		"CLNT_TYP",
		"ANZSIC_CD",
	    "ANZSIC_TITLE",
		"IND_CODE_GRP",
		"IND_DIVISION",
		"RISK_FACTOR_RATING" 
FROM
(
SELECT  
	"ABN",
	"CLNT_TYP",
	"ANZSIC_CD",
	"ANZSIC_TITLE",
	"IND_CODE_GRP",
	"IND_DIVISION",
	"RISK_FACTOR_RATING",
	RANK() OVER (PARTITION BY "ABN" ORDER BY "ABN" ,"RISK_FACTOR_RATING" DESC, "ANZSIC_CD" DESC) AS "RANK_1"
FROM
(
SELECT
		"A"."ABN"            AS "ABN",
		"A"."CLNT_TYP"       AS "CLNT_TYP",
		"A"."ANZSIC_CD"      AS "ANZSIC_CD",
		"A"."ANZSIC_TITLE"   AS "ANZSIC_TITLE",
		"B"."IND_CODE_GRP"   AS "IND_CODE_GRP",
		"B"."IND_DIVISION"   AS "IND_DIVISION" ,
		"C"."RISK_FACTOR_RATING" AS "RISK_FACTOR_RATING"
	FROM 
		:IND_CODE AS "A" 
	LEFT OUTER JOIN
		"osr.edw.staging.md.ato.proxy::CV_IND_CODE_GRP" AS "B"
	ON 
		LEFT("A"."ANZSIC_CD", 3) = 	"B"."IND_CODE_GRP"
    LEFT OUTER JOIN
    	"osr.edw.platform.fra.prt.dt.abn.wages.dt::CV_RFR_INDUSTRY" AS "C"
	ON
		"B"."IND_DIVISION" = "C"."IND_DIVISION"
)) WHERE "RANK_1" = 1		
;


---------------------END OF ANZSIC------------------

-------------ABR Agency Data-------------------

ABR_DATA =

SELECT "AGENCY"."ABN" AS "ABN",
		"AGENCY"."ENT_TYP_CD" AS "ENT_TYP_CD",
		MIN("AGENCY"."GST_REGN_DT")  AS 	"GST_REGN_DT",
		MIN("AGENCY"."GST_CANCN_DT") AS  "GST_CANCN_DT" 
FROM
	"osr.edw.staging.md.abr.proxy::TF_AGENCY_DATA_C"() AS "AGENCY"
	WHERE EXISTS (
		SELECT * FROM  :ALERT_INFO AS "ALERT"
		WHERE "AGENCY"."ABN" = "ALERT"."ABN"
	)
GROUP BY 
	"AGENCY"."ABN",
	"AGENCY"."ENT_TYP_CD"
;

--------------END OF ABR-----------

----------------------ASIC Data----------
ASIC_DATA =
	SELECT DISTINCT
		"ABN",
		"ASIC_STATUS",
		"REGN_START_DT",
		"REGN_END_DT"
FROM
(
	SELECT 
		"ORG"."ABN" AS "ABN",
		"ORG"."ORG_START_DT" AS "ORG_START_DT",
		"ORG"."ORG_END_DT" AS "ORG_END_DT",
		"ORG"."ORG_STATUS" AS "ASIC_STATUS",
		TO_DATS("ORG"."REGN_START_DT") AS "REGN_START_DT",
		TO_DATS("ORG"."REGN_END_DT")	 AS "REGN_END_DT",
		RANK() OVER (PARTITION BY "ORG"."ABN" ORDER BY "ORG"."ABN","ORG"."ORG_END_DT" DESC,"ORG"."ORG_START_DT" DESC) AS "RANK_1"
	FROM 
		"osr.edw.staging.md.asic.proxy::CV_ORGANISATION_C" AS "ORG"
	WHERE EXISTS (
		SELECT * FROM  :ALERT_INFO AS "ALERT"
		WHERE "ORG"."ABN" = "ALERT"."ABN"
	)
)
WHERE "RANK_1" = 1
;
-------------END OF ASIC----------------

---------TPAR---------------------------

TPAR_DATA =
SELECT 
	"PAYER_ABN" AS "ABN",
	TO_NVARCHAR("FINANCIAL_YEAR") AS "FINANCIAL_YEAR",
	SUM("GROSS_PD_AMT") AS "GROSS_PD_AMT",
	SUM("TW_TOTL_AMT")  AS "TW_TOTL_AMT",
	SUM("GST_TOTL_AMT") AS "GST_TOTL_AMT",
	CASE WHEN SUM("GROSS_PD_AMT") > 100000 THEN 'YES' ELSE 'NO' END AS "TPAR_WAGE_GT"

FROM  "osr.edw.staging.td.ato.proxy::TF_TPAR_PAYEE_C"( )
WHERE 	"PAYER_ABN" 		IN (SELECT DISTINCT "ABN"	FROM :ALERT_INFO)
AND 	TO_NVARCHAR("FINANCIAL_YEAR")	IN (SELECT DISTINCT "GJAHR" FROM :ALERT_INFO)
GROUP BY 	"PAYER_ABN",
			"FINANCIAL_YEAR"
;
-------------END OF TPAR--------------
----------------PAYG-----------
/*
PAYG_DATA =
SELECT 
	"ABN",
	"INCM_YR" AS "FINANCIAL_YEAR",
	SUM("TOTL_GRS_AMT") AS "TOTL_GRS_AMT",
	SUM("TOTL_LUMP_AMT") AS "TOTL_LUMP_AMT",
	SUM("TOTL_ALWNC_AMT") AS "TOTL_ALWNC_AMT",
	SUM("LSPA_AMT") AS "LSPA_AMT",
	SUM("LSPB_AMT") AS "LSPB_AMT",
	SUM("LSPD_AMT") AS "LSPD_AMT",
	SUM("LSPE_AMT") AS "LSPE_AMT",
	SUM("RPRTBL_EMPLYR_SUPER_CNTRBN_AMT") AS "RPRTBL_EMPLYR_SUPER_CNTRBN_AMT"
FROM "osr.edw.staging.td.ato.proxy::CV_PAYG_IND_C"
WHERE 	"ABN" 		IN (SELECT DISTINCT "ABN"	FROM :ALERT_INFO)
AND 	"INCM_YR"	IN (SELECT DISTINCT "GJAHR" FROM :ALERT_INFO)
GROUP BY 	"ABN",
			"INCM_YR"
;
*/
-------------------DESBT-------------------------

DESBT_DATA =
SELECT
	"TRAINING"."ABN" AS "ABN",
    TO_DATS("TRAINING"."COMMENCEMENT_DATE") AS "COMMENCEMENT_DT",
	TO_DATS("TRAINING"."TERMINATION_DATE") AS "TERMINATION_DATE",
	TO_DATS("TRAINING"."NOMINAL_COMPLETION_DATE") AS "NOMINAL_COMPLETION_DATE",
	COUNT(*) AS "COUNT_APP_TRA"
FROM "osr.edw.staging.md.desbt.synonym::CDS_ORG.DSO.TRAINING.active_data" AS "TRAINING"
WHERE "TRAINING_AGREEMENT_TYPE" IN ('A','T')
AND EXISTS (
	SELECT * FROM :ALERT_INFO AS "ALERT"
	WHERE "TRAINING"."ABN" = "ALERT"."ABN"
)
AND 	TO_DATS("TRAINING"."COMMENCEMENT_DATE")	<=  CONCAT((SELECT DISTINCT MAX("GJAHR") FROM :ALERT_INFO), '0630')
AND 	TO_DATS("TRAINING"."NOMINAL_COMPLETION_DATE") 	>=  CONCAT(TO_NVARCHAR(TO_INT((SELECT DISTINCT MIN("GJAHR") FROM :ALERT_INFO) - 1)), '0701')
GROUP BY 
"TRAINING"."ABN", 
"TRAINING"."COMMENCEMENT_DATE",
"TRAINING"."TERMINATION_DATE", 
"TRAINING"."NOMINAL_COMPLETION_DATE"
----Case Stat is needed in the output
;

----------------RMS and CRM Data-------------------------



BUT0ID =
SELECT DISTINCT
	"BUT0ID"."PARTNER" AS "PARTNER",
	"BUT0ID"."TYPE" AS "TYPE",
	"BUT0ID"."IDNUMBER" AS "IDNUMBER"
	FROM "osr.edw.staging.md.rms.synonym::CDS_BP.DSO.BUT0ID.active_data" AS "BUT0ID"
WHERE "TYPE" = 'ZABN'
AND EXISTS (
	SELECT * FROM :ALERT_INFO AS "ALERT"
	WHERE "BUT0ID"."IDNUMBER" = "ALERT"."ABN"
)
;


BUT050_DATA =
SELECT DISTINCT
	"ABN"
FROM
(
SELECT 
	"A"."IDNUMBER" AS "ABN",
	"A"."PARTNER",
	"B"."PARTNER2",
	"B"."DATE_TO",
	"B"."DATE_FROM",
	"B"."RELTYP"
FROM
	"osr.edw.staging.md.rms.synonym::CDS_BP.DSO.BUT0ID.active_data" AS "A"
INNER JOIN 
	"osr.edw.staging.md.rms.synonym::CDS_BP.DSO.BUT050.active_data" AS "B"
ON
	"A"."PARTNER" = "B"."PARTNER1"
WHERE	"B"."RELTYP" = 'ZTRU'
)
;


RMS_PTX_DATA =
SELECT DISTINCT
	"PARTNER",
	"IDNUMBER" AS "ABN",
	"PSOBKEY"  AS "OBJID"
FROM
(
SELECT DISTINCT
	"A"."PARTNER",
	"A"."IDNUMBER",
	"B"."PSOBKEY"
FROM 
	:BUT0ID  AS "A"
INNER JOIN
	(SELECT 
			"PSOBKEY", 
			"PARTNER" 
	FROM "osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DPSOBBPACC.active_data" 
	WHERE "PARTNERACCTYP" = 'PT') AS "B"
ON
	"A"."PARTNER" = "B"."PARTNER"
)
;	


PRT_DATA =
SELECT DISTINCT 
	"ABN",
    "OBJID",
     "BPARTNER" 	AS  "PARTNER",
	"VALID_TO"		AS  "PRT_END_DT",
	"VALID_FROM"	AS  "PRT_REG_DT",
	"PRT_START_DT",
	"PRT_GRP_STATUS"
FROM
(
SELECT
	"ABN",
    "OBJID",
     "BPARTNER",
	"VALID_TO",
	"VALID_FROM",
	"PRT_START_DT",
	"PRT_GRP_STATUS",
	RANK() OVER (PARTITION BY "OBJID" ORDER BY "OBJID","VALID_TO" DESC) AS "RANK_1"
FROM
(
SELECT
	"A"."ABN",
    "A"."OBJID",
    "B"."BPARTNER",
	"B".GRP_STATUS	AS "PRT_GRP_STATUS",
	"B".PRT_LIAB_DATE	AS "PRT_START_DT",
	"B".QLD_LIAB_DATE	AS  "QLD_START_DT",
	"B".VALID_FROM	,
	"B".VALID_TO		
FROM 
	:RMS_PTX_DATA  AS "A"
INNER JOIN
	"osr.edw.platform.fra.prt.dt.abn::TF_PRT_BP_REG_FACTS"() AS "B"
ON
	"A"."PARTNER" = "B"."BPARTNER"
)
) WHERE "RANK_1" = 1
;

CASE_DATA =
SELECT
	"ABN",
	COUNT(*) AS "NO_OPEN_CASE"
FROM
(
SELECT  DISTINCT
	"CASE_ID",
	"CASE_TYPE",
	"CASE_CATEGORY",
	"CASE_PRIORITY",
	"CASE_OUTCOME",
	"ABN",
	"PARTNER",
	"STAT_ORDERNO"
FROM "osr.edw.platform.fra.prt.dt.abn::CV_CRM_BP_CASE"
WHERE	"CASE_OUTCOME" IN ('OPEN', '')
AND 	"CASE_TYPE" 	= 'ZINV'
AND 	"CASE_CATEGORY" = 'PRT'  
AND 	"ABN" IN (SELECT DISTINCT "ABN" FROM :ALERT_INFO)
--AND 	"STAT_ORDERNO" IN ()
)
GROUP BY 
	"ABN"
;


ECI_STATUS_DATA =
SELECT
	"ABN",
	 'Exempt' AS  "ECI_STATUS"
FROM"osr.edw.platform.fra.prt.dt.abn::CV_CRM_BP_CASE"
WHERE "CASE_TYPE" = 'ZEXM' 
AND   "ABN" IN (SELECT DISTINCT "ABN" FROM :ALERT_INFO);
----Case Stat is needed in the output

---------------JOIN RMS Data---------------------
RMS_DATA_OUT =

	SELECT
		"A"."DB_KEY",
		"A"."ALERT_ID",
		"A"."ABN" ,
		"A"."GJAHR",

		"B"."PARTNER" AS "PRT_BP_NO",
		"B"."PRT_REG_DT",
		"B"."PRT_END_DT",
		"B"."PRT_START_DT",
		"B"."PRT_GRP_STATUS" ,
		
		CASE WHEN 	"A"."ABN" = "C"."ABN" THEN 'Yes' ELSE 'No' END AS "IS_A_TRUST",
		
		"D"."NO_OPEN_CASE",
		
		CASE WHEN 	"A"."ABN" = "E"."ABN" THEN 'Exempt' ELSE 'Not Exempt' END AS "ECI_STATUS"

FROM 

		:ALERT_INFO AS "A"
LEFT OUTER JOIN

--PRT DATA
		:PRT_DATA AS "B"
ON
		"A"."ABN" = "B"."ABN"
		
-- Rel Status
LEFT OUTER JOIN
		:BUT050_DATA AS "C"
ON
		"A"."ABN" = "C"."ABN"
		
--Case Data
LEFT OUTER JOIN
		:CASE_DATA AS "D"
ON
		"A"."ABN" = "D"."ABN"	
		
--ECI Status
LEFT OUTER JOIN
		:ECI_STATUS_DATA  AS "E"
ON
		"A"."ABN" = "E"."ABN"		
;


--------------JOIN All the Data sets-----

ALL_DATA_SET =

SELECT DISTINCT
		"DB_KEY"	,
		"ALERT_ID"	,
		"ABN"		,
		"GJAHR"		,
		TO_NVARCHAR("GJAHR") AS "FINANCIAL_YEAR",
--ITR/BAS
		"TRDNG_NM"		,
		"ANZSIC_CD"		,
		"ANZSIC_TITLE"	,
--ABR
		"GST_REGN_DT"	,
		"GST_CANCN_DT"	,
		"ENT_TYP_CD"	,
--ASIC
		"REGN_START_DT"	,
		"REGN_END_DT"	,
		"ASIC_STATUS"   ,
--PRT
		"PRT_START_DT"	,
		"PRT_END_DT"	,
		"PRT_REG_DT"	,
		"PRT_GRP_STATUS",
		"PRT_BP_NO",
--ITR
		"ACNT_PERD_BG_DT",
		"ACNT_PERD_END_DT",
		"CNSLDTD_HD_CMPNY",
--CRM
		"ECI_STATUS"	,
--Questions
		"NO_OPEN_CASE"  ,
	--	'' AS "APP_WITH_RANGE",
		CASE WHEN (TO_DECIMAL(("ATO_ITR_WAGES" - ("COUNT_APP_TRA" * 30000)), 15, 2)) < 1100000 THEN 'No' ELSE 'Yes'  END AS  "APP_WITH_RANGE",
		"IS_A_TRUST"    ,
		"TPAR_WAGE_GT"  ,
--Wages
		"WCQ_ACT_WAGES" ,
		"ATO_ITR_WAGES" ,
		"ATO_BAS_WAGES" ,
		"ATO_PAYG_WAGES"
		
FROM
(

	SELECT
		"A"."DB_KEY",
		"A"."ALERT_ID",
		"A"."ABN" AS "ABN",
		"A"."GJAHR",
		
		--"B"."TOTL_PMT_FOR_WRK_AMT"  AS "ATO_BAS_WAGES",
		"ABN_WAGES"."ATO_BAS_TOTL_PMT_FOR_WRK_AMT" AS	"ATO_BAS_WAGES",
		
		"C"."ACNT_PERD_BG_DT",
		"C"."ACNT_PERD_END_DT",
		"C"."CNSLDTD_HD_CMPNY",
		--"C"."SALARY_WAGES"	AS 	"ATO_ITR_WAGES",
		"ABN_WAGES"."ATO_ITR_SALARY_WAGES" AS	"ATO_ITR_WAGES",
		
		--"D"."ACT_WAGES"		AS	"WCQ_ACT_WAGES",
		"ABN_WAGES"."WCQ_ACT_WAGES" AS	"WCQ_ACT_WAGES",
		
		"E"."CLNT_TYP",
		"E"."ANZSIC_CD",
	    "E"."ANZSIC_TITLE",	
	    
	    "F"."ENT_TYP_CD",
		"F"."GST_REGN_DT",
		"F"."GST_CANCN_DT" ,
		
		"G"."REGN_START_DT",
		"G"."REGN_END_DT",
	    "G"."ASIC_STATUS",
	    
	    "H"."TPAR_WAGE_GT",
	    
	    "I"."COUNT_APP_TRA",
	    --"J"."TOTL_GRS_AMT" AS "ATO_PAYG_WAGES",
	    "ABN_WAGES"."ATO_PAYG_NIND_TOTL_GRS_AMT" AS "ATO_PAYG_WAGES",
	    
	    "K"."PRT_REG_DT",
		"K"."PRT_END_DT",
		"K"."PRT_START_DT",
		"K"."PRT_BP_NO",
		"K"."PRT_GRP_STATUS",
		"K"."IS_A_TRUST",
		"K"."NO_OPEN_CASE",
		"K"."ECI_STATUS",
	    "L"."TRDNG_NM"
FROM 

		:ALERT_INFO AS "A"
/*LEFT OUTER JOIN

--BAS DATA
		:BAS_AMT_DATA  AS "B"
ON
		"A"."ABN" = "B"."ABN"
	AND "A"."GJAHR" = "B"."FINANCIAL_YEAR"	
*/
LEFT OUTER JOIN
--ITR Data
		:ITR_AMT_DATA AS "C"
ON
		"A"."ABN" = "C"."ABN"
	AND "A"."GJAHR" = "C"."FINANCIAL_YEAR"	
/*
LEFT OUTER JOIN		
--WCQ Data
		:WCQ_AMT_DATA  AS "D"
ON
		"A"."ABN" = "D"."ABN"
	AND "A"."GJAHR" = "D"."FINANCIAL_YEAR"		
*/
LEFT OUTER JOIN
--IND Code
		:IND_CODE_GRP AS "E"
ON
		"A"."ABN" = "E"."ABN"

LEFT OUTER JOIN
--ABR Code
		:ABR_DATA AS "F"
ON
		"A"."ABN" = "F"."ABN"

LEFT OUTER JOIN
--ASIC Code
		:ASIC_DATA	AS "G"
ON
		"A"."ABN" = "G"."ABN"
LEFT OUTER JOIN
--TPAR Data
		:TPAR_DATA	AS "H"
ON
		"A"."ABN" = "H"."ABN"
	AND "A"."GJAHR" = "H"."FINANCIAL_YEAR"		

LEFT OUTER JOIN
--DESBT Data
		:DESBT_DATA	AS "I"
ON
		"A"."ABN" = "I"."ABN"

/*LEFT OUTER JOIN
--PAYG Data
	:PAYG_DATA AS "J"
ON
		"A"."ABN"			 = "J"."ABN"
	AND "A"."GJAHR" = "J"."FINANCIAL_YEAR"	
*/

LEFT OUTER JOIN
--RMS Data
	:RMS_DATA_OUT AS "K"
ON
		"A"."ABN"	= "K"."ABN"
	AND "A"."GJAHR" = "K"."GJAHR"		

LEFT OUTER JOIN
--Trading Name Data
	:BAS_TRDNG_NAME AS "L"
ON
		"A"."ABN"	= "L"."ABN"
	AND "A"."GJAHR" = "L"."FINANCIAL_YEAR"	
	
LEFT OUTER JOIN
(SELECT * FROM "osr.edw.platform.fra.prt.dt.abn.wages::TF_ABN_WAGES"( ) WHERE "PERIOD_CATEGORY" = 'PT-A')  AS "ABN_WAGES"
	 ON	"A"."ABN"	= "ABN_WAGES"."ABN"
	AND "A"."GJAHR" = "ABN_WAGES"."GJAHR"	
)	


	
;
---------------------------------------------------
RETURN
SELECT DISTINCT
		"DB_KEY"	,
		"ALERT_ID"	,
		"ABN"		,
		"GJAHR"		,
		"FINANCIAL_YEAR",
--ITR/BAS
		"TRDNG_NM"		,
		"ANZSIC_CD"		,
		"ANZSIC_TITLE"	,
--ABR
		"GST_REGN_DT"	,
		"GST_CANCN_DT"	,
		"ENT_TYP_CD"	,
--ASIC
		"REGN_START_DT"	,
		"REGN_END_DT"	,
		"ASIC_STATUS"   ,
--PRT
		"PRT_START_DT"	,
		"PRT_END_DT"	,
		"PRT_REG_DT"	,
		"PRT_GRP_STATUS",
		"PRT_BP_NO",
--ITR
		"ACNT_PERD_BG_DT",
		"ACNT_PERD_END_DT",
		"CNSLDTD_HD_CMPNY",
--CRM
		"ECI_STATUS"	,
--Questions
		"NO_OPEN_CASE"  ,
		'' AS "APP_WITH_RANGE",
--		CASE (TO_DECIMAL(("ATO_ITR_WAGES" - ("COUNT_APP_TRA" * 30000)), 15, 2)) < 1100000 THEN 'No' ELSE 'Yes'  END AS  "APP_WITH_RANGE"
		"IS_A_TRUST"    ,
		"TPAR_WAGE_GT"  ,
--Wages
		"WCQ_ACT_WAGES" ,
		"ATO_ITR_WAGES" ,
		"ATO_BAS_WAGES" ,
		"ATO_PAYG_WAGES"
FROM :ALL_DATA_SET 		
;

END;