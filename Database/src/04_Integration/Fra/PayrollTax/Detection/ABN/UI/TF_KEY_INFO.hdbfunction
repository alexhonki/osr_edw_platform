FUNCTION "osr.edw.platform.fra.prt.dt.abn.ui::TF_KEY_INFO"(IN IP_ALERT_ID NVARCHAR(20) )

/**********
	CREATED BY		: LAKSHMI
	CREATED ON		: 10/01/2019
	CREATION REASON	: Alert Details New Reg - KEY INFORMATION 
				      If condition has been added in case the input parameter has been as NULL or ?
**********/
RETURNS TABLE
(
--ALERT	
DB_KEY				VARBINARY(16),
ALERT_ID			NVARCHAR(20),
ABN					NVARCHAR(20),
GJAHR				NVARCHAR(4),
FINANCIAL_YEAR      NVARCHAR(4),
--ABR
TRDNG_NM			NVARCHAR(200),
ANZSIC_CD			NVARCHAR(5),
ANZSIC_TITLE		NVARCHAR(79),
GST_REGN_DT			NVARCHAR(8),
GST_CANCN_DT		NVARCHAR(8),
ENT_TYP_CD			NVARCHAR(150),
--ASIC
REGN_START_DT		NVARCHAR(8),
REGN_END_DT			NVARCHAR(8),
ASIC_STATUS         NVARCHAR(20),
--PRT
PRT_START_DT		NVARCHAR(8),
PRT_END_DT			NVARCHAR(8),
PRT_REG_DT			NVARCHAR(8),
PRT_GRP_STATUS      NVARCHAR(60),
PRT_BP_NO           NVARCHAR(10),
--ITR
ACNT_PERD_BG_DT		NVARCHAR(8),
ACNT_PERD_END_DT	NVARCHAR(8),
CNSLDTD_HD_CMPNY	NVARCHAR(3),
--CRM
ECI_STATUS			NVARCHAR(12),
--Questions
NO_OPEN_CASE       DECIMAL(13,0),
APP_WITH_RANGE     NVARCHAR(3),
--TRA_WITH_RANGE     NVARCHAR(3),
IS_A_TRUST         NVARCHAR(3),
TPAR_WAGE_GT       NVARCHAR(3),
--Wages
WCQ_ACT_WAGES      DECIMAL(15,2),
ATO_ITR_WAGES      DECIMAL(15,2),
ATO_BAS_WAGES      DECIMAL(15,2),
ATO_PAYG_WAGES     DECIMAL(15,2)
)

       LANGUAGE SQLSCRIPT 
       SQL SECURITY INVOKER AS 
BEGIN 



-----------------------------ALERT INFO--------------------
IF :IP_ALERT_ID IS NULL OR :IP_ALERT_ID = '?' OR :IP_ALERT_ID = 'NULL' OR :IP_ALERT_ID = '' THEN

ALERT_INFO =
	SELECT
		"DB_KEY",
		"ALERT_ID",
		"ABN" ,
		"GJAHR"
	FROM 
		"osr.edw.platform.fra.prt.dt.abn::TF_ALERT_PT_ABN_FY"()
;

ELSE

ALERT_INFO =
	SELECT
		"DB_KEY",
		"ALERT_ID",
		"ABN" ,
		"GJAHR"
	FROM 
		"osr.edw.platform.fra.prt.dt.abn::TF_ALERT_PT_ABN_FY"()
	WHERE 
		"ALERT_ID" = :IP_ALERT_ID
;

END IF;
--------------------------END OF ALERT-----------------------



----------------------ITR Data-----------------------------


ITR_AMT_DATA = 
SELECT	
		"ALERT"."ABN" AS "ABN",
		"ALERT"."GJAHR" AS "FINANCIAL_YEAR",
		"ITR"."ACNT_PERD_BG_DT" AS "ACNT_PERD_BG_DT",
		"ITR"."ACNT_PERD_END_DT" AS "ACNT_PERD_END_DT",
		"ITR"."CNSLDTD_HD_CMPNY" AS "CNSLDTD_HD_CMPNY"
FROM 
"osr.edw.staging.td.ato.proxy::TF_ITRNIND_C"() AS "ITR"
INNER JOIN
:ALERT_INFO AS "ALERT"
ON  "ITR"."ABN" = "ALERT"."ABN"
AND LEFT(TO_NVARCHAR("ITR"."INCM_YR"),4) = "ALERT"."GJAHR"
;
-----------------END OF ITR------------------------------


-------------ABR Agency Data-------------------

ABR_DATA =

SELECT
"A"."ABN",
--"A"."ENT_TYP_CD",
"B"."ENTITY_DESCRIPTION" AS "ENT_TYP_CD",
"A"."ANZSIC_CD",
"A"."ANZSIC_TITLE",
"A"."TRDNG_NM",
"A"."GST_REGN_DT",
"A"."GST_CANCN_DT"
FROM

(
SELECT DISTINCT 
	"AGENCY"."ABN",
	"AGENCY"."ENT_TYP_CD" AS "ENT_TYP_CD",
	"AGENCY"."MN_INDY_CLSN" AS "ANZSIC_CD",
	UPPER("AGENCY"."MN_INDY_CLSN_DESCN") AS "ANZSIC_TITLE",
	UPPER("AGENCY"."ORG_NM") AS "TRDNG_NM",
	MIN("AGENCY"."GST_REGN_DT")  AS  "GST_REGN_DT",
	MIN("AGENCY"."GST_CANCN_DT") AS  "GST_CANCN_DT" 
FROM "osr.edw.staging.md.abr.proxy::CV_AGENCY_DATA_C"  AS "AGENCY"
WHERE EXISTS
(
			SELECT * FROM  :ALERT_INFO AS "ALERT"
		WHERE LEFT("AGENCY"."ABN",11) = "ALERT"."ABN"
	
)

AND "ENT_TYP_CD" <> 'IND'
GROUP BY
	"AGENCY"."ABN",
	"AGENCY"."ENT_TYP_CD" ,
	"AGENCY"."MN_INDY_CLSN",
	"AGENCY"."MN_INDY_CLSN_DESCN",
	"AGENCY"."ORG_NM"
) 
AS "A"
LEFT OUTER JOIN
(
SELECT 
	DISTINCT
	"ENTITY_TYPE_CODE",
	"ENTITY_DESCRIPTION"
FROM "osr.edw.staging.md.abr.proxy::CV_ENTITY_MAPPING_C"
)
AS "B"
ON
"A"."ENT_TYP_CD" = "B".	"ENTITY_TYPE_CODE"
;

--------------END OF ABR-----------

----------------------ASIC Data----------
ASIC_DATA =
	SELECT DISTINCT
		"ABN",
		"ASIC_STATUS",
		"REGN_START_DT",
		"REGN_END_DT"
FROM
(
	SELECT 
		"ORG"."ABN" AS "ABN",
		"ORG"."ORG_START_DT" AS "ORG_START_DT",
		"ORG"."ORG_END_DT" AS "ORG_END_DT",
		"ORG"."ORG_STATUS" AS "ASIC_STATUS",
		TO_DATS("ORG"."REGN_START_DT") AS "REGN_START_DT",
		TO_DATS("ORG"."REGN_END_DT")	 AS "REGN_END_DT",
		RANK() OVER (PARTITION BY "ORG"."ABN" ORDER BY "ORG"."ABN","ORG"."ORG_END_DT" DESC,"ORG"."ORG_START_DT" DESC) AS "RANK_1"
	FROM 
		"osr.edw.staging.md.asic.proxy::CV_ORGANISATION_C" AS "ORG"
	WHERE EXISTS (
		SELECT * FROM  :ALERT_INFO AS "ALERT"
		WHERE "ORG"."ABN" = "ALERT"."ABN"
	)
)
WHERE "RANK_1" = 1
;
-------------END OF ASIC----------------

---------TPAR---------------------------

TPAR_DATA =
SELECT 
	"TPAR"."PAYER_ABN" AS "ABN",
	TO_NVARCHAR("TPAR"."FINANCIAL_YEAR") AS "FINANCIAL_YEAR",
	SUM("TPAR"."GROSS_PD_AMT") AS "GROSS_PD_AMT",
	SUM("TPAR"."TW_TOTL_AMT")  AS "TW_TOTL_AMT",
	SUM("TPAR"."GST_TOTL_AMT") AS "GST_TOTL_AMT",
	CASE WHEN SUM("TPAR"."GROSS_PD_AMT") > 100000 THEN 'Yes' ELSE 'No' END AS "TPAR_WAGE_GT"

FROM  "osr.edw.staging.td.ato.proxy::TF_TPAR_PAYEE_C"( ) AS "TPAR"
WHERE EXISTS (
		SELECT * FROM  :ALERT_INFO AS "ALERT"
		WHERE "TPAR"."PAYER_ABN" = "ALERT"."ABN"
		AND  LEFT("TPAR"."FINANCIAL_YEAR",4) = "ALERT"."GJAHR"
)

GROUP BY 	"PAYER_ABN",
			"FINANCIAL_YEAR"
;
-------------END OF TPAR--------------

-------------------DESBT-------------------------



DESBT_DATA_A =

SELECT 
	"ABN", 
	COUNT(*) AS "COUNT_APP" 
FROM
(
SELECT DISTINCT * FROM
(
SELECT 
	"A"."ABN",
	"A"."TRAINING_AGREEMENT_TYPE",
	"A"."TRAINEE_ID",
	
--	"B"."GJAHR",
	TO_DATS("A"."COMMENCEMENT_DATE") AS "COMMENCEMENT_DATE",
	TO_DATS("A"."TERMINATION_DATE") AS "TERMINATION_DATE",
	TO_DATS("A"."NOMINAL_COMPLETION_DATE") AS "NOMINAL_COMPLETION_DATE",
	1 AS "COUNT_1"
FROM 
"osr.edw.staging.md.desbt.synonym::CDS_ORG.DSO.TRAINING.active_data" AS "A"

INNER JOIN 

:ALERT_INFO AS "B"
 ON
 "A"."ABN" = "B"."ABN"
WHERE   "A"."TRAINING_AGREEMENT_TYPE" IN ('A','T')
AND TO_DATS("A"."COMMENCEMENT_DATE") <= TO_DATS(CONCAT("B"."GJAHR",'0630'))
AND TO_DATS("A"."NOMINAL_COMPLETION_DATE") >= TO_DATS(CONCAT((TO_INT( "B"."GJAHR") - 1 ),'0701'))
)
)
GROUP BY 
	"ABN"



;
----------------RMS and CRM Data-------------------------



BUT0ID =
SELECT DISTINCT
	"BUT0ID"."PARTNER" AS "PARTNER",
	"BUT0ID"."TYPE" AS "TYPE",
	"BUT0ID"."IDNUMBER" AS "IDNUMBER"
	FROM "osr.edw.staging.md.rms.synonym::CDS_BP.DSO.BUT0ID.active_data" AS "BUT0ID"
WHERE "TYPE" = 'ZABN'
AND EXISTS (
	SELECT * FROM :ALERT_INFO AS "ALERT"
	WHERE "BUT0ID"."IDNUMBER" = "ALERT"."ABN"
)
;


BUT050_DATA =
SELECT DISTINCT
	"ABN"
FROM
(
SELECT 
	"A"."IDNUMBER" AS "ABN",
	"A"."PARTNER",
	"B"."PARTNER2" AS "T_PARTNER",
	"B"."DATE_TO",
	"B"."DATE_FROM",
	"B"."RELTYP"
FROM
	:BUT0ID AS "A"
INNER JOIN 
	"osr.edw.staging.md.rms.synonym::CDS_BP.DSO.BUT050.active_data" AS "B"
ON
	"A"."PARTNER" = "B"."PARTNER1"
WHERE	"B"."RELTYP" = 'ZTRU'
AND     "A"."TYPE" = 'ZABN'


UNION

SELECT 
	"A"."IDNUMBER" AS "ABN",
	"A"."PARTNER",
	"B"."PARTNER1" AS "T_PARTNER",
	"B"."DATE_TO",
	"B"."DATE_FROM",
	"B"."RELTYP"
FROM
	:BUT0ID AS "A"
INNER JOIN 
	"osr.edw.staging.md.rms.synonym::CDS_BP.DSO.BUT050.active_data" AS "B"
ON
	"A"."PARTNER" = "B"."PARTNER2"
WHERE	"B"."RELTYP" = 'ZTRU'
AND     "A"."TYPE" = 'ZABN'

)
;


RMS_PTX_DATA =
SELECT DISTINCT
	"PARTNER",
	"IDNUMBER" AS "ABN",
	"PSOBKEY"  AS "OBJID"
FROM
(
SELECT DISTINCT
	"A"."PARTNER",
	"A"."IDNUMBER",
	"B"."PSOBKEY"
FROM 
	:BUT0ID  AS "A"
INNER JOIN
	(SELECT 
			"PSOBKEY", 
			"PARTNER" 
	FROM "osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DPSOBBPACC.active_data" 
	WHERE "PARTNERACCTYP" = 'PT' AND "XOBSL" <> 'X') AS "B"
ON
	"A"."PARTNER" = "B"."PARTNER"
)
;	
---------------------
/*
PRT_DATA =
SELECT 
"OBJID",
"PARTNER",
"ABN",
"FACT_CAT_SEQ_21" AS  "PRT_LIAB_DATE",
"FACT_CAT_SEQ_20" AS  "QLD_LIAB_DATE",
"FACT_CAT_SEQ_11" AS  "PRT_GRP_STATUS",
"VALID_FROM",
"VALID_TO"
--ROW_NUMBER() OVER (PARTITION BY "PSOBKEY"  ORDER BY "PSOBKEY", "FACT_CAT_SEQ_21","FACT_CAT_SEQ_20","FACT_CAT_SEQ_11","VALID_FROM","VALID_TO") AS "CHECK_1"
FROM
(
SELECT 
"A"."OBJID",
"A"."PARTNER",
"A"."ABN",
"B"."VALUE_GENERIC" AS "FACT_CAT_SEQ_21",
"C"."VALUE_GENERIC" AS "FACT_CAT_SEQ_20", 
"D"."VALUE_GENERIC" AS "FACT_CAT_SEQ_11", 
CASE WHEN "E"."VALID_FROM" < '19000101010101' THEN TO_DATS('19000101') ELSE TO_DATS(LEFT("E"."VALID_FROM",8)) END AS "VALID_FROM" ,
TO_DATS(LEFT("E"."VALID_TO",8)) AS "VALID_TO"
FROM
:RMS_PTX_DATA AS "A"  
INNER JOIN
"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "B" ON
"A"."OBJID" = "B"."OBJID"
INNER JOIN
"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "C" ON
"A"."OBJID" = "C"."OBJID"
INNER JOIN
"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "D" ON
"A"."OBJID" = "D"."OBJID"
INNER JOIN
"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "E" ON
"A"."OBJID" = "E"."OBJID"

WHERE 

	"B"."FACT_TYPE" = 'ZPRE'
AND "B"."VALID_TO" = '99991231235959'
AND "B"."FACT_CAT_SEQ" = '21'

AND "C"."FACT_TYPE" = 'ZPRE'
AND "C"."VALID_TO" = '99991231235959'
AND "C"."FACT_CAT_SEQ" = '20'

AND "D"."FACT_TYPE" = 'ZPRE'
AND "D"."VALID_TO" = '99991231235959'
AND "D"."FACT_CAT_SEQ" = '11'

AND "E"."FACT_TYPE" = 'ZPRE'
AND "E"."VALID_TO" = '99991231235959'
AND "E"."FACT_CAT_SEQ" = '11'

)
;
*/
--------------

PRT_DATA =
SELECT 
"OBJID",
"PARTNER",
"ABN",
"FACT_CAT_SEQ_21" AS  "PRT_LIAB_DATE",
"FACT_CAT_SEQ_20" AS  "QLD_LIAB_DATE",
"FACT_CAT_SEQ_11" AS  "PRT_GRP_STATUS",
CASE WHEN "VALID_FROM" < '19000101' THEN TO_DATS('19000101') ELSE TO_DATS(LEFT("VALID_FROM",8)) END AS "VALID_FROM" ,
TO_DATS(LEFT("VALID_TO",8)) AS "VALID_TO"
FROM
(
SELECT 
"A"."OBJID",
"A"."PARTNER",
"A"."ABN",
"A"."VALID_FROM",
"A"."VALID_TO",
"B"."VALUE_GENERIC" AS "FACT_CAT_SEQ_21",
"C"."VALUE_GENERIC" AS "FACT_CAT_SEQ_20", 
"D"."VALUE_GENERIC" AS "FACT_CAT_SEQ_11"
FROM
	(
	SELECT * FROM
	(
	SELECT
		"OBJID",
		"PARTNER",
		"ABN",
		"VALID_FROM",
		"VALID_TO",
		RANK() OVER (PARTITION BY "OBJID","ABN" ORDER BY   "OBJID","ABN"  , "VALID_FROM" DESC , "VALID_TO" DESC) AS "RANK_1"
	FROM
		(
		SELECT 
			"A"."OBJID",
			"A"."PARTNER",
			"A"."ABN",
			TO_NVARCHAR(LEFT("E"."VALID_FROM",8)) AS "VALID_FROM",
			TO_NVARCHAR(LEFT("E"."VALID_TO",8)) AS "VALID_TO"
		FROM

			:RMS_PTX_DATA  AS "A"  

		INNER JOIN
			"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "E" ON
			"A"."OBJID" = "E"."OBJID"
		WHERE 
				"E"."FACT_TYPE" = 'ZPRE'
		AND 	"E"."FACT_CAT_SEQ" = '11'
		)
	)
	WHERE RANK_1 = 1
	) AS "A"

INNER JOIN
"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "B" ON
"A"."OBJID" = "B"."OBJID"
AND "A"."VALID_FROM" = TO_NVARCHAR(LEFT("B"."VALID_FROM",8))
AND "A"."VALID_TO" = TO_NVARCHAR(LEFT("B"."VALID_TO",8))

INNER JOIN
"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "C" ON
"A"."OBJID" = "C"."OBJID"
AND "A"."VALID_FROM" = TO_NVARCHAR(LEFT("C"."VALID_FROM",8))
AND "A"."VALID_TO" = TO_NVARCHAR(LEFT("C"."VALID_TO",8))

INNER JOIN
"osr.edw.staging.md.rms.synonym::CDS_PSCD.DSO.DFACTS.active_data" AS "D" ON
"A"."OBJID" = "D"."OBJID"
AND "A"."VALID_FROM" = TO_NVARCHAR(LEFT("D"."VALID_FROM",8))
AND "A"."VALID_TO" = TO_NVARCHAR(LEFT("D"."VALID_TO",8))

WHERE 

	"B"."FACT_TYPE" = 'ZPRE'
AND "B"."FACT_CAT_SEQ" = '21'

AND "C"."FACT_TYPE" = 'ZPRE'
AND "C"."FACT_CAT_SEQ" = '20'

AND "D"."FACT_TYPE" = 'ZPRE'
AND "D"."FACT_CAT_SEQ" = '11'

)
;
--------------



CASE_DATA =
SELECT
	"ABN",
	COUNT(*) AS "NO_OPEN_CASE"
FROM
(
SELECT  DISTINCT
	"CASE_ID",
	"CASE_TYPE",
	"CASE_CATEGORY",
	"CASE_PRIORITY",
	"CASE_OUTCOME",
	"ABN",
	"PARTNER",
	"STAT_ORDERNO"
FROM "osr.edw.platform.fra.prt.dt.abn::CV_CRM_BP_CASE"
WHERE	"CASE_OUTCOME" IN ('OPEN', '')
AND 	"CASE_TYPE" 	= 'ZINV'
AND 	"CASE_CATEGORY" = 'PRT'  
AND 	"ABN" IN (SELECT DISTINCT "ABN" FROM :ALERT_INFO)
--AND 	"STAT_ORDERNO" IN ()
)
GROUP BY 
	"ABN"
;


ECI_STATUS_DATA =
SELECT
	"ABN",
	 'Exempt' AS  "ECI_STATUS"
FROM"osr.edw.platform.fra.prt.dt.abn::CV_CRM_BP_CASE"
WHERE "CASE_TYPE" = 'ZEXM' 
AND   "ABN" IN (SELECT DISTINCT "ABN" FROM :ALERT_INFO);
----Case Stat is needed in the output

---------------JOIN RMS Data---------------------
RMS_DATA_OUT =

	SELECT
		"A"."DB_KEY",
		"A"."ALERT_ID",
		"A"."ABN" ,
		"A"."GJAHR",

		"B"."PARTNER" AS "PRT_BP_NO",
		"B"."VALID_FROM" AS "PRT_REG_DT",
		"B"."VALID_TO" AS "PRT_END_DT",
		"B"."PRT_LIAB_DATE" AS "PRT_START_DT",
		"B"."PRT_GRP_STATUS" AS "PRT_GRP_STATUS" ,
		
		CASE WHEN 	"A"."ABN" = "C"."ABN" THEN 'Yes' ELSE 'No' END AS "IS_A_TRUST",
		
		"D"."NO_OPEN_CASE",
		
		CASE WHEN 	"A"."ABN" = "E"."ABN" THEN 'Exempt' ELSE 'Not Exempt' END AS "ECI_STATUS"

FROM 

		:ALERT_INFO AS "A"
LEFT OUTER JOIN

--PRT DATA
		:PRT_DATA AS "B"
ON
		"A"."ABN" = "B"."ABN"
		
-- Rel Status
LEFT OUTER JOIN
		:BUT050_DATA AS "C"
ON
		"A"."ABN" = "C"."ABN"
		
--Case Data
LEFT OUTER JOIN
		:CASE_DATA AS "D"
ON
		"A"."ABN" = "D"."ABN"	
		
--ECI Status
LEFT OUTER JOIN
		:ECI_STATUS_DATA  AS "E"
ON
		"A"."ABN" = "E"."ABN"		
;
------------------WAGE Data-----------------

--Get the BAS Amount for the Qarter the alert belongs to.

--Get  Alert Item to identify the quarter alert belongs to
ALERT_ITEM =
SELECT 
	"DB_KEY",
	"PARENT_KEY",
	"ITEM_NUM",
	"DETECT_OBJ_ID",
	"DETECT_OBJ_ID2",
	"DETECT_OBJ_ID3",
	"QTR" 
FROM
(
SELECT 
	"DB_KEY",
	"PARENT_KEY",
	"ITEM_NUM",
	"DETECT_OBJ_TYPE",
	"DETECT_OBJ_ID",
	"DETECT_OBJ_ID2",
	"DETECT_OBJ_ID3",
	CASE WHEN "DETECT_OBJ_ID2" = 'PT-Q' AND RIGHT("DETECT_OBJ_ID3",2) IN ('Q1','Q2','Q3') THEN RIGHT("DETECT_OBJ_ID3",2) ELSE 
	CASE WHEN "DETECT_OBJ_ID2" = 'PT-Q' AND RIGHT("DETECT_OBJ_ID3",2) IN ('Q4') THEN 'FY' ELSE
	CASE WHEN "DETECT_OBJ_ID2" = 'PT-A' THEN 'FY' ELSE 'FY' END END END AS "QTR",
	RANK() OVER (PARTITION BY "PARENT_KEY" ORDER BY "PARENT_KEY", "ITEM_NUM" DESC) AS "RANK_1"
FROM "osr.apps.acs.synonym::SAPACS.FRA_D_ALERT_ITEM"
WHERE "DETECT_OBJ_TYPE" = 'PT_ABN_WGE'
AND "PARENT_KEY" IN ( SELECT DISTINCT "DB_KEY" FROM  :ALERT_INFO  )
) WHERE RANK_1 = '1'
;

ALERT_DATA_BAS =
SELECT
	"ALERT"."DB_KEY",
	"ALERT"."ALERT_ID",
	"ALERT"."ABN" ,
	"ALERT"."GJAHR",
  	CASE WHEN"ALERT"."DB_KEY" = "ITEM"."PARENT_KEY" THEN  "ITEM"."QTR" ELSE 'FY' END AS "QTR"
FROM
	:ALERT_INFO AS "ALERT"
LEFT OUTER JOIN
	:ALERT_ITEM  AS "ITEM"
ON
	"ALERT"."DB_KEY" = "ITEM"."PARENT_KEY"
;

/*
This table function was taking 15sec to get the results
osr.edw.platform.fra.prt.dt.abn.wages::TF_ABN_WAGES"() , 
To improve the performance we need to directly query the proxy tables (Except for WCQ).
*/


/*
ABN_WAGES =
SELECT
	"ABN",
	"GJAHR",
	SUM("ATO_BAS_TOTL_PMT_FOR_WRK_AMT") AS "ATO_BAS_TOTL_PMT_FOR_WRK_AMT",
	SUM("ATO_ITR_SALARY_WAGES") AS "ATO_ITR_SALARY_WAGES",
	SUM("WCQ_ACT_WAGES") AS "WCQ_ACT_WAGES",
	SUM("ATO_PAYG_NIND_TOTL_GRS_AMT") AS  "ATO_PAYG_NIND_TOTL_GRS_AMT"
FROM "osr.edw.platform.fra.prt.dt.abn.wages::TF_ABN_WAGES"() AS "ABN_WAGE"
WHERE EXISTS (
	SELECT * FROM :ALERT_INFO AS "ALERT"
	WHERE "ABN_WAGE"."ABN" = "ALERT"."ABN"
	AND   "ABN_WAGE"."GJAHR" = "ALERT"."GJAHR"
	AND   "ABN_WAGE"."PERIOD_CATEGORY" = 'PT-A'
)

GROUP BY "ABN", "GJAHR"
;
*/
ABN_WAGES =
SELECT 
"ABN",
"GJAHR",
SUM("ATO_BAS_TOTL_PMT_FOR_WRK_AMT") AS "ATO_BAS_TOTL_PMT_FOR_WRK_AMT",
SUM("ATO_ITR_SALARY_WAGES")         AS "ATO_ITR_SALARY_WAGES",
SUM("WCQ_ACT_WAGES")                AS "WCQ_ACT_WAGES",
SUM("ATO_PAYG_NIND_TOTL_GRS_AMT")   AS "ATO_PAYG_NIND_TOTL_GRS_AMT"	
FROM
(

----Annual BAS NIND ------
SELECT
	"ABN"."ABN"                         AS "ABN",
	"ABN"."FINANCIAL_YEAR"              AS "GJAHR",
	SUM("ABN"."TOTL_PMT_FOR_WRK_AMT")	AS "ATO_BAS_TOTL_PMT_FOR_WRK_AMT",
	0   								AS "ATO_ITR_SALARY_WAGES",
	0   								AS "WCQ_ACT_WAGES",
	0   								AS "ATO_PAYG_NIND_TOTL_GRS_AMT"	
FROM 	"osr.edw.staging.td.ato.proxy::TF_BASNIND_C"() AS "ABN"
WHERE EXISTS (
	SELECT * FROM :ALERT_DATA_BAS AS "ALERT"
	WHERE "ABN"."ABN" = "ALERT"."ABN"
	AND   LEFT(TO_NVARCHAR("ABN"."FINANCIAL_YEAR"),4) = "ALERT"."GJAHR"
	AND   "ABN"."BAS_QTR" = "ALERT"."QTR"
)              
GROUP BY "ABN"."ABN","ABN"."FINANCIAL_YEAR" 

UNION
---ITR NIND-----
SELECT
	"ABN"."ABN"                          AS "ABN",
	LEFT(TO_NVARCHAR("ABN"."INCM_YR"),4) AS  "GJAHR",
	0   								 AS "ATO_BAS_TOTL_PMT_FOR_WRK_AMT",
	SUM("ABN"."SALARY_WAGES") + SUM("ABN"."SUPER_EXPNS")  AS "ATO_ITR_SALARY_WAGES",
	0   								 AS "WCQ_ACT_WAGES",
	0   								 AS "ATO_PAYG_NIND_TOTL_GRS_AMT"	
	
FROM "osr.edw.staging.td.ato.proxy::TF_ITRNIND_C"() AS "ABN"
WHERE EXISTS (
	SELECT * FROM :ALERT_INFO AS "ALERT"
	WHERE "ABN"."ABN" = "ALERT"."ABN"
	AND   	LEFT(TO_NVARCHAR("ABN"."INCM_YR"),4) = "ALERT"."GJAHR"
	
)   
GROUP BY 	"ABN"."ABN","ABN"."INCM_YR"

UNION

---WCQ---------
SELECT
	"ABN"."ABN"     					 AS "ABN",
	"ABN"."GJAHR"       				 AS "GJAHR",
	0									 AS "ATO_BAS_TOTL_PMT_FOR_WRK_AMT",
	0									 AS "ATO_ITR_SALARY_WAGES",
	SUM("ABN"."WCQ_ACT_WAGES")			 AS "WCQ_ACT_WAGES",
	0   								 AS "ATO_PAYG_NIND_TOTL_GRS_AMT"
FROM "osr.edw.platform.fra.prt.dt.abn.wages::TF_ABN_WCQ_WAGES"() AS  "ABN"
WHERE EXISTS (
	SELECT * FROM :ALERT_INFO AS "ALERT"
	WHERE "ABN"."ABN" = "ALERT"."ABN"
	AND   "ABN"."GJAHR" = "ALERT"."GJAHR"
)
GROUP BY 	"ABN"."ABN","ABN"."GJAHR"

UNION
----PAYG NIND--------
SELECT 
	LEFT("ABN"."ABN",11)		         AS "ABN",
	LEFT("ABN"."INCM_YR",4)	             AS "GJAHR",
	0   								 AS "ATO_BAS_TOTL_PMT_FOR_WRK_AMT",
	0   								 AS "ATO_ITR_SALARY_WAGES",
	0   								 AS "WCQ_ACT_WAGES",
	SUM("ABN"."TOTL_GRS_AMT")   	  	 AS "ATO_PAYG_NIND_TOTL_GRS_AMT"
	
FROM "osr.edw.staging.td.ato.proxy::TF_PAYG_NIND_C"() AS "ABN"
WHERE EXISTS (
	SELECT * FROM :ALERT_INFO AS "ALERT"
	WHERE   LEFT("ABN"."ABN",11)                 = "ALERT"."ABN"
	AND   	LEFT(TO_NVARCHAR("ABN"."INCM_YR"),4) = "ALERT"."GJAHR"
	)   GROUP BY "ABN"."ABN","ABN"."INCM_YR"

) GROUP BY "ABN", "GJAHR"

;






--------------JOIN All the Data sets-----

ALL_DATA_SET =

SELECT DISTINCT
		"DB_KEY"	,
		"ALERT_ID"	,
		"ABN"		,
		"GJAHR"		,
		TO_NVARCHAR("GJAHR") AS "FINANCIAL_YEAR",
--ABR
		"TRDNG_NM"		,
		"ANZSIC_CD"		,
		"ANZSIC_TITLE"	,
		"GST_REGN_DT"	,
		"GST_CANCN_DT"	,
		"ENT_TYP_CD"	,
--ASIC
		"REGN_START_DT"	,
		"REGN_END_DT"	,
		"ASIC_STATUS"   ,
--PRT
		"PRT_START_DT"	,
		"PRT_END_DT"	,
		"PRT_REG_DT"	,
		"PRT_GRP_STATUS",
		"PRT_BP_NO",
--ITR
		"ACNT_PERD_BG_DT",
		"ACNT_PERD_END_DT",
		"CNSLDTD_HD_CMPNY",
--CRM
		"ECI_STATUS"	,
--Questions
		"NO_OPEN_CASE"  ,
	--	'' AS "APP_WITH_RANGE",
		CASE WHEN "COUNT_APP" >= 1 and (TO_DECIMAL(("ATO_BAS_WAGES" - ("COUNT_APP" * 30000)), 15, 2)) > 1100000 THEN 'Yes' ELSE 'No'  END AS  "APP_WITH_RANGE",
--		CASE WHEN (TO_DECIMAL(("ATO_ITR_WAGES" - ("COUNT_TRA" * 30000)), 15, 2)) < 1100000 THEN 'No' ELSE 'Yes'  END AS  "TRA_WITH_RANGE",
		"IS_A_TRUST"    ,
		CASE WHEN "TPAR_WAGE_GT" = 'Yes' THEN 'Yes' ELSE 'No' END AS "TPAR_WAGE_GT",
--Wages
		"WCQ_ACT_WAGES" ,
		"ATO_ITR_WAGES" ,
		"ATO_BAS_WAGES" ,
		"ATO_PAYG_WAGES"
		
FROM
(

	SELECT
		"A"."DB_KEY",
		"A"."ALERT_ID",
		"A"."ABN" AS "ABN",
		"A"."GJAHR",
		
		--"B"."TOTL_PMT_FOR_WRK_AMT"  AS "ATO_BAS_WAGES",
		"ABN_WAGES"."ATO_BAS_TOTL_PMT_FOR_WRK_AMT" AS	"ATO_BAS_WAGES",
		
		"C"."ACNT_PERD_BG_DT",
		"C"."ACNT_PERD_END_DT",
		CASE WHEN "C"."CNSLDTD_HD_CMPNY" = 'Y' THEN 'Yes' ELSE 'No' END AS "CNSLDTD_HD_CMPNY" ,
		--"C"."SALARY_WAGES"	AS 	"ATO_ITR_WAGES",
		"ABN_WAGES"."ATO_ITR_SALARY_WAGES" AS	"ATO_ITR_WAGES",
		
		--"D"."ACT_WAGES"		AS	"WCQ_ACT_WAGES",
		"ABN_WAGES"."WCQ_ACT_WAGES" AS	"WCQ_ACT_WAGES",
		
--		"E"."CLNT_TYP",
	    "F"."TRDNG_NM",
		"F"."ANZSIC_CD",
	    "F"."ANZSIC_TITLE",	
	    
	    "F"."ENT_TYP_CD",
		"F"."GST_REGN_DT",
		"F"."GST_CANCN_DT" ,
		
		"G"."REGN_START_DT",
		"G"."REGN_END_DT",
	    "G"."ASIC_STATUS",
	    
	    "H"."TPAR_WAGE_GT",
	    
	    "I"."COUNT_APP",
--	    "J"."COUNT_TRA",
	    --"J"."TOTL_GRS_AMT" AS "ATO_PAYG_WAGES",
	    "ABN_WAGES"."ATO_PAYG_NIND_TOTL_GRS_AMT" AS "ATO_PAYG_WAGES",
	    
	    "K"."PRT_REG_DT",
		"K"."PRT_END_DT",
		"K"."PRT_START_DT",
		"K"."PRT_BP_NO",
		"K"."PRT_GRP_STATUS",
		"K"."IS_A_TRUST",
		"K"."NO_OPEN_CASE",
		"K"."ECI_STATUS"

FROM 

		:ALERT_INFO AS "A"

LEFT OUTER JOIN
--ITR Data
		:ITR_AMT_DATA AS "C"
ON
		"A"."ABN" = "C"."ABN"
	AND "A"."GJAHR" = "C"."FINANCIAL_YEAR"	

LEFT OUTER JOIN
--ABR Code
		:ABR_DATA AS "F"
ON
		"A"."ABN" = "F"."ABN"

LEFT OUTER JOIN
--ASIC Code
		:ASIC_DATA	AS "G"
ON
		"A"."ABN" = "G"."ABN"
LEFT OUTER JOIN
--TPAR Data
		:TPAR_DATA	AS "H"
ON
		"A"."ABN" = "H"."ABN"
	AND "A"."GJAHR" = "H"."FINANCIAL_YEAR"		

LEFT OUTER JOIN
--DESBT Data for Apprentices & Trainees
		:DESBT_DATA_A	AS "I"
ON
		"A"."ABN" = "I"."ABN"

LEFT OUTER JOIN
--RMS Data
	:RMS_DATA_OUT AS "K"
ON
		"A"."ABN"	= "K"."ABN"
	AND "A"."GJAHR" = "K"."GJAHR"		

--Wages ITR,BAS,PAYG,WCQ
LEFT OUTER JOIN
:ABN_WAGES AS "ABN_WAGES"
	 ON	"A"."ABN"	= "ABN_WAGES"."ABN"
	AND "A"."GJAHR" = "ABN_WAGES"."GJAHR"	
)	


	
;
---------------------------------------------------
RETURN
SELECT DISTINCT
		"DB_KEY"	,
		"ALERT_ID"	,
		"ABN"		,
		"GJAHR"		,
		"FINANCIAL_YEAR",
--ABR
		"TRDNG_NM"		,
		"ANZSIC_CD"		,
		"ANZSIC_TITLE"	,
		"GST_REGN_DT"	,
		"GST_CANCN_DT"	,
		"ENT_TYP_CD"	,
--ASIC
		"REGN_START_DT"	,
		"REGN_END_DT"	,
		"ASIC_STATUS"   ,
--PRT
		"PRT_START_DT"	,
		"PRT_END_DT"	,
		"PRT_REG_DT"	,
		"PRT_GRP_STATUS",
		"PRT_BP_NO",
--ITR
		"ACNT_PERD_BG_DT",
		"ACNT_PERD_END_DT",
		"CNSLDTD_HD_CMPNY",
--CRM
		"ECI_STATUS"	,
--Questions
		"NO_OPEN_CASE"  ,
		"APP_WITH_RANGE",
--		"TRA_WITH_RANGE",

		"IS_A_TRUST"    ,
		"TPAR_WAGE_GT"  ,
--Wages
		"WCQ_ACT_WAGES" ,
		"ATO_ITR_WAGES" ,
		"ATO_BAS_WAGES" ,
		"ATO_PAYG_WAGES"
FROM :ALL_DATA_SET 		
;

END;