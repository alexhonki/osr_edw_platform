FUNCTION "osr.edw.platform.fra.prt.dt.abn.ui::TF_ASIC_ORG_DETAIL"( IN IP_ALERT_ID NVARCHAR(20) )
RETURNS TABLE
(
DB_KEY					VARBINARY(16),
DB_KEY_DASH				NVARCHAR(36),
ALERT_ID				NVARCHAR(20),
ABN						NVARCHAR(20),
GJAHR					NVARCHAR(4),
ACN						NVARCHAR(20),
ORG_NAME				NVARCHAR(100),
ORG_TYPE				NVARCHAR(4),
ORG_STATUS				NVARCHAR(4),
ORG_CLASS				NVARCHAR(4),
REGN_START_DT			DAYDATE ,
REGN_END_DT				DAYDATE ,
DEREGISTRATION_CODE		NVARCHAR(4),
PLACE_OF_INCORP			NVARCHAR(30)
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER AS

BEGIN

IF :IP_ALERT_ID IS NULL OR :IP_ALERT_ID = '?' OR :IP_ALERT_ID = 'NULL' OR :IP_ALERT_ID = '' THEN

ALERT_INFO =
                SELECT
                    "DB_KEY",
                    "DB_KEY_DASH",
                    "ALERT_ID",
                    "ABN" ,
                    "GJAHR"
                FROM
                "osr.edw.platform.fra.prt.dt.abn::TF_ALERT_PT_ABN_FY"()
;

ELSE

ALERT_INFO =
                SELECT
                                "DB_KEY",
                                "DB_KEY_DASH",
                                "ALERT_ID",
                                "ABN" ,
                                "GJAHR"
                FROM
                                "osr.edw.platform.fra.prt.dt.abn::TF_ALERT_PT_ABN_FY"()
                WHERE
                                "ALERT_ID" = :IP_ALERT_ID
;

END IF;

RETURN
SELECT
"DB_KEY",
"DB_KEY_DASH",
"ALERT_ID",
"ABN",
"GJAHR",
"ACN",
"ORG_NAME",
"ORG_TYPE",
"ORG_STATUS",
"ORG_CLASS",
"REGN_START_DT",
"REGN_END_DT",
"DEREGISTRATION_CODE",
"PLACE_OF_INCORP"
FROM
(
SELECT DISTINCT
"ALERT"."DB_KEY" AS "DB_KEY",
"ALERT"."ALERT_ID" AS "ALERT_ID",
"ALERT"."ABN" AS "ABN",
"ALERT"."GJAHR" AS "GJAHR",
"ALERT"."DB_KEY_DASH" AS "DB_KEY_DASH",
"DATA"."ORG_NUMBER" AS "ACN",
--"MAP"."ACN" AS "ACN",
"DATA"."ORG_NAME" AS "ORG_NAME",
"DATA"."ORG_TYPE" AS "ORG_TYPE",
"DATA"."ORG_STATUS" AS "ORG_STATUS",
"DATA"."ORG_CLASS" AS "ORG_CLASS",
CASE WHEN "DATA"."REGN_START_DT" IS NOT NULL AND "DATA"."REGN_START_DT" <> '' THEN TO_DATE("DATA"."REGN_START_DT") ELSE NULL END AS "REGN_START_DT",
CASE WHEN "DATA"."REGN_END_DT" IS NOT NULL AND "DATA"."REGN_END_DT" <> '' THEN TO_DATE("DATA"."REGN_END_DT") ELSE NULL END AS "REGN_END_DT",
"DATA"."DEREGISTRATION_CODE" AS "DEREGISTRATION_CODE",
"DATA"."PLACE_OF_INCORP" AS "PLACE_OF_INCORP"
FROM :ALERT_INFO AS "ALERT"
INNER JOIN "osr.edw.staging.md.asic.proxy::TF_ORGANISATION_C"() AS "DATA" ON "ALERT"."ABN" = "DATA"."ABN"
--INNER JOIN JOIN "osr.edw.staging.md.abr.proxy::TF_AGENCY_DATA_C"() AS "MAP" ON "MAP"."ACN" = "DATA"."ORG_NUMBER"
)
;
END;
