FUNCTION "osr.edw.platform.fra.prt.view.bp::TF_GET_NAME_ORG"(iv_str NVARCHAR(400), iv_line_length INTEGER )
RETURNS TABLE (
LINE_NUM INTEGER,
LINE_STR  NVARCHAR(40)
)
LANGUAGE SQLSCRIPT 
SQL SECURITY INVOKER AS 
BEGIN 

DECLARE lv_pointer INTEGER;
DECLARE lv_i INTEGER;
DECLARE lv_j INTEGER;





DECLARE lv_str NVARCHAR(400);
DECLARE lv_stop INTEGER;
DECLARE lv_line_stop INTEGER;
DECLARE lv_line_count INTEGER;
DECLARE lv_line_length INTEGER;
DECLARE lv_line NVARCHAR(40);

DECLARE lv_outer INTEGER;
DECLARE lv_inner INTEGER;

lv_str := ltrim(rtrim(:iv_str));

lv_pointer := 0;
lv_i := 1 ;
lv_j := 1;

lv_outer := 0;
lv_inner := 0;
lv_line_count := 0;

lv_line_length := 0;

lt_dummy = select top 1 0 AS "LINE_NUM", '@' AS "LINE_STR"  FROM "osr.hana.platform.synonym::_SYS_BI.M_FISCAL_CALENDAR";
lt_result = select top 1 0 AS "LINE_NUM", '@' AS "LINE_STR" FROM "osr.hana.platform.synonym::_SYS_BI.M_FISCAL_CALENDAR";

IF :lv_str IS NULL OR :lv_str = '' THEN
	RETURN SELECT  1 AS "LINE_NUM", '' AS "LINE_STR" FROM :lt_dummy;
END IF;

IF length(rtrim(:lv_str)) > :iv_line_length THEN

	WHILE length(rtrim(:lv_str)) > :iv_line_length DO
		
		WHILE LOCATE(:lv_str, char(32), 0 , :lv_i ) <= :iv_line_length  AND :lv_inner <40 DO
			lv_i := :lv_i + 1;	
			lv_inner := :lv_inner + 1;
		END WHILE;
		
		lv_line_length := LOCATE(:lv_str, char(32), 0 , :lv_i );
		WHILE SUBSTRING(:lv_str , :iv_line_length - :lv_j + 1, 1) <> char(32)
		DO
			lv_j := :lv_j +1;
		END WHILE;
		lv_line := SUBSTRING(:lv_str, 0, :iv_line_length - :lv_j + 1 );
		lv_pointer := :iv_line_length - :lv_j + 1;
		
		
		lv_line_count := :lv_line_count + 1;
		lt_result = 
		select top 1 :lv_line_count AS "LINE_NUM", ltrim(rtrim(:lv_line)) AS "LINE_STR"  
		from :lt_dummy
		UNION
		select "LINE_NUM", "LINE_STR"  
		FROM :lt_result;
				
		lv_str = SUBSTRING(:lv_str, :lv_pointer);	
		lv_pointer := 0;
		
		lv_i := 1;
		lv_j := 1;
		lv_inner := 0;
		
	END WHILE;

	lt_result = 
	select top 1 :lv_line_count + 1 AS "LINE_NUM", ltrim(rtrim(:lv_str)) AS "LINE_STR"  
	from :lt_dummy
	UNION
	select "LINE_NUM", "LINE_STR"  
	FROM :lt_result;

	RETURN SELECT "LINE_NUM", "LINE_STR" FROM :lt_result WHERE "LINE_NUM" <> 0;

ELSE

	RETURN SELECT  1 AS "LINE_NUM", ltrim(rtrim(:lv_str)) "LINE_STR" FROM :lt_dummy;

END IF;

END;